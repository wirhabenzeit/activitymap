{
  "version": 3,
  "sources": ["../../earcut/src/earcut.js", "../../ol/webgl.js", "../../ol/webgl/Buffer.js", "../../ol/webgl/ContextEventType.js", "../../ol/webgl/PostProcessingPass.js", "../../ol/vec/mat4.js", "../../ol/webgl/Helper.js", "../../ol/renderer/webgl/Layer.js", "../../ol/webgl/RenderTarget.js", "../../ol/render/webgl/constants.js", "../../ol/render/webgl/utils.js", "../../ol/worker/webgl.js", "../../ol/renderer/webgl/PointsLayer.js", "../../ol/layer/Heatmap.js", "../../ol/renderer/canvas/VectorTileLayer.js", "../../ol/layer/VectorTile.js", "../../ol/node_modules/ol-mapbox-style/node_modules/csscolorparser/csscolorparser.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/color.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/unitbezier/index.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/result.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/function/index.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/reference/v8.json", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js", "../../ol/node_modules/ol-mapbox-style/node_modules/@mapbox/mapbox-gl-style-spec/deref.js", "../../ol/node_modules/ol-mapbox-style/node_modules/mapbox-to-css-font/index.js", "../../ol/node_modules/ol-mapbox-style/src/mapbox.js", "../../ol/node_modules/ol-mapbox-style/src/util.js", "../../ol/node_modules/ol-mapbox-style/src/text.js", "../../ol/node_modules/ol-mapbox-style/src/stylefunction.js", "../../ol/node_modules/ol-mapbox-style/src/shaders.js", "../../ol/node_modules/ol-mapbox-style/src/apply.js", "../../ol/layer/MapboxVector.js", "../../ol/renderer/canvas/VectorImageLayer.js", "../../ol/layer/VectorImage.js", "../../ol/webgl/PaletteTexture.js", "../../ol/webgl/TileTexture.js", "../../ol/renderer/webgl/TileLayer.js", "../../ol/style/expressions.js", "../../ol/webgl/ShaderBuilder.js", "../../ol/layer/WebGLPoints.js", "../../ol/layer/WebGLTile.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n", "/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n", "/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n", "/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n", "/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n", "/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n", "/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  SIZE_PX: 'u_sizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {users: 0, canvas};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const canvas = cacheItem.canvas;\n  const gl = getContext(canvas);\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = getCanvas(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    const gl = this.getGL();\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n    this.uniformLocations_ = {};\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDraw(frameState, disableAlphaBlend) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.SIZE_PX, [size[0], size[1]]);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.uniformLocations_ = {};\n    this.attribLocations_ = {};\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.getGL().uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.getGL();\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n", "/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n", "/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n", "/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesCount] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n", "/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesCount\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesCount;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesCount\n  );\n  instructionsIndex += customAttributesCount;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n", "\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\",69:\\\"`width` or `height` cannot be provided together with `scale`\\\"};class o extends Error{constructor(e){const t=r[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}var i=o;function a(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function s(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],a=t[1],s=t[2],u=t[3],f=t[4],x=t[5];return e[0]=u/n,e[1]=-a/n,e[2]=-s/n,e[3]=o/n,e[4]=(s*x-u*f)/n,e[5]=-(o*x-a*f)/n,e}new Array(6);var u={};function f(e,t,n){n=n||2;var r,o,i,a,s,u,f,l=t&&t.length,c=l?t[0]*n:e.length,v=x(e,0,c,n,!0),d=[];if(!v||v.next===v.prev)return d;if(l&&(v=function(e,t,n,r){var o,i,a,s=[];for(o=0,i=t.length;o<i;o++)(a=x(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===a.next&&(a.steiner=!0),s.push(w(a));for(s.sort(p),o=0;o<s.length;o++)n=b(s[o],n);return n}(e,t,v,n)),e.length>80*n){r=i=e[0],o=a=e[1];for(var y=n;y<c;y+=n)(s=e[y])<r&&(r=s),(u=e[y+1])<o&&(o=u),s>i&&(i=s),u>a&&(a=u);f=0!==(f=Math.max(i-r,a-o))?32767/f:0}return h(v,d,n,r,o,f,0),d}function x(e,t,n,r,o){var i,a;if(o===B(e,t,n,r)>0)for(i=t;i<n;i+=r)a=k(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=k(i,e[i],e[i+1],a);return a&&M(a,a.next)&&(z(a),a=a.next),a}function l(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!M(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(z(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function h(e,t,n,r,o,i,a){if(e){!a&&i&&function(e,t,n,r){var o=e;do{0===o.z&&(o.z=m(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,a,s,u,f=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,s=0,t=0;t<f&&(s++,r=r.nextZ);t++);for(u=f;s>0||u>0&&r;)0!==s&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,s--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,f*=2}while(a>1)}(o)}(e,r,o,i);for(var s,u,f=e;e.prev!==e.next;)if(s=e.prev,u=e.next,i?v(e,r,o,i):c(e))t.push(s.i/n|0),t.push(e.i/n|0),t.push(u.i/n|0),z(e),e=u.next,f=u.next;else if((e=u)===f){a?1===a?h(e=d(l(e),t,n),t,n,r,o,i,2):2===a&&y(e,t,n,r,o,i):h(l(e),t,n,r,o,i,1);break}}}function c(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=t.x,i=n.x,a=r.x,s=t.y,u=n.y,f=r.y,x=o<i?o<a?o:a:i<a?i:a,l=s<u?s<f?s:f:u<f?u:f,h=o>i?o>a?o:a:i>a?i:a,c=s>u?s>f?s:f:u>f?u:f,v=r.next;v!==t;){if(v.x>=x&&v.x<=h&&v.y>=l&&v.y<=c&&A(o,s,i,u,a,f,v.x,v.y)&&Z(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function v(e,t,n,r){var o=e.prev,i=e,a=e.next;if(Z(o,i,a)>=0)return!1;for(var s=o.x,u=i.x,f=a.x,x=o.y,l=i.y,h=a.y,c=s<u?s<f?s:f:u<f?u:f,v=x<l?x<h?x:h:l<h?l:h,d=s>u?s>f?s:f:u>f?u:f,y=x>l?x>h?x:h:l>h?l:h,p=m(c,v,t,n,r),b=m(d,y,t,n,r),g=e.prevZ,w=e.nextZ;g&&g.z>=p&&w&&w.z<=b;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&A(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,w.x>=c&&w.x<=d&&w.y>=v&&w.y<=y&&w!==o&&w!==a&&A(s,x,u,l,f,h,w.x,w.y)&&Z(w.prev,w,w.next)>=0)return!1;w=w.nextZ}for(;g&&g.z>=p;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&A(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;w&&w.z<=b;){if(w.x>=c&&w.x<=d&&w.y>=v&&w.y<=y&&w!==o&&w!==a&&A(s,x,u,l,f,h,w.x,w.y)&&Z(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function d(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!M(o,i)&&F(o,r,r.next,i)&&S(o,i)&&S(i,o)&&(t.push(o.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),z(r),z(r.next),r=e=i),r=r.next}while(r!==e);return l(r)}function y(e,t,n,r,o,i){var a=e;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&E(a,s)){var u=U(a,s);return a=l(a,a.next),u=l(u,u.next),h(a,t,n,r,o,i,0),void h(u,t,n,r,o,i,0)}s=s.next}a=a.next}while(a!==e)}function p(e,t){return e.x-t.x}function b(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=o&&s>a&&(a=s,n=r.x<r.next.x?r:r.next,s===o))return n}r=r.next}while(r!==t);if(!n)return null;var u,f=n,x=n.x,l=n.y,h=1/0;r=n;do{o>=r.x&&r.x>=x&&o!==r.x&&A(i<l?o:a,i,x,l,i<l?a:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),S(r,e)&&(u<h||u===h&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,h=u)),r=r.next}while(r!==f);return n}(e,t);if(!n)return t;var r=U(n,e);return l(r,r.next),l(n,n.next)}function g(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function m(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function w(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function A(e,t,n,r,o,i,a,s){return(o-a)*(t-s)>=(e-a)*(i-s)&&(e-a)*(r-s)>=(n-a)*(t-s)&&(n-a)*(i-s)>=(o-a)*(r-s)}function E(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&F(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(S(e,t)&&S(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||M(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function M(e,t){return e.x===t.x&&e.y===t.y}function F(e,t,n,r){var o=I(Z(e,t,n)),i=I(Z(e,t,r)),a=I(Z(n,r,e)),s=I(Z(n,r,t));return o!==i&&a!==s||(!(0!==o||!T(e,n,t))||(!(0!==i||!T(e,r,t))||(!(0!==a||!T(n,e,r))||!(0!==s||!T(n,t,r)))))}function T(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function S(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function U(e,t){var n=new R(e.i,e.x,e.y),r=new R(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function k(e,t,n,r){var o=new R(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function z(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function R(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function B(e,t,n,r){for(var o=0,i=t,a=n-r;i<n;i+=r)o+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return o}({get exports(){return u},set exports(e){u=e}}).exports=f,u.default=f,f.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,a=Math.abs(B(e,0,i,n));if(o)for(var s=0,u=t.length;s<u;s++){var f=t[s]*n,x=s<u-1?t[s+1]*n:e.length;a-=Math.abs(B(e,f,x,n))}var l=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,c=r[s+1]*n,v=r[s+2]*n;l+=Math.abs((e[h]-e[v])*(e[c+1]-e[h+1])-(e[h]-e[c])*(e[v+1]-e[h+1]))}return 0===a&&0===l?0:Math.abs((l-a)/a)},f.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var a=0;a<t;a++)n.vertices.push(e[o][i][a]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};const N=[],P={vertexPosition:0,indexPosition:0};function C(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function _(e,t,n,r,o,i){const a=3+o,s=e[t+0],u=e[t+1],f=N;f.length=o;for(let n=0;n<f.length;n++)f[n]=e[t+2+n];let x=i?i.vertexPosition:0,l=i?i.indexPosition:0;const h=x/a;return C(n,x,s,u,0),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,1),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,2),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,3),f.length&&n.set(f,x+3),x+=a,r[l++]=h,r[l++]=h+1,r[l++]=h+3,r[l++]=h+1,r[l++]=h+2,r[l++]=h+3,P.vertexPosition=x,P.indexPosition=l,P}function q(e,t,n,r,o,i,s,u,f,x){const l=5+u.length,h=i.length/l,c=[e[t+0],e[t+1]],v=[e[n],e[n+1]],d=a(x,[...c]),y=a(x,[...v]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],a=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),s=[(n[0]-e[0])/a,(n[1]-e[1])/a],u=0===r||0===a?0:Math.acos((f=s[0]*o[0]+s[1]*o[1],x=-1,l=1,Math.min(Math.max(f,x),l)));var f,x,l;return s[0]*i[0]+s[1]*i[1]>0?u:2*Math.PI-u}const g=null!==o;let m=0,w=0;if(null!==r){m=b(d,y,a(x,[...[e[r],e[r+1]]]))}if(g){w=b(y,d,a(x,[...[e[o],e[o+1]]]))}i.push(c[0],c[1],v[0],v[1],p(0,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(1,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(2,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(3,m,w)),i.push(...u),s.push(h,h+1,h+2,h+1,h+3,h+2)}function L(e,t,n,r,o){const i=2+o;let a=t;const s=e.slice(a,a+o);a+=o;const f=e[a++];let x=0;const l=new Array(f-1);for(let t=0;t<f;t++)x+=e[a++],t<f-1&&(l[t]=x);const h=e.slice(a,a+2*x),c=u(h,l,2);for(let e=0;e<c.length;e++)r.push(c[e]+n.length/i);for(let e=0;e<h.length;e+=2)n.push(h[e],h[e+1],...s);return a+2*x}const G=self;G.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesCount,r=t+n,i=new Float32Array(o.renderInstructions),a=i.length/r,s=4*a*(n+e),u=new Uint32Array(6*a),f=new Float32Array(s);let x;for(let e=0;e<i.length;e+=r)x=_(i,e,f,u,n,x);const l=Object.assign({vertexBuffer:f.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);G.postMessage(l,[f.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesCount,r=2,i=new Float32Array(o.renderInstructions);let a=0;const u=o.renderInstructionsTransform,f=[1,0,0,1,0,0];let x,l;for(s(f,u);a<i.length;){l=Array.from(i.slice(a,a+n)),a+=n,x=i[a++];for(let n=0;n<x-1;n++)q(i,a+n*r,a+(n+1)*r,n>0?a+(n-1)*r:null,n<x-2?a+(n+2)*r:null,e,t,l,0,f);a+=x*r}const h=Uint32Array.from(t),c=Float32Array.from(e),v=Object.assign({vertexBuffer:c.buffer,indexBuffer:h.buffer,renderInstructions:i.buffer},o);G.postMessage(v,[c.buffer,h.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesCount,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=L(r,i,e,t,n);const a=Uint32Array.from(t),s=Float32Array.from(e),u=Object.assign({vertexBuffer:s.buffer,indexBuffer:a.buffer,renderInstructions:r.buffer},o);G.postMessage(u,[s.buffer,a.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n", "/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.ready = false;\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    /**\n     * @private\n     */\n    this.hitVertexShader_ = options.hitVertexShader;\n\n    /**\n     * @private\n     */\n    this.hitFragmentShader_ = options.hitFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.hitProgram_;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.generateBuffersRun_ = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n            if (received.generateBuffersRun === this.generateBuffersRun_) {\n              this.ready = true;\n            }\n          }\n\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitProgram_ = this.helper.getProgram(\n        this.hitFragmentShader_,\n        this.hitVertexShader_\n      );\n\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    let world = startWorld;\n    const renderCount = this.indicesBuffer_.getSize();\n\n    do {\n      // apply the current projection transform with the invert of the one used to fill buffers\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: 0,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    message['generateBuffersRun'] = ++this.generateBuffersRun_;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        id: 0,\n        type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderHitDetection(frameState, startWorld, endWorld, worldWidth) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    let world = startWorld;\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_, frameState);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n", "/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => {\n              return this.gradient_;\n            },\n            u_opacity: () => {\n              return this.getOpacity();\n            },\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n", "/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n", "/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n", "// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n", "// @flow\n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n    static blue: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n", "// @flow\n\nimport assert from 'assert';\n\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {ExpressionSpecification} from '../types.js';\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters: any, propertySpec: StylePropertySpecification): ExpressionSpecification {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string): string | ExpressionSpecification {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n", "// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n", "// @flow\n\nimport type {Expression} from './expression.js';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[_: string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>): Scope {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n", "// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\nexport type ResolvedImageTypeT = { kind: 'resolvedImage' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT |\n    ResolvedImageTypeT\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object'\n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: any, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n", "// @flow\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare var Intl: {\n    Collator: Class<Intl$Collator>\n};\n\ndeclare class Intl$Collator {\n    constructor (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    static (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    compare (a: string, b: string): number;\n\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit',\n    usage?: 'sort' | 'search',\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant',\n    ignorePunctuation?: boolean,\n    numeric?: boolean,\n    caseFirst?: 'upper' | 'lower' | 'false'\n}\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n", "// @flow\nimport type Color from '../../util/color.js';\nimport type ResolvedImage from '../types/resolved_image.js';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<mixed> {\n        const serialized: Array<mixed> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: { [key: string]: mixed } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]: Array<mixed>).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n", "// @flow\n\nexport type ResolvedImageOptions = {\n    name: string,\n    available: boolean\n};\n\nexport default class ResolvedImage {\n    name: string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString(): string {\n        return this.name;\n    }\n\n    static fromString(name: string): ResolvedImage | null {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize(): Array<string> {\n        return [\"image\", this.name];\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\nimport type {Type} from './types.js';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value): string {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n", "// @flow\n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\nimport type {Type} from '../types.js';\nimport type {Value}  from '../values.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Literal {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate(): Value {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n", "// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON(): string {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n", "// @flow\n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]: any);\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext): Formatted {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n", "// @flow\n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx: EvaluationContext): null | ResolvedImage {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"image\", this.input.serialize()];\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): null | boolean | number | string | Color | Formatted | ResolvedImage {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n", "// @flow\n\nimport {Color} from './values.js';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {FormattedSection} from './types/formatted.js';\nimport type {GlobalProperties, Feature, FeatureState} from './index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n    formattedSection: ?FormattedSection;\n    availableImages: ?Array<string>;\n    canonical: null | CanonicalTileID;\n    featureTileCoord: ?Point;\n    featureDistanceData: ?FeatureDistanceData;\n\n    _parseColorCache: {[_: string]: ?Color};\n\n    constructor() {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id(): number | null {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType(): null | string {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry(): ?Array<Array<Point>> {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID(): null | CanonicalTileID {\n        return this.canonical;\n    }\n\n    properties(): {[string]: any} {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter(): number {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n", "// @flow\n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\nimport type {Value} from './values.js';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: {[_: string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = (null: any);\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {[_: string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n", "// @flow\n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext): Collator {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n", "// @flow\n\nimport {isValue} from '../values.js';\nimport type {Type} from '../types.js';\nimport {BooleanType} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {GeoJSON, GeoJSONPolygon, GeoJSONMultiPolygon} from '@mapbox/geojson-types';\nimport type {CanonicalTileID} from '../../../source/tile_id.js';\n\ntype GeoJSONPolygons =| GeoJSONPolygon | GeoJSONMultiPolygon;\n\n// minX, minY, maxX, maxY\ntype BBox = [number, number, number, number];\nconst EXTENT = 8192;\n\nfunction updateBBox(bbox: BBox, coord: [number, number]) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1: BBox, bbox2: BBox) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical: CanonicalTileID) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox: BBox, canonical: CanonicalTileID) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical: CanonicalTileID) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Within {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]: Object);\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n", "// @flow\n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\nimport type {Expression} from './expression.js';\n\nfunction isFeatureConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>): boolean {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n", "// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Var {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<string> {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n", "// @flow\n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: ?Type, bindings?: Array<[string, Expression]>): ParsingContext {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n", "// @flow\n\nimport RuntimeError from './runtime_error.js';\n\nimport type {Expression} from './expression.js';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number): number {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n", "// @flow\n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Step {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n", "/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n", "// @flow\n\nimport Color from './color.js';\n\nexport function number(a: number, b: number, t: number): number {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number): Color {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n", "// @flow\n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number): LABColor {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number): HCLColor {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n", "// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number): number {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Interpolate {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): Color {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Coalesce {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n", "// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Let {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined(): boolean {\n        return this.result.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n", "// @flow\n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type, ArrayType} from '../types.js';\nimport type {Value} from '../values.js';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?At {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n", "// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?In {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n", "// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: ?Expression;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?IndexOf {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx): number);\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType, type Type} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Match {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Case {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n", "// @flow\n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: ?Expression;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Slice {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const beginIndex = (this.beginIndex.evaluate(ctx): number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx): number);\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n", "// @flow\n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression, ExpressionRegistration} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx: EvaluationContext, a: any, b: any): boolean { return a === b; }\nfunction neq(ctx: EvaluationContext, a: any, b: any): boolean { return a !== b; }\nfunction lt(ctx: EvaluationContext, a: any, b: any): boolean { return a < b; }\nfunction gt(ctx: EvaluationContext, a: any, b: any): boolean { return a > b; }\nfunction lteq(ctx: EvaluationContext, a: any, b: any): boolean { return a <= b; }\nfunction gteq(ctx: EvaluationContext, a: any, b: any): boolean { return a >= b; }\n\nfunction eqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic: (EvaluationContext, any, any) => boolean, compareWithCollator: (EvaluationContext, any, any, any) => boolean): ExpressionRegistration {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext): boolean {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n\n        serialize(): SerializedExpression {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals: $Call<typeof makeComparison, '==', typeof eq, typeof eqCollate> = makeComparison('==', eq, eqCollate);\nexport const NotEquals: $Call<typeof makeComparison, '!=', typeof neq, typeof neqCollate> = makeComparison('!=', neq, neqCollate);\nexport const LessThan: $Call<typeof makeComparison, '<', typeof lt, typeof ltCollate> = makeComparison('<', lt, ltCollate);\nexport const GreaterThan: $Call<typeof makeComparison, '>', typeof gt, typeof gtCollate> = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual: $Call<typeof makeComparison, '<=', typeof lteq, typeof lteqCollate> = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual: $Call<typeof makeComparison, '>=', typeof gteq, typeof gteqCollate> = makeComparison('>=', gteq, gteqCollate);\n", "// @flow\n\nimport {StringType, NumberType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ndeclare var Intl: {\n    NumberFormat: Class<Intl$NumberFormat>\n};\n\ndeclare class Intl$NumberFormat {\n    constructor (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    static (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    format(a: number): string;\n\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent' | 'unit';\n    currency?: null | string;\n    unit?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    unit: Expression | null;     // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                unit: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext): string {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n", "// @flow\n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Length {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext): any | number {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n", "// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\nimport type {Varargs} from '../compound_expression.js';\nimport type {ExpressionRegistry} from '../expression.js';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n", "// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n", "// @flow\n\nimport type {StylePropertySpecification} from '../style-spec.js';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n", "\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\nimport type {Type, EvaluationKind} from './types.js';\nimport type {Value} from './values.js';\nimport type {Expression} from './expression.js';\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {Result} from '../util/result.js';\nimport type {InterpolationType} from './definitions/interpolate.js';\nimport type {PropertyValueSpecification} from '../types.js';\nimport type {FormattedSection} from './types/formatted.js';\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nexport type Feature = {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'LineString' | 'Polygon',\n    +id?: number | null,\n    +properties: {[_: string]: any},\n    +patterns?: {[_: string]: string},\n    +geometry?: Array<Array<Point>>\n};\n\nexport type FeatureState = {[_: string]: any};\n\nexport type GlobalProperties = $ReadOnly<{\n    zoom: number,\n    pitch?: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    skyRadialProgress?: number,\n    isSupportedScript?: (_: string) => boolean,\n    accumulated?: Value\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[_: string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed): boolean {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n}\n\nexport type SourceExpression = {\n    kind: 'source',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n};\n\nexport type CameraExpression = {\n    kind: 'camera',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type CompositeExpression = {\n    kind: 'composite',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value): ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value): SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType): CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType): CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}): StylePropertyFunction<T> {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input: StylePropertyFunction<T>): {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification} {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n", "// @flow\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: mixed): mixed {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: mixed): mixed {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: { [key: string]: mixed } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n", "{\n  \"$version\": 8,\n  \"$root\": {\n    \"version\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": [\n        8\n      ],\n      \"doc\": \"Style specification version number. Must be 8.\",\n      \"example\": 8\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"doc\": \"A human-readable name for the style.\",\n      \"example\": \"Bright\"\n    },\n    \"metadata\": {\n      \"type\": \"*\",\n      \"doc\": \"Arbitrary properties useful to track with the stylesheet, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'mapbox:'.\"\n    },\n    \"center\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"doc\": \"Default map center in longitude and latitude.  The style center will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": [\n        -73.9749,\n        40.7736\n      ]\n    },\n    \"zoom\": {\n      \"type\": \"number\",\n      \"doc\": \"Default zoom level.  The style zoom will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": 12.5\n    },\n    \"bearing\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"doc\": \"Default bearing, in degrees. The bearing is the compass direction that is \\\"up\\\"; for example, a bearing of 90° orients the map so that east is up. This value will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": 29\n    },\n    \"pitch\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"units\": \"degrees\",\n      \"doc\": \"Default pitch, in degrees. Zero is perpendicular to the surface, for a look straight down at the map, while a greater value like 60 looks ahead towards the horizon. The style pitch will be used only if the map has not been positioned by other means (e.g. map options or user interaction).\",\n      \"example\": 50\n    },\n    \"light\": {\n      \"type\": \"light\",\n      \"doc\": \"The global light source.\",\n      \"example\": {\n        \"anchor\": \"viewport\",\n        \"color\": \"white\",\n        \"intensity\": 0.4\n      }\n    },\n    \"terrain\": {\n      \"type\": \"terrain\",\n      \"doc\": \"A global modifier that elevates layers and markers based on a DEM data source.\"\n    },\n    \"fog\": {\n      \"type\": \"fog\",\n      \"doc\": \"A global effect that fades layers and markers based on their distance to the camera. The fog can be used to approximate the effect of atmosphere on distant objects and enhance the depth perception of the map when used with terrain or 3D features. Note: fog is renamed to atmosphere in the Android and iOS SDKs and planned to be changed in GL-JS v.3.0.0.\"\n    },\n    \"sources\": {\n      \"required\": true,\n      \"type\": \"sources\",\n      \"doc\": \"Data source specifications.\",\n      \"example\": {\n        \"mapbox-streets\": {\n          \"type\": \"vector\",\n          \"url\": \"mapbox://mapbox.mapbox-streets-v6\"\n        }\n      }\n    },\n    \"sprite\": {\n      \"type\": \"string\",\n      \"doc\": \"A base URL for retrieving the sprite image and metadata. The extensions `.png`, `.json` and scale factor `@2x.png` will be automatically appended. This property is required if any layer uses the `background-pattern`, `fill-pattern`, `line-pattern`, `fill-extrusion-pattern`, or `icon-image` properties. The URL must be absolute, containing the [scheme, authority and path components](https://en.wikipedia.org/wiki/URL#Syntax).\",\n      \"example\": \"mapbox://sprites/mapbox/bright-v8\"\n    },\n    \"glyphs\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL template for loading signed-distance-field glyph sets in PBF format. The URL must include `{fontstack}` and `{range}` tokens. This property is required if any layer uses the `text-field` layout property. The URL must be absolute, containing the [scheme, authority and path components](https://en.wikipedia.org/wiki/URL#Syntax).\",\n      \"example\": \"mapbox://fonts/mapbox/{fontstack}/{range}.pbf\"\n    },\n    \"transition\": {\n      \"type\": \"transition\",\n      \"doc\": \"A global transition definition to use as a default across properties, to be used for timing transitions between one value and the next when no property-specific transition is set. Collision-based symbol fading is controlled independently of the style's `transition` property.\",\n      \"example\": {\n        \"duration\": 300,\n        \"delay\": 0\n      }\n    },\n    \"projection\": {\n      \"type\": \"projection\",\n      \"doc\": \"The projection the map should be rendered in. Supported projections are Mercator, Globe, Albers, Equal Earth, Equirectangular (WGS84), Lambert conformal conic, Natural Earth, and Winkel Tripel. Terrain, sky and fog are supported by only Mercator and globe. CustomLayerInterface is not supported outside of Mercator.\",\n      \"example\": {\n        \"name\": \"albers\",\n        \"center\": [-154, 50],\n        \"parallels\": [55, 65]\n      }\n    },\n    \"layers\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"value\": \"layer\",\n      \"doc\": \"Layers will be drawn in the order of this array.\",\n      \"example\": [\n        {\n          \"id\": \"water\",\n          \"source\": \"mapbox-streets\",\n          \"source-layer\": \"water\",\n          \"type\": \"fill\",\n          \"paint\": {\n            \"fill-color\": \"#00ffff\"\n          }\n        }\n      ]\n    }\n  },\n  \"sources\": {\n    \"*\": {\n      \"type\": \"source\",\n      \"doc\": \"Specification of a data source. For vector and raster sources, either TileJSON or a URL to a TileJSON must be provided. For image and video sources, a URL must be provided. For GeoJSON sources, a URL or inline GeoJSON must be provided.\"\n    }\n  },\n  \"source\": [\n    \"source_vector\",\n    \"source_raster\",\n    \"source_raster_dem\",\n    \"source_geojson\",\n    \"source_video\",\n    \"source_image\"\n  ],\n  \"source_vector\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"vector\": {\n          \"doc\": \"A vector tile source.\"\n        }\n      },\n      \"doc\": \"The type of the source.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`.\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"An array of one or more tile source URLs, as in the TileJSON spec.\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        -180,\n        -85.051129,\n        180,\n        85.051129\n      ],\n      \"doc\": \"An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL.\"\n    },\n    \"scheme\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"xyz\": {\n          \"doc\": \"Slippy map tilenames scheme.\"\n        },\n        \"tms\": {\n          \"doc\": \"OSGeo spec scheme.\"\n        }\n      },\n      \"default\": \"xyz\",\n      \"doc\": \"Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Minimum zoom level for which tiles are available, as in the TileJSON spec.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22,\n      \"doc\": \"Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"promoteId\": {\n      \"type\": \"promoteId\",\n      \"doc\": \"A property to use as a feature id (for feature state). Either a property name, or an object of the form `{<sourceLayer>: <propertyName>}`. If specified as a string for a vector tile source, the same property is used across all its source layers. If specified as an object only specified source layers will have id overriden, others will fallback to original feature id\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"A setting to determine whether a source's tiles are cached locally.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"android\": \"9.3.0\",\n          \"ios\": \"5.10.0\"\n        }\n      }\n    },\n    \"*\": {\n      \"type\": \"*\",\n      \"doc\": \"Other keys to configure the data source.\"\n    }\n  },\n  \"source_raster\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"raster\": {\n          \"doc\": \"A raster tile source.\"\n        }\n      },\n      \"doc\": \"The type of the source.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`.\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"An array of one or more tile source URLs, as in the TileJSON spec.\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        -180,\n        -85.051129,\n        180,\n        85.051129\n      ],\n      \"doc\": \"An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Minimum zoom level for which tiles are available, as in the TileJSON spec.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22,\n      \"doc\": \"Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.\"\n    },\n    \"tileSize\": {\n      \"type\": \"number\",\n      \"default\": 512,\n      \"units\": \"pixels\",\n      \"doc\": \"The minimum visual size to display tiles for this layer. Only configurable for raster layers.\"\n    },\n    \"scheme\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"xyz\": {\n          \"doc\": \"Slippy map tilenames scheme.\"\n        },\n        \"tms\": {\n          \"doc\": \"OSGeo spec scheme.\"\n        }\n      },\n      \"default\": \"xyz\",\n      \"doc\": \"Influences the y direction of the tile coordinates. The global-mercator (aka Spherical Mercator) profile is assumed.\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"A setting to determine whether a source's tiles are cached locally.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"android\": \"9.3.0\",\n          \"ios\": \"5.10.0\"\n        }\n      }\n    },\n    \"*\": {\n      \"type\": \"*\",\n      \"doc\": \"Other keys to configure the data source.\"\n    }\n  },\n  \"source_raster_dem\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"raster-dem\": {\n          \"doc\": \"A RGB-encoded raster DEM source\"\n        }\n      },\n      \"doc\": \"The type of the source.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"doc\": \"A URL to a TileJSON resource. Supported protocols are `http:`, `https:`, and `mapbox://<Tileset ID>`.\"\n    },\n    \"tiles\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"An array of one or more tile source URLs, as in the TileJSON spec.\"\n    },\n    \"bounds\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        -180,\n        -85.051129,\n        180,\n        85.051129\n      ],\n      \"doc\": \"An array containing the longitude and latitude of the southwest and northeast corners of the source's bounding box in the following order: `[sw.lng, sw.lat, ne.lng, ne.lat]`. When this property is included in a source, no tiles outside of the given bounds are requested by Mapbox GL.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Minimum zoom level for which tiles are available, as in the TileJSON spec.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 22,\n      \"doc\": \"Maximum zoom level for which tiles are available, as in the TileJSON spec. Data from tiles at the maxzoom are used when displaying the map at higher zoom levels.\"\n    },\n    \"tileSize\": {\n      \"type\": \"number\",\n      \"default\": 512,\n      \"units\": \"pixels\",\n      \"doc\": \"The minimum visual size to display tiles for this layer. Only configurable for raster layers.\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"encoding\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"terrarium\": {\n          \"doc\": \"Terrarium format PNG tiles. See https://aws.amazon.com/es/public-datasets/terrain/ for more info.\"\n        },\n        \"mapbox\": {\n          \"doc\": \"Mapbox Terrain RGB tiles. See https://www.mapbox.com/help/access-elevation-data/#mapbox-terrain-rgb for more info.\"\n        }\n      },\n      \"default\": \"mapbox\",\n      \"doc\": \"The encoding used by this source. Mapbox Terrain RGB is used by default\"\n    },\n    \"volatile\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"A setting to determine whether a source's tiles are cached locally.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"android\": \"9.3.0\",\n          \"ios\": \"5.10.0\"\n        }\n      }\n    },\n    \"*\": {\n      \"type\": \"*\",\n      \"doc\": \"Other keys to configure the data source.\"\n    }\n  },\n  \"source_geojson\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"geojson\": {\n          \"doc\": \"A GeoJSON data source.\"\n        }\n      },\n      \"doc\": \"The data type of the GeoJSON source.\"\n    },\n    \"data\": {\n      \"type\": \"*\",\n      \"doc\": \"A URL to a GeoJSON file, or inline GeoJSON.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"default\": 18,\n      \"doc\": \"Maximum zoom level at which to create vector tiles (higher means greater detail at high zoom levels).\"\n    },\n    \"attribution\": {\n      \"type\": \"string\",\n      \"doc\": \"Contains an attribution to be displayed when the map is shown to a user.\"\n    },\n    \"buffer\": {\n      \"type\": \"number\",\n      \"default\": 128,\n      \"maximum\": 512,\n      \"minimum\": 0,\n      \"doc\": \"Size of the tile buffer on each side. A value of 0 produces no buffer. A value of 512 produces a buffer as wide as the tile itself. Larger values produce fewer rendering artifacts near tile edges and slower performance.\"\n    },\n    \"filter\": {\n      \"type\": \"*\",\n      \"doc\": \"An expression for filtering features prior to processing them for rendering.\"\n    },\n    \"tolerance\": {\n      \"type\": \"number\",\n      \"default\": 0.375,\n      \"doc\": \"Douglas-Peucker simplification tolerance (higher means simpler geometries and faster performance).\"\n    },\n    \"cluster\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If the data is a collection of point features, setting this to true clusters the points by radius into groups. Cluster groups become new `Point` features in the source with additional properties:\\n * `cluster` Is `true` if the point is a cluster \\n * `cluster_id` A unqiue id for the cluster to be used in conjunction with the [cluster inspection methods](https://www.mapbox.com/mapbox-gl-js/api/#geojsonsource#getclusterexpansionzoom)\\n * `point_count` Number of original points grouped into this cluster\\n * `point_count_abbreviated` An abbreviated point count\"\n    },\n    \"clusterRadius\": {\n      \"type\": \"number\",\n      \"default\": 50,\n      \"minimum\": 0,\n      \"doc\": \"Radius of each cluster if clustering is enabled. A value of 512 indicates a radius equal to the width of a tile.\"\n    },\n    \"clusterMaxZoom\": {\n      \"type\": \"number\",\n      \"doc\": \"Max zoom on which to cluster points if clustering is enabled. Defaults to one zoom less than maxzoom (so that last zoom features are not clustered). Clusters are re-evaluated at integer zoom levels so setting clusterMaxZoom to 14 means the clusters will be displayed until z15.\"\n    },\n    \"clusterMinPoints\": {\n      \"type\": \"number\",\n      \"doc\": \"Minimum number of points necessary to form a cluster if clustering is enabled. Defaults to `2`.\"\n    },\n    \"clusterProperties\": {\n      \"type\": \"*\",\n      \"doc\": \"An object defining custom properties on the generated clusters if clustering is enabled, aggregating values from clustered points. Has the form `{\\\"property_name\\\": [operator, map_expression]}`. `operator` is any expression function that accepts at least 2 operands (e.g. `\\\"+\\\"` or `\\\"max\\\"`) — it accumulates the property value from clusters/points the cluster contains; `map_expression` produces the value of a single point.\\n\\nExample: `{\\\"sum\\\": [\\\"+\\\", [\\\"get\\\", \\\"scalerank\\\"]]}`.\\n\\nFor more advanced use cases, in place of `operator`, you can use a custom reduce expression that references a special `[\\\"accumulated\\\"]` value, e.g.:\\n`{\\\"sum\\\": [[\\\"+\\\", [\\\"accumulated\\\"], [\\\"get\\\", \\\"sum\\\"]], [\\\"get\\\", \\\"scalerank\\\"]]}`\"\n    },\n    \"lineMetrics\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"Whether to calculate line distance metrics. This is required for line layers that specify `line-gradient` values.\"\n    },\n    \"generateId\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"Whether to generate ids for the geojson features. When enabled, the `feature.id` property will be auto assigned based on its index in the `features` array, over-writing any previous values.\"\n    },\n    \"promoteId\": {\n      \"type\": \"promoteId\",\n      \"doc\": \"A property to use as a feature id (for feature state). Either a property name, or an object of the form `{<sourceLayer>: <propertyName>}`.\"\n    }\n  },\n  \"source_video\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"video\": {\n          \"doc\": \"A video data source.\"\n        }\n      },\n      \"doc\": \"The data type of the video source.\"\n    },\n    \"urls\": {\n      \"required\": true,\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"doc\": \"URLs to video content in order of preferred format.\"\n    },\n    \"coordinates\": {\n      \"required\": true,\n      \"doc\": \"Corners of video specified in longitude, latitude pairs.\",\n      \"type\": \"array\",\n      \"length\": 4,\n      \"value\": {\n        \"type\": \"array\",\n        \"length\": 2,\n        \"value\": \"number\",\n        \"doc\": \"A single longitude, latitude pair.\"\n      }\n    }\n  },\n  \"source_image\": {\n    \"type\": {\n      \"required\": true,\n      \"type\": \"enum\",\n      \"values\": {\n        \"image\": {\n          \"doc\": \"An image data source.\"\n        }\n      },\n      \"doc\": \"The data type of the image source.\"\n    },\n    \"url\": {\n      \"required\": true,\n      \"type\": \"string\",\n      \"doc\": \"URL that points to an image.\"\n    },\n    \"coordinates\": {\n      \"required\": true,\n      \"doc\": \"Corners of image specified in longitude, latitude pairs.\",\n      \"type\": \"array\",\n      \"length\": 4,\n      \"value\": {\n        \"type\": \"array\",\n        \"length\": 2,\n        \"value\": \"number\",\n        \"doc\": \"A single longitude, latitude pair.\"\n      }\n    }\n  },\n  \"layer\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"doc\": \"Unique layer name.\",\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"fill\": {\n          \"doc\": \"A filled polygon with an optional stroked border.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"line\": {\n          \"doc\": \"A stroked line.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"symbol\": {\n          \"doc\": \"An icon or a text label.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"circle\": {\n          \"doc\": \"A filled circle.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"heatmap\": {\n          \"doc\": \"A heatmap.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.41.0\",\n              \"android\": \"6.0.0\",\n              \"ios\": \"4.0.0\",\n              \"macos\": \"0.7.0\"\n            }\n          }\n        },\n        \"fill-extrusion\": {\n          \"doc\": \"An extruded (3D) polygon.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.27.0\",\n              \"android\": \"5.1.0\",\n              \"ios\": \"3.6.0\",\n              \"macos\": \"0.5.0\"\n            }\n          }\n        },\n        \"raster\": {\n          \"doc\": \"Raster map textures such as satellite imagery.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"hillshade\": {\n          \"doc\": \"Client-side hillshading visualization based on DEM data. Currently, the implementation only supports Mapbox Terrain RGB and Mapzen Terrarium tiles.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.43.0\",\n              \"android\": \"6.0.0\",\n              \"ios\": \"4.0.0\",\n              \"macos\": \"0.7.0\"\n            }\n          }\n        },\n        \"background\": {\n          \"doc\": \"The background color or pattern of the map.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"0.10.0\",\n              \"android\": \"2.0.1\",\n              \"ios\": \"2.0.0\",\n              \"macos\": \"0.1.0\"\n            }\n          }\n        },\n        \"sky\": {\n          \"doc\": \"A spherical dome around the map that is always rendered behind all other layers.\",\n          \"sdk-support\": {\n            \"basic functionality\": {\n              \"js\": \"2.0.0\",\n              \"ios\": \"10.0.0\",\n              \"android\": \"10.0.0\"\n            }\n          }\n        }\n      },\n      \"doc\": \"Rendering type of this layer.\",\n      \"required\": true\n    },\n    \"metadata\": {\n      \"type\": \"*\",\n      \"doc\": \"Arbitrary properties useful to track with the layer, but do not influence rendering. Properties should be prefixed to avoid collisions, like 'mapbox:'.\"\n    },\n    \"source\": {\n      \"type\": \"string\",\n      \"doc\": \"Name of a source description to be used for this layer. Required for all layer types except `background`.\"\n    },\n    \"source-layer\": {\n      \"type\": \"string\",\n      \"doc\": \"Layer to use from a vector tile source. Required for vector tile sources; prohibited for all other source types, including GeoJSON sources.\"\n    },\n    \"minzoom\": {\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"maximum\": 24,\n      \"doc\": \"The minimum zoom level for the layer. At zoom levels less than the minzoom, the layer will be hidden.\"\n    },\n    \"maxzoom\": {\n      \"type\": \"number\",\n      \"minimum\": 0,\n      \"maximum\": 24,\n      \"doc\": \"The maximum zoom level for the layer. At zoom levels equal to or greater than the maxzoom, the layer will be hidden.\"\n    },\n    \"filter\": {\n      \"type\": \"filter\",\n      \"doc\": \"An expression specifying conditions on source features. Only features that match the filter are displayed. Zoom expressions in filters are only evaluated at integer zoom levels. The `[\\\"feature-state\\\", ...]` expression is not supported in filter expressions.  The `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions are supported only for filter expressions on the symbol layer.\"\n    },\n    \"layout\": {\n      \"type\": \"layout\",\n      \"doc\": \"Layout properties for the layer.\"\n    },\n    \"paint\": {\n      \"type\": \"paint\",\n      \"doc\": \"Default paint properties for this layer.\"\n    }\n  },\n  \"layout\": [\n    \"layout_fill\",\n    \"layout_line\",\n    \"layout_circle\",\n    \"layout_heatmap\",\n    \"layout_fill-extrusion\",\n    \"layout_symbol\",\n    \"layout_raster\",\n    \"layout_hillshade\",\n    \"layout_background\",\n    \"layout_sky\"\n  ],\n  \"layout_background\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_sky\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_fill\": {\n    \"fill-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_circle\": {\n    \"circle-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.2.0\",\n          \"ios\": \"5.9.0\",\n          \"macos\": \"0.16.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.2.0\",\n          \"ios\": \"5.9.0\",\n          \"macos\": \"0.16.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_heatmap\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_fill-extrusion\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    },\n    \"fill-extrusion-edge-radius\": {\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"Radius of a fill extrusion edge in meters. If not zero, rounds extrusion edges for a smoother appearance.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"v2.10.0\",\n          \"android\": \"10.7.0\",\n          \"ios\": \"10.7.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_line\": {\n    \"line-cap\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"butt\": {\n          \"doc\": \"A cap with a squared-off end which is drawn to the exact endpoint of the line.\"\n        },\n        \"round\": {\n          \"doc\": \"A cap with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.\"\n        },\n        \"square\": {\n          \"doc\": \"A cap with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.\"\n        }\n      },\n      \"default\": \"butt\",\n      \"doc\": \"The display of line endings.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"2.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-join\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"bevel\": {\n          \"doc\": \"A join with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.\"\n        },\n        \"round\": {\n          \"doc\": \"A join with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line.\"\n        },\n        \"miter\": {\n          \"doc\": \"A join with a sharp, angled corner which is drawn with the outer sides beyond the endpoint of the path until they meet.\"\n        }\n      },\n      \"default\": \"miter\",\n      \"doc\": \"The display of lines when joining.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-miter-limit\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"doc\": \"Used to automatically convert miter joins to bevel joins for sharp angles.\",\n      \"requires\": [\n        {\n          \"line-join\": \"miter\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-round-limit\": {\n      \"type\": \"number\",\n      \"default\": 1.05,\n      \"doc\": \"Used to automatically convert round joins to miter joins for shallow angles.\",\n      \"requires\": [\n        {\n          \"line-join\": \"round\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"1.2.0\",\n          \"android\": \"9.1.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_symbol\": {\n    \"symbol-placement\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"point\": {\n          \"doc\": \"The label is placed at the point where the geometry is located.\"\n        },\n        \"line\": {\n          \"doc\": \"The label is placed along the line of the geometry. Can only be used on `LineString` and `Polygon` geometries.\"\n        },\n        \"line-center\": {\n          \"doc\": \"The label is placed at the center of the line of the geometry. Can only be used on `LineString` and `Polygon` geometries. Note that a single feature in a vector tile may contain multiple line geometries.\"\n        }\n      },\n      \"default\": \"point\",\n      \"doc\": \"Label placement relative to its geometry.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"`line-center` value\": {\n          \"js\": \"0.47.0\",\n          \"android\": \"6.4.0\",\n          \"ios\": \"4.3.0\",\n          \"macos\": \"0.10.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-spacing\": {\n      \"type\": \"number\",\n      \"default\": 250,\n      \"minimum\": 1,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance between two symbol anchors.\",\n      \"requires\": [\n        {\n          \"symbol-placement\": \"line\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-avoid-edges\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the symbols will not cross tile edges to avoid mutual collisions. Recommended in layers that don't have enough padding in the vector tile to prevent collisions, or if it is a point symbol layer placed after a line symbol layer. When using a client that supports global collision detection, like Mapbox GL JS version 0.42.0 or greater, enabling this property is not needed to prevent clipped labels at tile boundaries.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"symbol-sort-key\": {\n      \"type\": \"number\",\n      \"doc\": \"Sorts features in ascending order based on this value. Features with lower sort keys are drawn and placed first.  When `icon-allow-overlap` or `text-allow-overlap` is `false`, features with a lower sort key will have priority during placement. When `icon-allow-overlap` or `text-allow-overlap` is set to `true`, features with a higher sort key will overlap over features with a lower sort key.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.53.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.11.0\",\n          \"macos\": \"0.14.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.53.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.11.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"symbol-z-order\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"auto\": {\n          \"doc\": \"Sorts symbols by `symbol-sort-key` if set. Otherwise, sorts symbols by their y-position relative to the viewport if `icon-allow-overlap` or `text-allow-overlap` is set to `true` or `icon-ignore-placement` or `text-ignore-placement` is `false`.\"\n        },\n        \"viewport-y\": {\n          \"doc\": \"Sorts symbols by their y-position relative to the viewport if `icon-allow-overlap` or `text-allow-overlap` is set to `true` or `icon-ignore-placement` or `text-ignore-placement` is `false`.\"\n        },\n        \"source\": {\n          \"doc\": \"Sorts symbols by `symbol-sort-key` if set. Otherwise, no sorting is applied; symbols are rendered in the same order as the source data.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"Determines whether overlapping symbols in the same layer are rendered in the order that they appear in the data source or by their y-position relative to the viewport. To control the order and prioritization of symbols otherwise, use `symbol-sort-key`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.6.0\",\n          \"ios\": \"4.5.0\",\n          \"macos\": \"0.12.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-allow-overlap\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the icon will be visible even if it collides with other previously drawn symbols.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-ignore-placement\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, other symbols can be visible even if they collide with the icon.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-optional\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, text will display without their corresponding icons when the icon collides with other symbols and the text does not.\",\n      \"requires\": [\n        \"icon-image\",\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-rotation-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, aligns icons east-west. When `symbol-placement` is set to `line` or `line-center`, aligns icon x-axes with the line.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Produces icons whose x-axes are aligned with the x-axis of the viewport, regardless of the value of `symbol-placement`.\"\n        },\n        \"auto\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, this is equivalent to `viewport`. When `symbol-placement` is set to `line` or `line-center`, this is equivalent to `map`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"In combination with `symbol-placement`, determines the rotation behavior of icons.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"`auto` value\": {\n          \"js\": \"0.25.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-size\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"units\": \"factor of the original icon size\",\n      \"doc\": \"Scales the original size of the icon by the provided factor. The new pixel size of the image will be the original pixel size multiplied by `icon-size`. 1 is the original size; 3 triples the size of the image.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-text-fit\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"none\": {\n          \"doc\": \"The icon is displayed at its intrinsic aspect ratio.\"\n        },\n        \"width\": {\n          \"doc\": \"The icon is scaled in the x-dimension to fit the width of the text.\"\n        },\n        \"height\": {\n          \"doc\": \"The icon is scaled in the y-dimension to fit the height of the text.\"\n        },\n        \"both\": {\n          \"doc\": \"The icon is scaled in both x- and y-dimensions.\"\n        }\n      },\n      \"default\": \"none\",\n      \"doc\": \"Scales the icon to fit around the associated text.\",\n      \"requires\": [\n        \"icon-image\",\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        },\n        \"stretchable icons\": {\n          \"js\": \"1.6.0\",\n          \"android\": \"9.2.0\",\n          \"ios\": \"5.8.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-text-fit-padding\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 4,\n      \"default\": [\n        0,\n        0,\n        0,\n        0\n      ],\n      \"units\": \"pixels\",\n      \"doc\": \"Size of the additional area added to dimensions determined by `icon-text-fit`, in clockwise order: top, right, bottom, left.\",\n      \"requires\": [\n        \"icon-image\",\n        \"text-field\",\n        {\n          \"icon-text-fit\": [\n            \"both\",\n            \"width\",\n            \"height\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-image\": {\n      \"type\": \"resolvedImage\",\n      \"doc\": \"Name of image in sprite to use for drawing an image background.\",\n      \"tokens\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"doc\": \"Rotates the icon clockwise.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-padding\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"doc\": \"Size of the additional area around the icon bounding box used for detecting symbol collisions.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-keep-upright\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the icon may be flipped to prevent it from being rendered upside-down.\",\n      \"requires\": [\n        \"icon-image\",\n        {\n          \"icon-rotation-alignment\": \"map\"\n        },\n        {\n          \"symbol-placement\": [\n            \"line\",\n            \"line-center\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-offset\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"doc\": \"Offset distance of icon from its anchor. Positive values indicate right and down, while negative values indicate left and up. Each component is multiplied by the value of `icon-size` to obtain the final offset in pixels. When combined with `icon-rotate` the offset will be as if the rotated direction was up.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"center\": {\n          \"doc\": \"The center of the icon is placed closest to the anchor.\"\n        },\n        \"left\": {\n          \"doc\": \"The left side of the icon is placed closest to the anchor.\"\n        },\n        \"right\": {\n          \"doc\": \"The right side of the icon is placed closest to the anchor.\"\n        },\n        \"top\": {\n          \"doc\": \"The top of the icon is placed closest to the anchor.\"\n        },\n        \"bottom\": {\n          \"doc\": \"The bottom of the icon is placed closest to the anchor.\"\n        },\n        \"top-left\": {\n          \"doc\": \"The top left corner of the icon is placed closest to the anchor.\"\n        },\n        \"top-right\": {\n          \"doc\": \"The top right corner of the icon is placed closest to the anchor.\"\n        },\n        \"bottom-left\": {\n          \"doc\": \"The bottom left corner of the icon is placed closest to the anchor.\"\n        },\n        \"bottom-right\": {\n          \"doc\": \"The bottom right corner of the icon is placed closest to the anchor.\"\n        }\n      },\n      \"default\": \"center\",\n      \"doc\": \"Part of the icon placed closest to the anchor.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The icon is aligned to the plane of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The icon is aligned to the plane of the viewport.\"\n        },\n        \"auto\": {\n          \"doc\": \"Automatically matches the value of `icon-rotation-alignment`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"Orientation of icon when map is pitched.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The text is aligned to the plane of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The text is aligned to the plane of the viewport.\"\n        },\n        \"auto\": {\n          \"doc\": \"Automatically matches the value of `text-rotation-alignment`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"Orientation of text when map is pitched.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        },\n        \"`auto` value\": {\n          \"js\": \"0.25.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-rotation-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, aligns text east-west. When `symbol-placement` is set to `line` or `line-center`, aligns text x-axes with the line.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Produces glyphs whose x-axes are aligned with the x-axis of the viewport, regardless of the value of `symbol-placement`.\"\n        },\n        \"auto\": {\n          \"doc\": \"When `symbol-placement` is set to `point`, this is equivalent to `viewport`. When `symbol-placement` is set to `line` or `line-center`, this is equivalent to `map`.\"\n        }\n      },\n      \"default\": \"auto\",\n      \"doc\": \"In combination with `symbol-placement`, determines the rotation behavior of the individual glyphs forming the text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"`auto` value\": {\n          \"js\": \"0.25.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-field\": {\n      \"type\": \"formatted\",\n      \"default\": \"\",\n      \"tokens\": true,\n      \"doc\": \"Value to use for a text label. If a plain `string` is provided, it will be treated as a `formatted` with default/inherited formatting options. SDF images are not supported in formatted text and will be ignored.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-font\": {\n      \"type\": \"array\",\n      \"value\": \"string\",\n      \"default\": [\n        \"Open Sans Regular\",\n        \"Arial Unicode MS Regular\"\n      ],\n      \"doc\": \"Font stack to use for displaying text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-size\": {\n      \"type\": \"number\",\n      \"default\": 16,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"doc\": \"Font size.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-max-width\": {\n      \"type\": \"number\",\n      \"default\": 10,\n      \"minimum\": 0,\n      \"units\": \"ems\",\n      \"doc\": \"The maximum line width for text wrapping.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"symbol-placement\": [\n            \"point\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-line-height\": {\n      \"type\": \"number\",\n      \"default\": 1.2,\n      \"units\": \"ems\",\n      \"doc\": \"Text leading value for multi-line text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.0.0\",\n          \"ios\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-letter-spacing\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"units\": \"ems\",\n      \"doc\": \"Text tracking amount.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.40.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-justify\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"auto\": {\n          \"doc\": \"The text is aligned towards the anchor position.\"\n        },\n        \"left\": {\n          \"doc\": \"The text is aligned to the left.\"\n        },\n        \"center\": {\n          \"doc\": \"The text is centered.\"\n        },\n        \"right\": {\n          \"doc\": \"The text is aligned to the right.\"\n        }\n      },\n      \"default\": \"center\",\n      \"doc\": \"Text justification options.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        },\n        \"auto\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-radial-offset\": {\n      \"type\": \"number\",\n      \"units\": \"ems\",\n      \"default\": 0,\n      \"doc\": \"Radial offset of text, in the direction of the symbol's anchor. Useful in combination with `text-variable-anchor`, which defaults to using the two-dimensional `text-offset` if present.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"property-type\": \"data-driven\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      }\n    },\n    \"text-variable-anchor\": {\n      \"type\": \"array\",\n      \"value\": \"enum\",\n      \"values\": {\n        \"center\": {\n          \"doc\": \"The center of the text is placed closest to the anchor.\"\n        },\n        \"left\": {\n          \"doc\": \"The left side of the text is placed closest to the anchor.\"\n        },\n        \"right\": {\n          \"doc\": \"The right side of the text is placed closest to the anchor.\"\n        },\n        \"top\": {\n          \"doc\": \"The top of the text is placed closest to the anchor.\"\n        },\n        \"bottom\": {\n          \"doc\": \"The bottom of the text is placed closest to the anchor.\"\n        },\n        \"top-left\": {\n          \"doc\": \"The top left corner of the text is placed closest to the anchor.\"\n        },\n        \"top-right\": {\n          \"doc\": \"The top right corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-left\": {\n          \"doc\": \"The bottom left corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-right\": {\n          \"doc\": \"The bottom right corner of the text is placed closest to the anchor.\"\n        }\n      },\n      \"requires\": [\n        \"text-field\",\n        {\n          \"symbol-placement\": [\n            \"point\"\n          ]\n        }\n      ],\n      \"doc\": \"To increase the chance of placing high-priority labels on the map, you can provide an array of `text-anchor` locations: the renderer will attempt to place the label at each location, in order, before moving onto the next label. Use `text-justify: auto` to choose justification based on anchor position. To apply an offset, use the `text-radial-offset` or the two-dimensional `text-offset`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.54.0\",\n          \"android\": \"7.4.0\",\n          \"ios\": \"4.10.0\",\n          \"macos\": \"0.14.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"center\": {\n          \"doc\": \"The center of the text is placed closest to the anchor.\"\n        },\n        \"left\": {\n          \"doc\": \"The left side of the text is placed closest to the anchor.\"\n        },\n        \"right\": {\n          \"doc\": \"The right side of the text is placed closest to the anchor.\"\n        },\n        \"top\": {\n          \"doc\": \"The top of the text is placed closest to the anchor.\"\n        },\n        \"bottom\": {\n          \"doc\": \"The bottom of the text is placed closest to the anchor.\"\n        },\n        \"top-left\": {\n          \"doc\": \"The top left corner of the text is placed closest to the anchor.\"\n        },\n        \"top-right\": {\n          \"doc\": \"The top right corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-left\": {\n          \"doc\": \"The bottom left corner of the text is placed closest to the anchor.\"\n        },\n        \"bottom-right\": {\n          \"doc\": \"The bottom right corner of the text is placed closest to the anchor.\"\n        }\n      },\n      \"default\": \"center\",\n      \"doc\": \"Part of the text placed closest to the anchor.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"!\": \"text-variable-anchor\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-max-angle\": {\n      \"type\": \"number\",\n      \"default\": 45,\n      \"units\": \"degrees\",\n      \"doc\": \"Maximum angle change between adjacent characters.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"symbol-placement\": [\n            \"line\",\n            \"line-center\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-writing-mode\": {\n      \"type\": \"array\",\n      \"value\": \"enum\",\n      \"values\": {\n        \"horizontal\": {\n          \"doc\": \"If a text's language supports horizontal writing mode, symbols would be laid out horizontally.\"\n        },\n        \"vertical\": {\n          \"doc\": \"If a text's language supports vertical writing mode, symbols would be laid out vertically.\"\n        }\n      },\n      \"doc\": \"The property allows control over a symbol's orientation. Note that the property values act as a hint, so that a symbol whose language doesn’t support the provided orientation will be laid out in its natural orientation. Example: English point symbol will be rendered horizontally even if array value contains single 'vertical' enum value. For symbol with point placement, the order of elements in an array define priority order for the placement of an orientation variant. For symbol with line placement, the default text writing mode is either ['horizontal', 'vertical'] or ['vertical', 'horizontal'], the order doesn't affect the placement.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"1.3.0\",\n          \"android\": \"8.3.0\",\n          \"ios\": \"5.3.0\",\n          \"macos\": \"0.15.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"units\": \"degrees\",\n      \"doc\": \"Rotates the text clockwise.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-padding\": {\n      \"type\": \"number\",\n      \"default\": 2,\n      \"minimum\": 0,\n      \"units\": \"pixels\",\n      \"doc\": \"Size of the additional area around the text bounding box used for detecting symbol collisions.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-keep-upright\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"doc\": \"If true, the text may be flipped vertically to prevent it from being rendered upside-down.\",\n      \"requires\": [\n        \"text-field\",\n        {\n          \"text-rotation-alignment\": \"map\"\n        },\n        {\n          \"symbol-placement\": [\n            \"line\",\n            \"line-center\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-transform\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"none\": {\n          \"doc\": \"The text is not altered.\"\n        },\n        \"uppercase\": {\n          \"doc\": \"Forces all letters to be displayed in uppercase.\"\n        },\n        \"lowercase\": {\n          \"doc\": \"Forces all letters to be displayed in lowercase.\"\n        }\n      },\n      \"default\": \"none\",\n      \"doc\": \"Specifies how to capitalize text, similar to the CSS `text-transform` property.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-offset\": {\n      \"type\": \"array\",\n      \"doc\": \"Offset distance of text from its anchor. Positive values indicate right and down, while negative values indicate left and up. If used with text-variable-anchor, input values will be taken as absolute values. Offsets along the x- and y-axis will be applied automatically based on the anchor position.\",\n      \"value\": \"number\",\n      \"units\": \"ems\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"requires\": [\n        \"text-field\",\n        {\n          \"!\": \"text-radial-offset\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.35.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-allow-overlap\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, the text will be visible even if it collides with other previously drawn symbols.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-ignore-placement\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, other symbols can be visible even if they collide with the text.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-optional\": {\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"doc\": \"If true, icons will display without their corresponding text when the text collides with other symbols and the icon does not.\",\n      \"requires\": [\n        \"text-field\",\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_raster\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"layout_hillshade\": {\n    \"visibility\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"visible\": {\n          \"doc\": \"The layer is shown.\"\n        },\n        \"none\": {\n          \"doc\": \"The layer is not shown.\"\n        }\n      },\n      \"default\": \"visible\",\n      \"doc\": \"Whether this layer is displayed.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"filter\": {\n    \"type\": \"array\",\n    \"value\": \"*\",\n    \"doc\": \"A filter selects specific features from a layer.\"\n  },\n  \"filter_symbol\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a symbol. Symbols support dynamic filtering, meaning this expression can use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\", \"pitch\", \"distance-from-center\"]\n    }\n  },\n  \"filter_fill\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a polygon. Fill layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_line\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a Polygon or LineString. Line layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_circle\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a circle. Circle layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_fill-extrusion\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression which determines whether or not to display a Polygon. Fill-extrusion layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_heatmap\": {\n    \"type\": \"boolean\",\n    \"doc\": \"Expression used to determine whether a point is being displayed or not. Heatmap layer does NOT support dynamic filtering, meaning this expression can NOT use the `[\\\"pitch\\\"]` and `[\\\"distance-from-center\\\"]` expressions to reference the current state of the view.\",\n    \"default\": false,\n    \"transition\": false,\n    \"property-type\": \"data-driven\",\n    \"expression\": {\n      \"interpolated\": false,\n      \"parameters\": [\"zoom\", \"feature\"]\n    }\n  },\n  \"filter_operator\": {\n    \"type\": \"enum\",\n    \"values\": {\n      \"==\": {\n        \"doc\": \"`[\\\"==\\\", key, value]` equality: `feature[key] = value`\"\n      },\n      \"!=\": {\n        \"doc\": \"`[\\\"!=\\\", key, value]` inequality: `feature[key] ≠ value`\"\n      },\n      \">\": {\n        \"doc\": \"`[\\\">\\\", key, value]` greater than: `feature[key] > value`\"\n      },\n      \">=\": {\n        \"doc\": \"`[\\\">=\\\", key, value]` greater than or equal: `feature[key] ≥ value`\"\n      },\n      \"<\": {\n        \"doc\": \"`[\\\"<\\\", key, value]` less than: `feature[key] < value`\"\n      },\n      \"<=\": {\n        \"doc\": \"`[\\\"<=\\\", key, value]` less than or equal: `feature[key] ≤ value`\"\n      },\n      \"in\": {\n        \"doc\": \"`[\\\"in\\\", key, v0, ..., vn]` set inclusion: `feature[key] ∈ {v0, ..., vn}`\"\n      },\n      \"!in\": {\n        \"doc\": \"`[\\\"!in\\\", key, v0, ..., vn]` set exclusion: `feature[key] ∉ {v0, ..., vn}`\"\n      },\n      \"all\": {\n        \"doc\": \"`[\\\"all\\\", f0, ..., fn]` logical `AND`: `f0 ∧ ... ∧ fn`\"\n      },\n      \"any\": {\n        \"doc\": \"`[\\\"any\\\", f0, ..., fn]` logical `OR`: `f0 ∨ ... ∨ fn`\"\n      },\n      \"none\": {\n        \"doc\": \"`[\\\"none\\\", f0, ..., fn]` logical `NOR`: `¬f0 ∧ ... ∧ ¬fn`\"\n      },\n      \"has\": {\n        \"doc\": \"`[\\\"has\\\", key]` `feature[key]` exists\"\n      },\n      \"!has\": {\n        \"doc\": \"`[\\\"!has\\\", key]` `feature[key]` does not exist\"\n      },\n      \"within\": {\n        \"doc\": \"`[\\\"within\\\", object]` feature geometry is within object geometry\"\n      }\n    },\n    \"doc\": \"The filter operator.\"\n  },\n  \"geometry_type\": {\n    \"type\": \"enum\",\n    \"values\": {\n      \"Point\": {\n        \"doc\": \"Filter to point geometries.\"\n      },\n      \"LineString\": {\n        \"doc\": \"Filter to line geometries.\"\n      },\n      \"Polygon\": {\n        \"doc\": \"Filter to polygon geometries.\"\n      }\n    },\n    \"doc\": \"The geometry type for the filter to select.\"\n  },\n  \"function\": {\n    \"expression\": {\n      \"type\": \"expression\",\n      \"doc\": \"An expression.\"\n    },\n    \"stops\": {\n      \"type\": \"array\",\n      \"doc\": \"An array of stops.\",\n      \"value\": \"function_stop\"\n    },\n    \"base\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"doc\": \"The exponential base of the interpolation curve. It controls the rate at which the result increases. Higher values make the result increase more towards the high end of the range. With `1` the stops are interpolated linearly.\"\n    },\n    \"property\": {\n      \"type\": \"string\",\n      \"doc\": \"The name of a feature property to use as the function input.\",\n      \"default\": \"$zoom\"\n    },\n    \"type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"identity\": {\n          \"doc\": \"Return the input value as the output value.\"\n        },\n        \"exponential\": {\n          \"doc\": \"Generate an output by interpolating between stops just less than and just greater than the function input.\"\n        },\n        \"interval\": {\n          \"doc\": \"Return the output value of the stop just less than the function input.\"\n        },\n        \"categorical\": {\n          \"doc\": \"Return the output value of the stop equal to the function input.\"\n        }\n      },\n      \"doc\": \"The interpolation strategy to use in function evaluation.\",\n      \"default\": \"exponential\"\n    },\n    \"colorSpace\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"rgb\": {\n          \"doc\": \"Use the RGB color space to interpolate color values\"\n        },\n        \"lab\": {\n          \"doc\": \"Use the LAB color space to interpolate color values.\"\n        },\n        \"hcl\": {\n          \"doc\": \"Use the HCL color space to interpolate color values, interpolating the Hue, Chroma, and Luminance channels individually.\"\n        }\n      },\n      \"doc\": \"The color space in which colors interpolated. Interpolating colors in perceptual color spaces like LAB and HCL tend to produce color ramps that look more consistent and produce colors that can be differentiated more easily than those interpolated in RGB space.\",\n      \"default\": \"rgb\"\n    },\n    \"default\": {\n      \"type\": \"*\",\n      \"required\": false,\n      \"doc\": \"A value to serve as a fallback function result when a value isn't otherwise available. It is used in the following circumstances:\\n* In categorical functions, when the feature value does not match any of the stop domain values.\\n* In property and zoom-and-property functions, when a feature does not contain a value for the specified property.\\n* In identity functions, when the feature value is not valid for the style property (for example, if the function is being used for a `circle-color` property but the feature property value is not a string or not a valid color).\\n* In interval or exponential property and zoom-and-property functions, when the feature value is not numeric.\\nIf no default is provided, the style property's default is used in these circumstances.\"\n    }\n  },\n  \"function_stop\": {\n    \"type\": \"array\",\n    \"minimum\": 0,\n    \"maximum\": 24,\n    \"value\": [\n      \"number\",\n      \"color\"\n    ],\n    \"length\": 2,\n    \"doc\": \"Zoom level and value pair.\"\n  },\n  \"expression\": {\n    \"type\": \"array\",\n    \"value\": \"*\",\n    \"minimum\": 1,\n    \"doc\": \"An expression defines a function that can be used for data-driven style properties or feature filters.\"\n  },\n  \"expression_name\": {\n    \"doc\": \"\",\n    \"type\": \"enum\",\n    \"values\": {\n      \"let\": {\n        \"doc\": \"Binds expressions to named variables, which can then be referenced in the result expression using [\\\"var\\\", \\\"variable_name\\\"].\",\n        \"group\": \"Variable binding\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"var\": {\n        \"doc\": \"References variable bound using \\\"let\\\".\",\n        \"group\": \"Variable binding\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"literal\": {\n        \"doc\": \"Provides a literal array or object value.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"array\": {\n        \"doc\": \"Asserts that the input is an array (optionally with a specific item type and length).  If, when the input expression is evaluated, it is not of the asserted type, then this assertion will cause the whole expression to be aborted.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"at\": {\n        \"doc\": \"Retrieves an item from an array.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"in\": {\n        \"doc\": \"Determines whether an item exists in an array or a substring exists in a string. In the specific case when the second and third arguments are string literals, you must wrap at least one of them in a [`literal`](#types-literal) expression to hint correct interpretation to the [type system](#type-system).\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.6.0\",\n            \"android\": \"9.1.0\",\n            \"ios\": \"5.8.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"index-of\": {\n        \"doc\": \"Returns the first position at which an item can be found in an array or a substring can be found in a string, or `-1` if the input cannot be found. Accepts an optional index from where to begin the search.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.10.0\",\n            \"android\": \"10.0.0\",\n            \"ios\": \"10.0.0\"\n          }\n        }\n      },\n      \"slice\": {\n        \"doc\": \"Returns an item from an array or a substring from a string from a specified start index, or between a start index and an end index if set. The return value is inclusive of the start index but not of the end index.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.10.0\",\n            \"android\": \"10.0.0\",\n            \"ios\": \"10.0.0\"\n          }\n        }\n      },\n      \"case\": {\n        \"doc\": \"Selects the first output whose corresponding test condition evaluates to true, or the fallback value otherwise.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"match\": {\n        \"doc\": \"Selects the output for which the label value matches the input value, or the fallback value if no match is found. The input can be any expression (for example, `[\\\"get\\\", \\\"building_type\\\"]`). Each label must be unique, and must be either:\\n - a single literal value; or\\n - an array of literal values, the values of which must be all strings or all numbers (for example `[100, 101]` or `[\\\"c\\\", \\\"b\\\"]`).\\n\\nThe input matches if any of the values in the array matches using strict equality, similar to the `\\\"in\\\"` operator.\\nIf the input type does not match the type of the labels, the result will be the fallback value.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"coalesce\": {\n        \"doc\": \"Evaluates each expression in turn until the first valid value is obtained. Invalid values are `null` and [`'image'`](#types-image) expressions that are unavailable in the style. If all values are invalid, `coalesce` returns the first value listed.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"step\": {\n        \"doc\": \"Produces discrete, stepped results by evaluating a piecewise-constant function defined by pairs of input and output values (\\\"stops\\\"). The `input` may be any numeric expression (e.g., `[\\\"get\\\", \\\"population\\\"]`). Stop inputs must be numeric literals in strictly ascending order. Returns the output value of the stop just less than the input, or the first output if the input is less than the first stop.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.42.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"interpolate\": {\n        \"doc\": \"Produces continuous, smooth results by interpolating between pairs of input and output values (\\\"stops\\\"). The `input` may be any numeric expression (e.g., `[\\\"get\\\", \\\"population\\\"]`). Stop inputs must be numeric literals in strictly ascending order. The output type must be `number`, `array<number>`, or `color`.\\n\\nInterpolation types:\\n- `[\\\"linear\\\"]`: Interpolates linearly between the pair of stops just less than and just greater than the input.\\n- `[\\\"exponential\\\", base]`: Interpolates exponentially between the stops just less than and just greater than the input. `base` controls the rate at which the output increases: higher values make the output increase more towards the high end of the range. With values close to 1 the output increases linearly.\\n- `[\\\"cubic-bezier\\\", x1, y1, x2, y2]`: Interpolates using the cubic bezier curve defined by the given control points.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.42.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"interpolate-hcl\": {\n        \"doc\": \"Produces continuous, smooth results by interpolating between pairs of input and output values (\\\"stops\\\"). Works like `interpolate`, but the output type must be `color`, and the interpolation is performed in the Hue-Chroma-Luminance color space.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.49.0\"\n          }\n        }\n      },\n      \"interpolate-lab\": {\n        \"doc\": \"Produces continuous, smooth results by interpolating between pairs of input and output values (\\\"stops\\\"). Works like `interpolate`, but the output type must be `color`, and the interpolation is performed in the CIELAB color space.\",\n        \"group\": \"Ramps, scales, curves\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.49.0\"\n          }\n        }\n      },\n      \"ln2\": {\n        \"doc\": \"Returns mathematical constant ln(2).\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"pi\": {\n        \"doc\": \"Returns the mathematical constant pi.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"e\": {\n        \"doc\": \"Returns the mathematical constant e.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"typeof\": {\n        \"doc\": \"Returns a string describing the type of the given value.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"string\": {\n        \"doc\": \"Asserts that the input value is a string. If multiple values are provided, each one is evaluated in order until a string is obtained. If none of the inputs are strings, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"number\": {\n        \"doc\": \"Asserts that the input value is a number. If multiple values are provided, each one is evaluated in order until a number is obtained. If none of the inputs are numbers, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"boolean\": {\n        \"doc\": \"Asserts that the input value is a boolean. If multiple values are provided, each one is evaluated in order until a boolean is obtained. If none of the inputs are booleans, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"object\": {\n        \"doc\": \"Asserts that the input value is an object. If multiple values are provided, each one is evaluated in order until an object is obtained. If none of the inputs are objects, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"collator\": {\n        \"doc\": \"Returns a `collator` for use in locale-dependent comparison operations. The `case-sensitive` and `diacritic-sensitive` options default to `false`. The `locale` argument specifies the IETF language tag of the locale to use. If none is provided, the default locale is used. If the requested locale is not available, the `collator` will use a system-defined fallback locale. Use `resolved-locale` to test the results of locale fallback behavior.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"format\": {\n        \"doc\": \"Returns a `formatted` string for displaying mixed-format text in the `text-field` property. The input may contain a string literal or expression, including an [`'image'`](#types-image) expression. Strings may be followed by a style override object that supports the following properties:\\n- `\\\"text-font\\\"`: Overrides the font stack specified by the root layout property.\\n- `\\\"text-color\\\"`: Overrides the color specified by the root paint property.\\n- `\\\"font-scale\\\"`: Applies a scaling factor on `text-size` as specified by the root layout property.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.48.0\",\n            \"android\": \"6.7.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          },\n          \"text-font\": {\n            \"js\": \"0.48.0\",\n            \"android\": \"6.7.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          },\n          \"font-scale\": {\n            \"js\": \"0.48.0\",\n            \"android\": \"6.7.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          },\n          \"text-color\": {\n            \"js\": \"1.3.0\",\n            \"android\": \"7.3.0\",\n            \"ios\": \"4.10.0\",\n            \"macos\": \"0.14.0\"\n          },\n          \"image\": {\n            \"js\": \"1.6.0\",\n            \"android\": \"8.6.0\",\n            \"ios\": \"5.7.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"image\": {\n        \"doc\": \"Returns a [`ResolvedImage`](/mapbox-gl-js/style-spec/types/#resolvedimage) for use in [`icon-image`](/mapbox-gl-js/style-spec/layers/#layout-symbol-icon-image), `*-pattern` entries, and as a section in the [`'format'`](#types-format) expression. A [`'coalesce'`](#coalesce) expression containing `image` expressions will evaluate to the first listed image that is currently in the style. This validation process is synchronous and requires the image to have been added to the style before requesting it in the `'image'` argument.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.4.0\",\n            \"android\": \"8.6.0\",\n            \"ios\": \"5.7.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"number-format\": {\n        \"doc\": \"Converts the input number into a string representation using the providing formatting rules. If set, the `locale` argument specifies the locale to use, as a BCP 47 language tag. If set, the `currency` argument specifies an ISO 4217 code to use for currency-style formatting. If set, the `unit` argument specifies a [simple ECMAScript unit](https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier) to use for unit-style formatting. If set, the `min-fraction-digits` and `max-fraction-digits` arguments specify the minimum and maximum number of fractional digits to include.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.54.0\",\n            \"android\" : \"8.4.0\",\n            \"ios\": \"5.4.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"to-string\": {\n        \"doc\": \"Converts the input value to a string. If the input is `null`, the result is `\\\"\\\"`. If the input is a [`boolean`](#types-boolean), the result is `\\\"true\\\"` or `\\\"false\\\"`. If the input is a number, it is converted to a string as specified by the [\\\"NumberToString\\\" algorithm](https://tc39.github.io/ecma262/#sec-tostring-applied-to-the-number-type) of the ECMAScript Language Specification. If the input is a [`color`](#color), it is converted to a string of the form `\\\"rgba(r,g,b,a)\\\"`, where `r`, `g`, and `b` are numerals ranging from 0 to 255, and `a` ranges from 0 to 1. If the input is an [`'image'`](#types-image) expression, `'to-string'` returns the image name. Otherwise, the input is converted to a string in the format specified by the [`JSON.stringify`](https://tc39.github.io/ecma262/#sec-json.stringify) function of the ECMAScript Language Specification.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-number\": {\n        \"doc\": \"Converts the input value to a number, if possible. If the input is `null` or `false`, the result is 0. If the input is `true`, the result is 1. If the input is a string, it is converted to a number as specified by the [\\\"ToNumber Applied to the String Type\\\" algorithm](https://tc39.github.io/ecma262/#sec-tonumber-applied-to-the-string-type) of the ECMAScript Language Specification. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-boolean\": {\n        \"doc\": \"Converts the input value to a boolean. The result is `false` when then input is an empty string, 0, `false`, `null`, or `NaN`; otherwise it is `true`.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-rgba\": {\n        \"doc\": \"Returns a four-element array containing the input color's red, green, blue, and alpha components, in that order.\",\n        \"group\": \"Color\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"to-color\": {\n        \"doc\": \"Converts the input value to a color. If multiple values are provided, each one is evaluated in order until the first successful conversion is obtained. If none of the inputs can be converted, the expression is an error.\",\n        \"group\": \"Types\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"rgb\": {\n        \"doc\": \"Creates a color value from red, green, and blue components, which must range between 0 and 255, and an alpha component of 1. If any component is out of range, the expression is an error.\",\n        \"group\": \"Color\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"rgba\": {\n        \"doc\": \"Creates a color value from red, green, blue components, which must range between 0 and 255, and an alpha component which must range between 0 and 1. If any component is out of range, the expression is an error.\",\n        \"group\": \"Color\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"get\": {\n        \"doc\": \"Retrieves a property value from the current feature's properties, or from another object if a second argument is provided. Returns `null` if the requested property is missing.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"has\": {\n        \"doc\": \"Tests for the presence of an property value in the current feature's properties, or from another object if a second argument is provided.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"length\": {\n        \"doc\": \"Returns the length of an array or string.\",\n        \"group\": \"Lookup\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"properties\": {\n        \"doc\": \"Returns the feature properties object.  Note that in some cases, it may be more efficient to use `[\\\"get\\\", \\\"property_name\\\"]` directly.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"feature-state\": {\n        \"doc\": \"Retrieves a property value from the current feature's state. Returns `null` if the requested property is not present on the feature's state. A feature's state is not part of the GeoJSON or vector tile data, and must be set programmatically on each feature. Features are identified by their `id` attribute, which must be an integer or a string that can be cast to an integer. Note that [\\\"feature-state\\\"] can only be used with paint properties that support data-driven styling.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.46.0\",\n            \"android\": \"10.0.0\",\n            \"ios\": \"10.0.0\"\n          }\n        }\n      },\n      \"geometry-type\": {\n        \"doc\": \"Returns the feature's geometry type: `Point`, `LineString` or `Polygon`. `Multi*` feature types return the singular forms.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"id\": {\n        \"doc\": \"Returns the feature's id, if it has one.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"zoom\": {\n        \"doc\": \"Returns the current zoom level.  Note that in style layout and paint properties, [\\\"zoom\\\"] may only appear as the input to a top-level \\\"step\\\" or \\\"interpolate\\\" expression.\",\n        \"group\": \"Camera\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"pitch\": {\n        \"doc\": \"Returns the current pitch in degrees. `[\\\"pitch\\\"]` may only be used in the `filter` expression for a `symbol` layer.\",\n        \"group\": \"Camera\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"2.6.0\",\n            \"android\": \"10.9.0\",\n            \"ios\": \"10.9.0\"\n          }\n        }\n      },\n      \"distance-from-center\": {\n        \"doc\": \"Returns the distance of a `symbol` instance from the center of the map. The distance is measured in pixels divided by the height of the map container. It measures 0 at the center, decreases towards the camera and increase away from the camera. For example, if the height of the map is 1000px, a value of -1 means 1000px away from the center towards the camera, and a value of 1 means a distance of 1000px away from the camera from the center. `[\\\"distance-from-center\\\"]` may only be used in the `filter` expression for a `symbol` layer.\",\n        \"group\": \"Camera\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"2.6.0\",\n            \"android\": \"10.9.0\",\n            \"ios\": \"10.9.0\"\n          }\n        }\n      },\n      \"heatmap-density\": {\n        \"doc\": \"Returns the kernel density estimation of a pixel in a heatmap layer, which is a relative measure of how many data points are crowded around a particular pixel. Can only be used in the `heatmap-color` property.\",\n        \"group\": \"Heatmap\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"line-progress\": {\n        \"doc\": \"Returns the progress along a gradient line. Can only be used in the `line-gradient` property.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.6.0\",\n            \"macos\": \"0.12.0\"\n          }\n        }\n      },\n      \"sky-radial-progress\": {\n        \"doc\": \"Returns the distance of a point on the sky from the sun position. Returns 0 at sun position and 1 when the distance reaches `sky-gradient-radius`. Can only be used in the `sky-gradient` property.\",\n        \"group\": \"sky\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"2.0.0\",\n            \"ios\": \"10.0.0\",\n            \"android\": \"10.0.0\"\n          }\n        }\n      },\n      \"accumulated\": {\n        \"doc\": \"Returns the value of a cluster property accumulated so far. Can only be used in the `clusterProperties` option of a clustered GeoJSON source.\",\n        \"group\": \"Feature data\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.53.0\",\n            \"android\": \"8.4.0\",\n            \"ios\": \"5.5.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"+\": {\n        \"doc\": \"Returns the sum of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"*\": {\n        \"doc\": \"Returns the product of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"-\": {\n        \"doc\": \"For two inputs, returns the result of subtracting the second input from the first. For a single input, returns the result of subtracting it from 0.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"/\": {\n        \"doc\": \"Returns the result of floating point division of the first input by the second.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"%\": {\n        \"doc\": \"Returns the remainder after integer division of the first input by the second.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"^\": {\n        \"doc\": \"Returns the result of raising the first input to the power specified by the second.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"sqrt\": {\n        \"doc\": \"Returns the square root of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.42.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"log10\": {\n        \"doc\": \"Returns the base-ten logarithm of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"ln\": {\n        \"doc\": \"Returns the natural logarithm of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"log2\": {\n        \"doc\": \"Returns the base-two logarithm of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"sin\": {\n        \"doc\": \"Returns the sine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"cos\": {\n        \"doc\": \"Returns the cosine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"tan\": {\n        \"doc\": \"Returns the tangent of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"asin\": {\n        \"doc\": \"Returns the arcsine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"acos\": {\n        \"doc\": \"Returns the arccosine of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"atan\": {\n        \"doc\": \"Returns the arctangent of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"min\": {\n        \"doc\": \"Returns the minimum value of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"max\": {\n        \"doc\": \"Returns the maximum value of the inputs.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"round\": {\n        \"doc\": \"Rounds the input to the nearest integer. Halfway values are rounded away from zero. For example, `[\\\"round\\\", -1.5]` evaluates to -2.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"abs\": {\n        \"doc\": \"Returns the absolute value of the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"ceil\": {\n        \"doc\": \"Returns the smallest integer that is greater than or equal to the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"floor\": {\n        \"doc\": \"Returns the largest integer that is less than or equal to the input.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"distance\": {\n        \"doc\": \"Returns the shortest distance in meters between the evaluated feature and the input geometry. The input value can be a valid GeoJSON of type `Point`, `MultiPoint`, `LineString`, `MultiLineString`, `Polygon`, `MultiPolygon`, `Feature`, or `FeatureCollection`. Distance values returned may vary in precision due to loss in precision from encoding geometries, particularly below zoom level 13.\",\n        \"group\": \"Math\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"android\": \"9.2.0\",\n            \"ios\": \"5.9.0\",\n            \"macos\": \"0.16.0\"\n          }\n        }\n      },\n      \"==\": {\n        \"doc\": \"Returns `true` if the input values are equal, `false` otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"!=\": {\n        \"doc\": \"Returns `true` if the input values are not equal, `false` otherwise. The comparison is strictly typed: values of different runtime types are always considered unequal. Cases where the types are known to be different at parse time are considered invalid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \">\": {\n        \"doc\": \"Returns `true` if the first input is strictly greater than the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"<\": {\n        \"doc\": \"Returns `true` if the first input is strictly less than the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \">=\": {\n        \"doc\": \"Returns `true` if the first input is greater than or equal to the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"<=\": {\n        \"doc\": \"Returns `true` if the first input is less than or equal to the second, `false` otherwise. The arguments are required to be either both strings or both numbers; if during evaluation they are not, expression evaluation produces an error. Cases where this constraint is known not to hold at parse time are considered in valid and will produce a parse error. Accepts an optional `collator` argument to control locale-dependent string comparisons.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          },\n          \"collator\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      },\n      \"all\": {\n        \"doc\": \"Returns `true` if all the inputs are `true`, `false` otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to `false`, the result is `false` and no further input expressions are evaluated.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"any\": {\n        \"doc\": \"Returns `true` if any of the inputs are `true`, `false` otherwise. The inputs are evaluated in order, and evaluation is short-circuiting: once an input expression evaluates to `true`, the result is `true` and no further input expressions are evaluated.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"!\": {\n        \"doc\": \"Logical negation. Returns `true` if the input is `false`, and `false` if the input is `true`.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"within\": {\n        \"doc\": \"Returns `true` if the evaluated feature is fully contained inside a boundary of the input geometry, `false` otherwise. The input value can be a valid GeoJSON of type `Polygon`, `MultiPolygon`, `Feature`, or `FeatureCollection`. Supported features for evaluation:\\n- `Point`: Returns `false` if a point is on the boundary or falls outside the boundary.\\n- `LineString`: Returns `false` if any part of a line falls outside the boundary, the line intersects the boundary, or a line's endpoint is on the boundary.\",\n        \"group\": \"Decision\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"1.9.0\",\n            \"android\": \"9.1.0\",\n            \"ios\": \"5.8.0\",\n            \"macos\": \"0.15.0\"\n          }\n        }\n      },\n      \"is-supported-script\": {\n        \"doc\": \"Returns `true` if the input string is expected to render legibly. Returns `false` if the input string contains sections that cannot be rendered without potential loss of meaning (e.g. Indic scripts that require complex text shaping, or right-to-left scripts if the the `mapbox-gl-rtl-text` plugin is not in use in Mapbox GL JS).\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.6.0\",\n            \"ios\": \"4.1.0\",\n            \"macos\": \"0.8.0\"\n          }\n        }\n      },\n      \"upcase\": {\n        \"doc\": \"Returns the input string converted to uppercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"downcase\": {\n        \"doc\": \"Returns the input string converted to lowercase. Follows the Unicode Default Case Conversion algorithm and the locale-insensitive case mappings in the Unicode Character Database.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"concat\": {\n        \"doc\": \"Returns a `string` consisting of the concatenation of the inputs. Each input is converted to a string as if by `to-string`.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.41.0\",\n            \"android\": \"6.0.0\",\n            \"ios\": \"4.0.0\",\n            \"macos\": \"0.7.0\"\n          }\n        }\n      },\n      \"resolved-locale\": {\n        \"doc\": \"Returns the IETF language tag of the locale being used by the provided `collator`. This can be used to determine the default system locale, or to determine if a requested locale was successfully loaded.\",\n        \"group\": \"String\",\n        \"sdk-support\": {\n          \"basic functionality\": {\n            \"js\": \"0.45.0\",\n            \"android\": \"6.5.0\",\n            \"ios\": \"4.2.0\",\n            \"macos\": \"0.9.0\"\n          }\n        }\n      }\n    }\n  },\n  \"fog\": {\n    \"range\": {\n      \"type\": \"array\",\n      \"default\": [\n        0.5,\n        10\n      ],\n      \"minimum\": -20,\n      \"maximum\": 20,\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"doc\": \"The start and end distance range in which fog fades from fully transparent to fully opaque. The distance to the point at the center of the map is defined as zero, so that negative range values are closer to the camera, and positive values are farther away.\",\n      \"example\": [\n        0.5,\n        10\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#ffffff\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"The color of the atmosphere region immediately below the horizon and within the `range` and above the horizon and within `horizon-blend`. Using opacity is recommended only for smoothly transitioning fog on/off as anything less than 100% opacity results in more tiles loaded and drawn.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"high-color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#245cdf\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"The color of the atmosphere region above the horizon, `high-color` extends further above the horizon than the `color` property and its spread can be controlled with `horizon-blend`. The opacity can be set to `0` to remove the high atmosphere color contribution.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"space-color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n\n      \"default\":\n      [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"zoom\"\n        ],\n        4,\n        \"#010b19\",\n        7,\n        \"#367ab9\"\n      ],\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"The color of the region above the horizon and after the end of the `horizon-blend` contribution. The opacity can be set to `0` to have a transparent background.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"horizon-blend\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\":\n      [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"zoom\"\n        ],\n        4,\n        0.2,\n        7,\n        0.1\n      ],\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Horizon blend applies a smooth fade from the color of the atmosphere to the color of space. A value of zero leaves a sharp transition from atmosphere to space. Increasing the value blends the color of atmosphere into increasingly high angles of the sky.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.3.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    },\n    \"star-intensity\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\":\n      [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"zoom\"\n        ],\n        5,\n        0.35,\n        6,\n        0\n      ],\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"A value controlling the star intensity where `0` will show no stars and `1` will show stars at their maximum intensity.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.6.0\",\n          \"ios\": \"10.6.0\"\n        }\n      }\n    }\n  },\n  \"light\": {\n    \"anchor\": {\n      \"type\": \"enum\",\n      \"default\": \"viewport\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The position of the light source is aligned to the rotation of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The position of the light source is aligned to the rotation of the viewport.\"\n        }\n      },\n      \"property-type\": \"data-constant\",\n      \"transition\": false,\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"doc\": \"Whether extruded geometries are lit relative to the map or viewport.\",\n      \"example\": \"map\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    },\n    \"position\": {\n      \"type\": \"array\",\n      \"default\": [\n        1.15,\n        210,\n        30\n      ],\n      \"length\": 3,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"transition\": true,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"doc\": \"Position of the light source relative to lit (extruded) geometries, in [r radial coordinate, a azimuthal angle, p polar angle] where r indicates the distance from the center of the base of an object to its light, a indicates the position of the light relative to 0° (0° when `light.anchor` is set to `viewport` corresponds to the top of the viewport, or 0° when `light.anchor` is set to `map` corresponds to due north, and degrees proceed clockwise), and p indicates the height of the light (from 0°, directly above, to 180°, directly below).\",\n      \"example\": [\n        1.5,\n        90,\n        80\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    },\n    \"color\": {\n      \"type\": \"color\",\n      \"property-type\": \"data-constant\",\n      \"default\": \"#ffffff\",\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Color tint for lighting extruded geometries.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    },\n    \"intensity\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": 0.5,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Intensity of lighting (on a scale from 0 to 1). Higher numbers will present as more extreme contrast.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      }\n    }\n  },\n  \"projection\": {\n    \"name\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"albers\": {\n          \"doc\": \"An Albers equal-area projection centered on the continental United States. You can configure the projection for a different region by setting `center` and `parallels` properties. You may want to set max bounds to constrain the map to the relevant region.\"\n        },\n        \"equalEarth\": {\n          \"doc\": \"An Equal Earth projection.\"\n        },\n        \"equirectangular\": {\n          \"doc\": \"An Equirectangular projection. This projection is very similar to the Plate Carrée projection.\"\n        },\n        \"lambertConformalConic\": {\n          \"doc\": \"A Lambert conformal conic projection. You can configure the projection for a region by setting `center` and `parallels` properties. You may want to set max bounds to constrain the map to the relevant region.\"\n        },\n        \"mercator\": {\n          \"doc\": \"The Mercator projection is the default projection.\"\n        },\n        \"naturalEarth\": {\n          \"doc\": \"A Natural Earth projection.\"\n        },\n        \"winkelTripel\": {\n          \"doc\": \"A Winkel Tripel projection.\"\n        },\n        \"globe\": {\n          \"doc\": \"A globe projection.\"\n        }\n      },\n      \"default\": \"mercator\",\n      \"doc\": \"The name of the projection to be used for rendering the map.\",\n      \"required\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.6.0\"\n        }\n      }\n    },\n    \"center\": {\n      \"type\": \"array\",\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"minimum\": [-180, -90],\n      \"maximum\": [180, 90],\n      \"transition\": false,\n      \"doc\": \"The reference longitude and latitude of the projection. `center` takes the form of [lng, lat]. This property is only configurable for conic projections (Albers and Lambert Conformal Conic). All other projections are centered on [0, 0].\",\n      \"example\": [\n        -96,\n        37.5\n      ],\n      \"requires\": [\n        {\n          \"name\": [\n              \"albers\",\n              \"lambertConformalConic\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.6.0\"\n        }\n      }\n    },\n    \"parallels\": {\n      \"type\": \"array\",\n      \"length\": 2,\n      \"value\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"minimum\": [-90, -90],\n      \"maximum\": [90, 90],\n      \"transition\": false,\n      \"doc\":  \"The standard parallels of the projection, denoting the desired latitude range with minimal distortion. `parallels` takes the form of [lat0, lat1]. This property is only configurable for conic projections (Albers and Lambert Conformal Conic).\",\n      \"example\": [\n        29.5,\n        45.5\n      ],\n      \"requires\": [\n        {\n          \"name\": [\n              \"albers\",\n              \"lambertConformalConic\"\n          ]\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.6.0\"\n        }\n      }\n    }\n  },\n  \"terrain\" : {\n    \"source\": {\n      \"type\": \"string\",\n      \"doc\": \"Name of a source of `raster_dem` type to be used for terrain elevation.\",\n      \"required\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      }\n    },\n    \"exaggeration\": {\n      \"type\": \"number\",\n      \"property-type\": \"data-constant\",\n      \"default\": 1.0,\n      \"minimum\": 0,\n      \"maximum\": 1000,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Exaggerates the elevation of the terrain by multiplying the data from the DEM with this value.\",\n      \"requires\": [\n        \"source\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      }\n    }\n  },\n  \"paint\": [\n    \"paint_fill\",\n    \"paint_line\",\n    \"paint_circle\",\n    \"paint_heatmap\",\n    \"paint_fill-extrusion\",\n    \"paint_symbol\",\n    \"paint_raster\",\n    \"paint_hillshade\",\n    \"paint_background\",\n    \"paint_sky\"\n  ],\n  \"paint_fill\": {\n    \"fill-antialias\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"doc\": \"Whether or not the fill should be antialiased.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity of the entire fill layer. In contrast to the `fill-color`, this value will also affect the 1px stroke around the fill, if the stroke is used.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The color of the filled part of this layer. This color can be specified as `rgba` with an alpha component and the color's opacity will not affect the opacity of the 1px stroke, if it is used.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"fill-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.19.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-outline-color\": {\n      \"type\": \"color\",\n      \"doc\": \"The outline color of the fill. Matches the value of `fill-color` if unspecified.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"fill-pattern\"\n        },\n        {\n          \"fill-antialias\": true\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.19.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The fill is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The fill is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `fill-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"fill-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing image fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.5.0\",\n          \"macos\": \"0.11.0\",\n          \"ios\": \"4.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    }\n  },\n  \"paint_fill-extrusion\": {\n    \"fill-extrusion-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity of the entire fill extrusion layer. This is rendered on a per-layer, not per-feature, basis, and data-driven styling is not available.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The base color of the extruded fill. The extrusion's surfaces will be shaded differently based on this color in combination with the root `light` settings. If this color is specified as `rgba` with an alpha component, the alpha component will be ignored; use `fill-extrusion-opacity` to set layer opacity.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"fill-extrusion-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up (on the flat plane), respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The fill extrusion is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The fill extrusion is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `fill-extrusion-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"fill-extrusion-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing images on extruded fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.5.0\",\n          \"macos\": \"0.11.0\",\n          \"ios\": \"4.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-height\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"meters\",\n      \"doc\": \"The height with which to extrude this layer.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-base\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"meters\",\n      \"doc\": \"The height with which to extrude the base of this layer. Must be less than or equal to `fill-extrusion-height`.\",\n      \"transition\": true,\n      \"requires\": [\n        \"fill-extrusion-height\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.27.0\",\n          \"android\": \"5.1.0\",\n          \"ios\": \"3.6.0\",\n          \"macos\": \"0.5.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"fill-extrusion-vertical-gradient\": {\n      \"type\": \"boolean\",\n      \"default\": true,\n      \"doc\": \"Whether to apply a vertical gradient to the sides of a fill-extrusion layer. If true, sides will be shaded slightly darker farther down.\",\n      \"transition\": false,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.50.0\",\n          \"android\": \"7.0.0\",\n          \"ios\": \"4.7.0\",\n          \"macos\": \"0.13.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"fill-extrusion-ambient-occlusion-intensity\": {\n      \"property-type\": \"data-constant\",\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 0.0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Controls the intensity of shading near ground and concave angles between walls. Default value 0.0 disables ambient occlusion and values around 0.3 provide the most plausible results for buildings.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.10.0\",\n          \"android\": \"10.7.0\",\n          \"ios\": \"10.7.0\"\n        }\n      }\n    },\n    \"fill-extrusion-ambient-occlusion-radius\": {\n      \"property-type\": \"data-constant\",\n      \"type\": \"number\",\n      \"private\": true,\n      \"default\": 3.0,\n      \"minimum\": 0,\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"transition\": true,\n      \"doc\": \"Shades area near ground and concave angles between walls where the radius defines only vertical impact. Default value 3.0 corresponds to height of one floor and brings the most plausible results for buildings.\",\n      \"requires\": [\n        \"fill-extrusion-edge-radius\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.10.0\",\n          \"android\": \"10.7.0\",\n          \"ios\": \"10.7.0\"\n        }\n      }\n    }\n  },\n  \"paint_line\": {\n    \"line-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the line will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-color\": {\n      \"type\": \"color\",\n      \"doc\": \"The color with which the line will be drawn.\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"line-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.23.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The line is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The line is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `line-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"line-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"line-width\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Stroke thickness.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-gap-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"doc\": \"Draws a line casing outside of a line's actual path. Value indicates the width of the inner gap.\",\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-offset\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"The line's offset. For linear features, a positive value offsets the line to the right, relative to the direction of the line, and a negative value to the left. For polygon features, a positive value results in an inset, and a negative value results in an outset.\",\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.12.1\",\n          \"android\": \"3.0.0\",\n          \"ios\": \"3.1.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Blur applied to the line, in pixels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-dasharray\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"doc\": \"Specifies the lengths of the alternating dashes and gaps that form the dash pattern. The lengths are later scaled by the line width. To convert a dash length to pixels, multiply the length by the current line width. Note that GeoJSON sources with `lineMetrics: true` specified won't render dashed lines to the expected scale. Also note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"minimum\": 0,\n      \"transition\": false,\n      \"units\": \"line widths\",\n      \"requires\": [\n        {\n          \"!\": \"line-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"2.3.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing image lines. For seamless patterns, image width must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.49.0\",\n          \"android\": \"6.5.0\",\n          \"macos\": \"0.11.0\",\n          \"ios\": \"4.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"line-gradient\": {\n      \"type\": \"color\",\n      \"doc\": \"Defines a gradient with which to color a line feature. Can only be used with GeoJSON sources that specify `\\\"lineMetrics\\\": true`.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"!\": \"line-pattern\"\n        },\n        {\n          \"source\": \"geojson\",\n          \"has\": {\n            \"lineMetrics\": true\n          }\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.45.0\",\n          \"android\": \"6.5.0\",\n          \"ios\": \"4.4.0\",\n          \"macos\": \"0.11.0\"\n        },\n        \"data-driven styling\": {}\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"line-progress\"\n        ]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"line-trim-offset\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"doc\": \"The line part between [trim-start, trim-end] will be marked as transparent to make a route vanishing effect. The line trim-off offset is based on the whole line range [0.0, 1.0].\",\n      \"length\": 2,\n      \"default\": [0.0, 0.0],\n      \"minimum\": [0.0, 0.0],\n      \"maximum\": [1.0, 1.0],\n      \"transition\": false,\n      \"requires\": [\n          {\n              \"source\": \"geojson\",\n              \"has\": {\n                  \"lineMetrics\": true\n              }\n          }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.9.0\",\n          \"android\": \"10.5.0\",\n          \"ios\": \"10.5.0\",\n          \"macos\": \"10.5.0\"\n        }\n      },\n      \"property-type\": \"constant\"\n    }\n  },\n  \"paint_circle\": {\n    \"circle-radius\": {\n      \"type\": \"number\",\n      \"default\": 5,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Circle radius.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.18.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The fill color of the circle.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.18.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"doc\": \"Amount to blur the circle. 1 blurs the circle such that only the centerpoint is full opacity.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.20.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the circle will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.20.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The circle is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The circle is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `circle-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"circle-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-pitch-scale\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"Circles are scaled according to their apparent distance to the camera.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Circles are not scaled.\"\n        }\n      },\n      \"default\": \"map\",\n      \"doc\": \"Controls the scaling behavior of the circle when the map is pitched.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.21.0\",\n          \"android\": \"4.2.0\",\n          \"ios\": \"3.4.0\",\n          \"macos\": \"0.2.1\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-pitch-alignment\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The circle is aligned to the plane of the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The circle is aligned to the plane of the viewport.\"\n        }\n      },\n      \"default\": \"viewport\",\n      \"doc\": \"Orientation of circle when map is pitched.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.39.0\",\n          \"android\": \"5.2.0\",\n          \"ios\": \"3.7.0\",\n          \"macos\": \"0.6.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"circle-stroke-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The width of the circle's stroke. Strokes are placed outside of the `circle-radius`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-stroke-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The stroke color of the circle.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"circle-stroke-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity of the circle's stroke.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.29.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    }\n  },\n  \"paint_heatmap\": {\n    \"heatmap-radius\": {\n      \"type\": \"number\",\n      \"default\": 30,\n      \"minimum\": 1,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Radius of influence of one heatmap point in pixels. Increasing the value makes the heatmap smoother, but less detailed. `queryRenderedFeatures` on heatmap layers will return points within this radius.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"heatmap-weight\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": false,\n      \"doc\": \"A measure of how much an individual point contributes to the heatmap. A value of 10 would be equivalent to having 10 points of weight 1 in the same spot. Especially useful when combined with clustering.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"heatmap-intensity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"doc\": \"Similar to `heatmap-weight` but controls the intensity of the heatmap globally. Primarily used for adjusting the heatmap based on zoom level.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"heatmap-color\": {\n      \"type\": \"color\",\n      \"default\": [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"heatmap-density\"\n        ],\n        0,\n        \"rgba(0, 0, 255, 0)\",\n        0.1,\n        \"royalblue\",\n        0.3,\n        \"cyan\",\n        0.5,\n        \"lime\",\n        0.7,\n        \"yellow\",\n        1,\n        \"red\"\n      ],\n      \"doc\": \"Defines the color of each pixel based on its density value in a heatmap.  Should be an expression that uses `[\\\"heatmap-density\\\"]` as input.\",\n      \"transition\": false,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        },\n        \"data-driven styling\": {}\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"heatmap-density\"\n        ]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"heatmap-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The global opacity at which the heatmap layer will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.41.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_symbol\": {\n    \"icon-opacity\": {\n      \"doc\": \"The opacity at which the icon will be drawn.\",\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"doc\": \"The color of the icon. This can only be used with [SDF icons](/help/troubleshooting/using-recolorable-images-in-mapbox-maps/).\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"rgba(0, 0, 0, 0)\",\n      \"transition\": true,\n      \"doc\": \"The color of the icon's halo. Icon halos can only be used with [SDF icons](/help/troubleshooting/using-recolorable-images-in-mapbox-maps/).\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance of halo to the icon outline.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-halo-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Fade out the halo towards the outside.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"icon-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance that the icon's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.\",\n      \"requires\": [\n        \"icon-image\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"icon-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"Icons are translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"Icons are translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `icon-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"icon-image\",\n        \"icon-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the text will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-color\": {\n      \"type\": \"color\",\n      \"doc\": \"The color with which the text will be drawn.\",\n      \"default\": \"#000000\",\n      \"transition\": true,\n      \"overridable\": true,\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"rgba(0, 0, 0, 0)\",\n      \"transition\": true,\n      \"doc\": \"The color of the text's halo, which helps it stand out from backgrounds.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-width\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance of halo to the font outline. Max text halo width is 1/4 of the font-size.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-halo-blur\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"The halo's fadeout distance towards the outside.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        },\n        \"data-driven styling\": {\n          \"js\": \"0.33.0\",\n          \"android\": \"5.0.0\",\n          \"ios\": \"3.5.0\",\n          \"macos\": \"0.4.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\",\n          \"feature\",\n          \"feature-state\"\n        ]\n      },\n      \"property-type\": \"data-driven\"\n    },\n    \"text-translate\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"default\": [\n        0,\n        0\n      ],\n      \"transition\": true,\n      \"units\": \"pixels\",\n      \"doc\": \"Distance that the text's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.\",\n      \"requires\": [\n        \"text-field\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"text-translate-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The text is translated relative to the map.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The text is translated relative to the viewport.\"\n        }\n      },\n      \"doc\": \"Controls the frame of reference for `text-translate`.\",\n      \"default\": \"map\",\n      \"requires\": [\n        \"text-field\",\n        \"text-translate\"\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_raster\": {\n    \"raster-opacity\": {\n      \"type\": \"number\",\n      \"doc\": \"The opacity at which the image will be drawn.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-hue-rotate\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"period\": 360,\n      \"transition\": true,\n      \"units\": \"degrees\",\n      \"doc\": \"Rotates hues around the color wheel.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-brightness-min\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the brightness of the image. The value is the minimum brightness.\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-brightness-max\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the brightness of the image. The value is the maximum brightness.\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-saturation\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the saturation of the image.\",\n      \"default\": 0,\n      \"minimum\": -1,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-contrast\": {\n      \"type\": \"number\",\n      \"doc\": \"Increase or reduce the contrast of the image.\",\n      \"default\": 0,\n      \"minimum\": -1,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-resampling\": {\n      \"type\": \"enum\",\n      \"doc\": \"The resampling/interpolation method to use for overscaling, also known as texture magnification filter\",\n      \"values\": {\n        \"linear\": {\n          \"doc\": \"(Bi)linear filtering interpolates pixel values using the weighted average of the four closest original source pixels creating a smooth but blurry look when overscaled\"\n        },\n        \"nearest\": {\n          \"doc\": \"Nearest neighbor filtering interpolates pixel values using the nearest original source pixel creating a sharp but pixelated look when overscaled\"\n        }\n      },\n      \"default\": \"linear\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.47.0\",\n          \"android\": \"6.3.0\",\n          \"ios\": \"4.2.0\",\n          \"macos\": \"0.9.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"raster-fade-duration\": {\n      \"type\": \"number\",\n      \"default\": 300,\n      \"minimum\": 0,\n      \"transition\": false,\n      \"units\": \"milliseconds\",\n      \"doc\": \"Fade duration when a new tile is added.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_hillshade\": {\n    \"hillshade-illumination-direction\": {\n      \"type\": \"number\",\n      \"default\": 335,\n      \"minimum\": 0,\n      \"maximum\": 359,\n      \"doc\": \"The direction of the light source used to generate the hillshading with 0 as the top of the viewport if `hillshade-illumination-anchor` is set to `viewport` and due north if `hillshade-illumination-anchor` is set to `map`.\",\n      \"transition\": false,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-illumination-anchor\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"map\": {\n          \"doc\": \"The hillshade illumination is relative to the north direction.\"\n        },\n        \"viewport\": {\n          \"doc\": \"The hillshade illumination is relative to the top of the viewport.\"\n        }\n      },\n      \"default\": \"viewport\",\n      \"doc\": \"Direction of light source when map is rotated.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-exaggeration\": {\n      \"type\": \"number\",\n      \"doc\": \"Intensity of the hillshade\",\n      \"default\": 0.5,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-shadow-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The shading color of areas that face away from the light source.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-highlight-color\": {\n      \"type\": \"color\",\n      \"default\": \"#FFFFFF\",\n      \"doc\": \"The shading color of areas that faces towards the light source.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"hillshade-accent-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The shading color used to accentuate rugged terrain like sharp cliffs and gorges.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.43.0\",\n          \"android\": \"6.0.0\",\n          \"ios\": \"4.0.0\",\n          \"macos\": \"0.7.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_background\": {\n    \"background-color\": {\n      \"type\": \"color\",\n      \"default\": \"#000000\",\n      \"doc\": \"The color with which the background will be drawn.\",\n      \"transition\": true,\n      \"requires\": [\n        {\n          \"!\": \"background-pattern\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"background-pattern\": {\n      \"type\": \"resolvedImage\",\n      \"transition\": false,\n      \"doc\": \"Name of image in sprite to use for drawing an image background. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoom-dependent expressions will be evaluated only at integer zoom levels.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"background-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity at which the background will be drawn.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"0.10.0\",\n          \"android\": \"2.0.1\",\n          \"ios\": \"2.0.0\",\n          \"macos\": \"0.1.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"paint_sky\": {\n    \"sky-type\": {\n      \"type\": \"enum\",\n      \"values\": {\n        \"gradient\": {\n          \"doc\": \"Renders the sky with a gradient that can be configured with `sky-gradient-radius` and `sky-gradient`.\"\n        },\n        \"atmosphere\": {\n          \"doc\": \"Renders the sky with a simulated atmospheric scattering algorithm, the sun direction can be attached to the light position or explicitly set through `sky-atmosphere-sun`.\"\n        }\n      },\n      \"default\": \"atmosphere\",\n      \"doc\": \"The type of the sky\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-sun\": {\n      \"type\": \"array\",\n      \"value\": \"number\",\n      \"length\": 2,\n      \"units\": \"degrees\",\n      \"minimum\": [0, 0],\n      \"maximum\": [360, 180],\n      \"transition\": false,\n      \"doc\": \"Position of the sun center [a azimuthal angle, p polar angle]. The azimuthal angle indicates the position of the sun relative to 0° north, where degrees proceed clockwise. The polar angle indicates the height of the sun, where 0° is directly above, at zenith, and 90° at the horizon. When this property is ommitted, the sun center is directly inherited from the light position.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-sun-intensity\": {\n      \"type\": \"number\",\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"default\": 10,\n      \"minimum\": 0,\n      \"maximum\": 100,\n      \"transition\": false,\n      \"doc\": \"Intensity of the sun as a light source in the atmosphere (on a scale from 0 to a 100). Setting higher values will brighten up the sky.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient-center\": {\n      \"type\": \"array\",\n      \"requires\": [\n        {\n          \"sky-type\": \"gradient\"\n        }\n      ],\n      \"value\": \"number\",\n      \"default\": [\n        0,\n        0\n      ],\n      \"length\": 2,\n      \"units\": \"degrees\",\n      \"minimum\": [0, 0],\n      \"maximum\": [360, 180],\n      \"transition\": false,\n      \"doc\": \"Position of the gradient center [a azimuthal angle, p polar angle]. The azimuthal angle indicates the position of the gradient center relative to 0° north, where degrees proceed clockwise. The polar angle indicates the height of the gradient center, where 0° is directly above, at zenith, and 90° at the horizon.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient-radius\": {\n      \"type\": \"number\",\n      \"requires\": [\n        {\n          \"sky-type\": \"gradient\"\n        }\n      ],\n      \"default\": 90,\n      \"minimum\": 0,\n      \"maximum\": 180,\n      \"transition\": false,\n      \"doc\": \"The angular distance (measured in degrees) from `sky-gradient-center` up to which the gradient extends. A value of 180 causes the gradient to wrap around to the opposite direction from `sky-gradient-center`.\",\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": false,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-gradient\": {\n      \"type\": \"color\",\n      \"default\": [\n        \"interpolate\",\n        [\n          \"linear\"\n        ],\n        [\n          \"sky-radial-progress\"\n        ],\n        0.8,\n        \"#87ceeb\",\n        1,\n        \"white\"\n      ],\n      \"doc\": \"Defines a radial color gradient with which to color the sky. The color values can be interpolated with an expression using `sky-radial-progress`. The range [0, 1] for the interpolant covers a radial distance (in degrees) of [0, `sky-gradient-radius`] centered at the position specified by `sky-gradient-center`.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"sky-type\": \"gradient\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        },\n        \"data-driven styling\": {}\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"sky-radial-progress\"\n        ]\n      },\n      \"property-type\": \"color-ramp\"\n    },\n    \"sky-atmosphere-halo-color\": {\n      \"type\": \"color\",\n      \"default\": \"white\",\n      \"doc\": \"A color applied to the atmosphere sun halo. The alpha channel describes how strongly the sun halo is represented in an atmosphere sky layer.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-atmosphere-color\": {\n      \"type\": \"color\",\n      \"default\": \"white\",\n      \"doc\": \"A color used to tweak the main atmospheric scattering coefficients. Using white applies the default coefficients giving the natural blue color to the atmosphere. This color affects how heavily the corresponding wavelength is represented during scattering. The alpha channel describes the density of the atmosphere, with 1 maximum density and 0 no density.\",\n      \"transition\": false,\n      \"requires\": [\n        {\n          \"sky-type\": \"atmosphere\"\n        }\n      ],\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"property-type\": \"data-constant\"\n    },\n    \"sky-opacity\": {\n      \"type\": \"number\",\n      \"default\": 1,\n      \"minimum\": 0,\n      \"maximum\": 1,\n      \"doc\": \"The opacity of the entire sky layer.\",\n      \"transition\": true,\n      \"sdk-support\": {\n        \"basic functionality\": {\n          \"js\": \"2.0.0\",\n          \"ios\": \"10.0.0\",\n          \"android\": \"10.0.0\"\n        }\n      },\n      \"expression\": {\n        \"interpolated\": true,\n        \"parameters\": [\n          \"zoom\"\n        ]\n      },\n      \"property-type\": \"data-constant\"\n    }\n  },\n  \"transition\": {\n    \"duration\": {\n      \"type\": \"number\",\n      \"default\": 300,\n      \"minimum\": 0,\n      \"units\": \"milliseconds\",\n      \"doc\": \"Time allotted for transitions to complete.\"\n    },\n    \"delay\": {\n      \"type\": \"number\",\n      \"default\": 0,\n      \"minimum\": 0,\n      \"units\": \"milliseconds\",\n      \"doc\": \"Length of time before a transition begins.\"\n    }\n  },\n  \"property-type\": {\n    \"data-driven\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property is interpolable and can be represented using a property expression.\"\n    },\n    \"color-ramp\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property should be specified using a color ramp from which the output color can be sampled based on a property calculation.\"\n    },\n    \"data-constant\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property is interpolable but cannot be represented using a property expression.\"\n    },\n    \"constant\": {\n      \"type\": \"property-type\",\n      \"doc\": \"Property is constant across all zoom levels and property values.\"\n    }\n  },\n  \"promoteId\": {\n    \"*\": {\n      \"type\": \"string\",\n      \"doc\": \"A name of a feature property to use as ID for feature state.\"\n    }\n  }\n}\n", "// @flow\n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\nimport type {GlobalProperties, Feature} from '../expression/index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type Point from '@mapbox/point-geometry';\n\nexport type FeatureDistanceData = {bearing: [number, number], center: [number, number], scale: number};\nexport type FilterExpression = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => boolean;\nexport type FeatureFilter = {filter: FilterExpression, dynamicFilter?: FilterExpression, needGeometry: boolean, needFeature: boolean};\n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter: any): boolean {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any, layerType?: string = 'fill'): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter: any): string[] | string | boolean);\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc: any): FilterExpression);\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter: any): any {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression: any): any {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter: any) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter: any): boolean {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression: string): boolean {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression: any): any {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n", "// @flow\nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n", "// @flow\n\nimport refProperties from './util/ref_properties.js';\n\nimport type {LayerSpecification} from './types.js';\n\nfunction deref(layer: LayerSpecification, parent: LayerSpecification): LayerSpecification {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent: any)[k];\n        }\n    });\n\n    return ((result: any): LayerSpecification);\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers: Array<LayerSpecification>): Array<LayerSpecification> {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]: any).ref]);\n        }\n    }\n\n    return layers;\n}\n", "var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n", "const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n", "import {expandUrl} from 'ol/tileurlfunction.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\nlet styleId = 0;\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  const functionCache = {};\n  functionCacheByStyleId[glStyle.id] = functionCache;\n  return functionCache;\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  const filterCache = {};\n  filterCacheByStyleId[glStyle.id] = filterCache;\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const request = options.transformRequest\n    ? options.transformRequest(url, resourceType) || new Request(url)\n    : new Request(url);\n  if (!request.headers.get('Accept')) {\n    request.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = request;\n  }\n  const pendingRequest = fetch(request)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [request, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nfunction getTransformedTilesUrl(tilesUrl, options) {\n  if (options.transformRequest) {\n    const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n    if (transformedRequest instanceof Request) {\n      return decodeURI(transformedRequest.url);\n    }\n  }\n  return tilesUrl;\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          })\n        );\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            return getTransformedTilesUrl(\n              normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                metadata.request.url\n              ),\n              options\n            );\n          });\n          return Promise.resolve(tileJson);\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          return getTransformedTilesUrl(\n            normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              styleUrl || location.href\n            ),\n            options\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n", "import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(fonts) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const googleFontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    googleFontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = googleFontDescriptions.length; i < ii; ++i) {\n    const googleFontDescription = googleFontDescriptions[i];\n    const family = googleFontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${googleFontDescription[2]}\\n${googleFontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl =\n          'https://fonts.googleapis.com/css?family=' +\n          family.replace(/ /g, '+') +\n          ':' +\n          googleFontDescription[1] +\n          googleFontDescription[2];\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n", "/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  getFilterCache,\n  getFunctionCache,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  renderTransparentEnabled = enabled;\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>):Array<string>} getFonts Function that\n * receives a font stack as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n\n  let spriteImage, spriteImageSize;\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  const styleFunction = function (feature, resolution) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = feature.getGeometry();\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      );\n                      displacement[1] *= -1;\n                    }\n                    const color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, imgSize, size, offset;\n                      if (haloWidth) {\n                        img = drawIconHalo(\n                          spriteImage,\n                          spriteImageData,\n                          haloWidth,\n                          haloColor\n                        );\n                        imgSize = [img.width, img.height];\n                      } else {\n                        img = spriteImage;\n                        imgSize = spriteImageSize;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        imgSize: imgSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts ? getFonts(fontArray) : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          text.setPlacement(placement);\n          if (typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            let textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            text.setTextAlign(textAlign);\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setTextAlign();\n            text.setRotateWithView(false);\n          }\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if (typeof feature.set === 'function') {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', {});\n  return styleFunction;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n", "/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel) {\n    // The method used to extract elevations from the DEM.\n    // In this case the format used is\n    // red + green * 2 + blue * 3\n    //\n    // Other frequently used methods include the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n", "/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  getValue,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url`,\n * `tileUrlFunction` and `tileGrid` (exception: when the source projection is not `EPSG:3857`).\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      } else if (\n        mapOrLayer instanceof Map ||\n        mapOrLayer instanceof LayerGroup\n      ) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or VectorTile layer.\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|VectorTileLayer} mapOrLayer OpenLayers Map or VectorTile layer.\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJSON,\n          options\n        );\n        sourceOptions.format = new MVT();\n\n        if (Array.isArray(tileJSON.tiles)) {\n          sourceOptions.urls = tileJSON.tiles;\n        } else {\n          sourceOptions.url = tileJSON.tiles;\n        }\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\nconst geoJsonFormat = new GeoJSON();\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = decodeURI(transformed.url);\n      }\n    }\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(\n          bboxTemplate,\n          `${extent.join(',')},${projection.getCode()}`\n        );\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        url: extentUrl,\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    return new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n    });\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSource, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n\n        const functionCache = getFunctionCache(glStyle);\n\n        glSource = glStyle.sources[id];\n        if (type == 'background') {\n          layer = setupBackgroundLayer(glLayer, options, functionCache);\n        } else if (glSource.type == 'vector') {\n          layer = setupVectorLayer(glSource, styleUrl, options);\n        } else if (glSource.type == 'raster') {\n          layerIds = [];\n          layer = setupRasterLayer(glSource, styleUrl, options);\n          layer.setVisible(\n            glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n          );\n          layer.on(\n            'prerender',\n            prerenderRasterLayer(glLayer, layer, functionCache)\n          );\n        } else if (glSource.type == 'geojson') {\n          layer = setupGeoJSONLayer(glSource, styleUrl, options);\n        } else if (\n          glSource.type == 'raster-dem' &&\n          glLayer.type == 'hillshade'\n        ) {\n          layerIds = [];\n          const hillshadeLayer = setupHillshadeLayer(\n            glSource,\n            styleUrl,\n            options\n          );\n          layer = hillshadeLayer;\n          hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = event.resolution;\n            const zoom = getZoomForResolution(\n              event.resolution,\n              options.resolutions || defaultResolutions\n            );\n            data.vert =\n              5 *\n              getValue(\n                glLayer,\n                'paint',\n                'hillshade-exaggeration',\n                zoom,\n                emptyObj,\n                functionCache\n              );\n            data.sunAz = getValue(\n              glLayer,\n              'paint',\n              'hillshade-illumination-direction',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(\n              glLayer,\n              'paint',\n              'hillshade-highlight-color',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n            data.shadowColor = getValue(\n              glLayer,\n              'paint',\n              'hillshade-shadow-color',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n            data.accentColor = getValue(\n              glLayer,\n              'paint',\n              'hillshade-accent-color',\n              zoom,\n              emptyObj,\n              functionCache\n            );\n          });\n          layer.setVisible(\n            glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n          );\n        }\n        glSourceId = id;\n        if (layer) {\n          layer.set('mapbox-source', glSourceId);\n        }\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  mapOrGroup.set('mapbox-style', glStyle);\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n * @private\n */\nfunction finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            layer.setVisible(true);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return null;\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const mapboxLayers = mapOrGroup.get('mapbox-style').layers;\n  let index;\n  if (beforeLayerId !== undefined) {\n    const beforeLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    index = mapboxLayers.indexOf(beforeLayer);\n  } else {\n    index = mapboxLayers.length;\n  }\n  if (index === 0) {\n    throw new Error('Cannot add layer before first layer.');\n  }\n  if (mapboxLayers[index - 1].source !== mapboxLayer.source) {\n    throw new Error('Added layer and layer before must use the same source.');\n  }\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  mapboxLayers.splice(index, 0, mapboxLayer);\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.'\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  getLayer(mapOrGroup, mapboxLayer.id).changed();\n}\n\nexport {finalizeLayer as _finalizeLayer};\n", "/**\n * @module ol/layer/MapboxVector\n */\nimport BaseEvent from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport MVT from '../format/MVT.js';\nimport VectorTileLayer from '../layer/VectorTile.js';\nimport VectorTileSource from '../source/VectorTile.js';\nimport {applyBackground, applyStyle} from 'ol-mapbox-style';\n\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    applyStyle(this, url, options.layers || options.source, {\n      accessToken: this.accessToken,\n    })\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n    if (this.getBackground() === undefined) {\n      applyBackground(this, options.styleUrl, {\n        accessToken: this.accessToken,\n      });\n    }\n  }\n}\n\nexport default MapboxVectorLayer;\n", "/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imageResolution = image.getResolution();\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (imageResolution * pixelRatio) / imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n", "/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n", "/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n", "/**\n * @module ol/webgl/TileTexture\n */\n\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\nclass TileTexture extends EventTarget {\n  /**\n   * @param {Options} options The tile texture options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0])\n    );\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.gutter_ = options.gutter || 0;\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @private\n     */\n    this.helper_ = options.helper;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper_.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.textures.length = 0;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile_();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  uploadTile_() {\n    const helper = this.helper_;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter_,\n      sourceTileSize[1] + 2 * this.gutter_,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate\n      );\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate\n      );\n    }\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile_();\n      this.dispatchEvent(EventType.CHANGE);\n    }\n  }\n\n  disposeInternal() {\n    const gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (let i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n", "/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n  isEmpty,\n} from '../../extent.js';\nimport {\n  create as createMat4,\n  fromTransform as mat4FromTransform,\n} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 2 * (1 - 1 / (z + 1)) - 1;\n}\n\n/**\n * Add a tile texture to the lookup.\n * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n * tile textures by zoom level.\n * @param {import(\"../../webgl/TileTexture.js\").default} tileTexture A tile texture.\n * @param {number} z The zoom level.\n */\nfunction addTileTextureToLookup(tileTexturesByZ, tileTexture, z) {\n  if (!(z in tileTexturesByZ)) {\n    tileTexturesByZ[z] = [];\n  }\n  tileTexturesByZ[z].push(tileTexture);\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nfunction getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLLayerRenderer<LayerType>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts texture coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tempMat4_ = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../webgl/TileTexture.js\").default>}\n     * @private\n     */\n    this.tileTextureCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    /**\n     * @private\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  /**\n   * @param {import(\"../../webgl/TileTexture\").TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {Object<number, Array<TileTexture>>} tileTexturesByZ The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tileTexturesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileTextureCache = this.tileTextureCache_;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileTexture} */\n          let tileTexture;\n\n          /** @type {import(\"../../webgl/TileTexture\").TileType} */\n          let tile;\n\n          if (tileTextureCache.containsKey(cacheKey)) {\n            tileTexture = tileTextureCache.get(cacheKey);\n            tile = tileTexture.tile;\n          }\n          if (!tileTexture || tileTexture.tile.key !== tileSource.getKey()) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n            if (!tileTexture) {\n              tileTexture = new TileTexture({\n                tile: tile,\n                grid: tileGrid,\n                helper: this.helper,\n                gutter: gutter,\n              });\n              tileTextureCache.set(cacheKey, tileTexture);\n            } else {\n              if (this.isDrawableTile_(tile)) {\n                tileTexture.setTile(tile);\n              } else {\n                const interimTile =\n                  /** @type {import(\"../../webgl/TileTexture\").TileType} */ (\n                    tile.getInterimTile()\n                  );\n                tileTexture.setTile(interimTile);\n              }\n            }\n          }\n\n          addTileTextureToLookup(tileTexturesByZ, tileTexture, z);\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState_ = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>}\n     */\n    const tileTexturesByZ = {};\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileTexturesByZ,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileTexturesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileTexturesByZ,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    const tileTextures = tileTexturesByZ[z];\n    for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n      const tileTexture = tileTextures[i];\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileTexture.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileTexturesByZ\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileTexturesByZ\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState, !blend);\n\n    const zs = Object.keys(tileTexturesByZ).map(Number).sort(ascending);\n\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      const tileResolution = tileGrid.getResolution(tileZ);\n      const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n      const tileOrigin = tileGrid.getOrigin(tileZ);\n\n      const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n      const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n      const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n      const centerI =\n        (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n      const centerJ =\n        (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n      const tileScale = viewState.resolution / tileResolution;\n\n      const depth = depthForZ(tileZ);\n      const tileTextures = tileTexturesByZ[tileZ];\n      for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n        const tileTexture = tileTextures[i];\n        if (!tileTexture.loaded) {\n          continue;\n        }\n        const tile = tileTexture.tile;\n        const tileCoord = tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n\n        const tileCenterI = tileCoord[1];\n        const tileCenterJ = tileCoord[2];\n\n        resetTransform(this.tileTransform_);\n        scaleTransform(\n          this.tileTransform_,\n          2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n          -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n        );\n        rotateTransform(this.tileTransform_, viewState.rotation);\n        scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n        translateTransform(\n          this.tileTransform_,\n          (tileSize[0] * (tileCenterI - centerI) - gutter) /\n            tileWidthWithGutter,\n          (tileSize[1] * (tileCenterJ - centerJ) - gutter) /\n            tileHeightWithGutter\n        );\n\n        this.helper.setUniformMatrixValue(\n          Uniforms.TILE_TRANSFORM,\n          mat4FromTransform(this.tempMat4_, this.tileTransform_)\n        );\n\n        this.helper.bindBuffer(tileTexture.coords);\n        this.helper.bindBuffer(this.indices_);\n        this.helper.enableAttributes(attributeDescriptions);\n\n        let textureSlot = 0;\n        while (textureSlot < tileTexture.textures.length) {\n          const textureProperty = 'TEXTURE' + textureSlot;\n          const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n          gl.activeTexture(gl[textureProperty]);\n          gl.bindTexture(gl.TEXTURE_2D, tileTexture.textures[textureSlot]);\n          gl.uniform1i(\n            this.helper.getUniformLocation(uniformName),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        for (\n          let paletteIndex = 0;\n          paletteIndex < this.paletteTextures_.length;\n          ++paletteIndex\n        ) {\n          const paletteTexture = this.paletteTextures_[paletteIndex];\n          gl.activeTexture(gl['TEXTURE' + textureSlot]);\n          const texture = paletteTexture.getTexture(gl);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.uniform1i(\n            this.helper.getUniformLocation(paletteTexture.name),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        const alpha =\n          tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n        if (alpha < 1) {\n          frameState.animate = true;\n        }\n\n        this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n        this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_WIDTH,\n          tileWidthWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_HEIGHT,\n          tileHeightWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_RESOLUTION,\n          tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_X,\n          tileOrigin[0] +\n            tileCenterI * tileSize[0] * tileResolution -\n            gutter * tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_Y,\n          tileOrigin[1] -\n            tileCenterJ * tileSize[1] * tileResolution +\n            gutter * tileResolution\n        );\n        let gutterExtent = extent;\n        if (gutter > 0) {\n          gutterExtent = tileGrid.getTileCoordExtent(tileCoord);\n          getIntersection(gutterExtent, extent, gutterExtent);\n        }\n        this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n        this.helper.setUniformFloatValue(\n          Uniforms.RESOLUTION,\n          viewState.resolution\n        );\n        this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n        this.helper.drawElements(0, this.indices_.getSize());\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileTextureCache = this.tileTextureCache_;\n    while (tileTextureCache.canExpireCache()) {\n      const tileTexture = tileTextureCache.pop();\n      tileTexture.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileTextureCache_;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n   * tile textures by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileTexturesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileTextureCache = this.tileTextureCache_;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileTextureCache.containsKey(cacheKey)) {\n          const tileTexture = tileTextureCache.get(cacheKey);\n          if (tileTexture.loaded) {\n            addTileTextureToLookup(tileTexturesByZ, tileTexture, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileTextureCache = this.tileTextureCache_;\n    tileTextureCache.forEach((tileTexture) => tileTexture.dispose());\n    tileTextureCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n\n      helper.deleteBuffer(this.indices_);\n    }\n\n    super.disposeInternal();\n\n    delete this.indices_;\n    delete this.tileTextureCache_;\n    delete this.frameState_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n", "/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n */\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color).slice();\n  if (array.length < 4) {\n    array.push(1);\n  }\n  return arrayToGlsl(\n    array.map(function (c, i) {\n      return i < 3 ? c / 255 : c;\n    })\n  );\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), typeHint);\n  }\n\n  const valueType = getValueType(value);\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if (\n    (valueType & ValueTypes.STRING) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.STRING)\n  ) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if (\n    (valueType & ValueTypes.COLOR) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.COLOR)\n  ) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(`Unexpected expression ${value} (expected type ${typeHint})`);\n}\n\nfunction assertNumber(value) {\n  if (!(getValueType(value) & ValueTypes.NUMBER)) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if (!(getValueType(value) & ValueTypes.STRING)) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertUniqueInferredType(args, types) {\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Could not infer only one type from the following expression: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.attributes.includes(value)) {\n      context.attributes.push(value);\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + value;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.variables.includes(value)) {\n      context.variables.push(value);\n    }\n    return uniformNameForVariable(value);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = '';\n      result = args\n        .map((arg) => expressionToGlsl(context, arg))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val, ValueTypes.NUMBER);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const array = /** @type {Array<number>} */ (args);\n    if (args.length === 3) {\n      array.push(1);\n    }\n    const parsedArgs = args.map(function (val, i) {\n      return (\n        expressionToGlsl(context, val, ValueTypes.NUMBER) +\n        (i < 3 ? ' / 255.0' : '')\n      );\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[1]);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i]);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2]);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      result = `mix(${output1}, ${output2}, pow(clamp((${input} - ${stop1}) / (${stop2} - ${stop1}), 0.0, 1.0), ${exponent}))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['match'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[0]);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['case'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n", "/**\n * Classes and utilities for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\n\nimport {\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings = [];\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.sizeExpression = 'vec2(1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.rotationExpression = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.offsetExpression = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.colorExpression = 'vec4(1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.rotateWithView = false;\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSizeExpression(expression) {\n    this.sizeExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setRotationExpression(expression) {\n    this.rotationExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * Note: will only be used for point geometry shaders.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.offsetExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setColorExpression(expression) {\n    this.colorExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.rotateWithView = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @return {string} Previously set size expression\n   */\n  getSizeExpression() {\n    return this.sizeExpression;\n  }\n\n  /**\n   * @return {string} Previously set symbol offset expression\n   */\n  getOffsetExpression() {\n    return this.offsetExpression;\n  }\n\n  /**\n   * @return {string} Previously set color expression\n   */\n  getColorExpression() {\n    return this.colorExpression;\n  }\n\n  /**\n   * @return {string} Previously set texture coordinate expression\n   */\n  getTextureCoordinateExpression() {\n    return this.texCoordExpression;\n  }\n\n  /**\n   * @return {string} Previously set fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression;\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters,\n   * intended to be used on point geometries.\n   *\n   * Four uniforms are hardcoded in all shaders: `u_projectionMatrix`, `u_offsetScaleMatrix`,\n   * `u_offsetRotateMatrix`, `u_time`.\n   *\n   * The following attributes are hardcoded and expected to be present in the vertex buffers:\n   * `vec2 a_position`, `float a_index` (being the index of the vertex in the quad, 0 to 3).\n   *\n   * The following varyings are hardcoded and gives the coordinate of the pixel both in the quad and on the texture:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`\n   *\n   * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n   * (namely, hit color with encoded feature id).\n   * @return {string} The full shader as a string.\n   */\n  getSymbolVertexShader(forHitDetection) {\n    const offsetMatrix = this.rotateWithView\n      ? 'u_offsetScaleMatrix * u_offsetRotateMatrix'\n      : 'u_offsetScaleMatrix';\n\n    let attributes = this.attributes;\n    let varyings = this.varyings;\n\n    if (forHitDetection) {\n      attributes = attributes.concat('vec4 a_hitColor');\n      varyings = varyings.concat({\n        name: 'v_hitColor',\n        type: 'vec4',\n        expression: 'a_hitColor',\n      });\n    }\n\n    return `precision mediump float;\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_offsetScaleMatrix;\nuniform mat4 u_offsetRotateMatrix;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\n${this.uniforms\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\n${attributes\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\n${varyings\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\nvoid main(void) {\n  mat4 offsetMatrix = ${offsetMatrix};\n  vec2 halfSize = ${this.sizeExpression} * 0.5;\n  vec2 offset = ${this.offsetExpression};\n  float angle = ${this.rotationExpression};\n  float offsetX;\n  float offsetY;\n  if (a_index == 0.0) {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  } else if (a_index == 1.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else if (a_index == 2.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  }\n  vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n  vec4 texCoord = ${this.texCoordExpression};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v = a_index == 2.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v_quadCoord = vec2(u, v);\n${varyings\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters,\n   * intended to be used on point geometries.\n   *\n   * Expects the following varyings to be transmitted by the vertex shader:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`\n   *\n   * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n   * (namely, hit color with encoded feature id).\n   * @return {string} The full shader as a string.\n   */\n  getSymbolFragmentShader(forHitDetection) {\n    const hitDetectionBypass = forHitDetection\n      ? '  if (gl_FragColor.a < 0.1) { discard; } gl_FragColor = v_hitColor;'\n      : '';\n\n    let varyings = this.varyings;\n\n    if (forHitDetection) {\n      varyings = varyings.concat({\n        name: 'v_hitColor',\n        type: 'vec4',\n        expression: 'a_hitColor',\n      });\n    }\n\n    return `precision mediump float;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\n${this.uniforms\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\n${varyings\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\nvoid main(void) {\n  if (${this.discardExpression}) { discard; }\n  gl_FragColor = ${this.colorExpression};\n  gl_FragColor.rgb *= gl_FragColor.a;\n${hitDetectionBypass}\n}`;\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {Object<string,import(\"./Helper\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../renderer/webgl/PointsLayer\").CustomAttribute>} attributes Attribute descriptions.\n */\n\n/**\n * Parses a {@link import(\"../style/literal\").LiteralStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/literal\").LiteralStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  const symbStyle = style.symbol;\n  const size = symbStyle.size !== undefined ? symbStyle.size : 1;\n  const color = symbStyle.color || 'white';\n  const texCoord = symbStyle.textureCoord || [0, 0, 1, 1];\n  const offset = symbStyle.offset || [0, 0];\n  const opacity = symbStyle.opacity !== undefined ? symbStyle.opacity : 1;\n  const rotation = symbStyle.rotation !== undefined ? symbStyle.rotation : 0;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n  };\n  const parsedSize = expressionToGlsl(\n    vertContext,\n    size,\n    ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER\n  );\n  const parsedOffset = expressionToGlsl(\n    vertContext,\n    offset,\n    ValueTypes.NUMBER_ARRAY\n  );\n  const parsedTexCoord = expressionToGlsl(\n    vertContext,\n    texCoord,\n    ValueTypes.NUMBER_ARRAY\n  );\n  const parsedRotation = expressionToGlsl(\n    vertContext,\n    rotation,\n    ValueTypes.NUMBER\n  );\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    attributes: [],\n    stringLiteralsMap: vertContext.stringLiteralsMap,\n    functions: {},\n  };\n  const parsedColor = expressionToGlsl(fragContext, color, ValueTypes.COLOR);\n  const parsedOpacity = expressionToGlsl(\n    fragContext,\n    opacity,\n    ValueTypes.NUMBER\n  );\n\n  let opacityFilter = '1.0';\n  const visibleSize = `vec2(${expressionToGlsl(\n    fragContext,\n    size,\n    ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER\n  )}).x`;\n  switch (symbStyle.symbolType) {\n    case 'square':\n      break;\n    case 'image':\n      break;\n    // taken from https://thebookofshaders.com/07/\n    case 'circle':\n      opacityFilter = `(1.0-smoothstep(1.-4./${visibleSize},1.,dot(v_quadCoord-.5,v_quadCoord-.5)*4.))`;\n      break;\n    case 'triangle':\n      const st = '(v_quadCoord*2.-1.)';\n      const a = `(atan(${st}.x,${st}.y))`;\n      opacityFilter = `(1.0-smoothstep(.5-3./${visibleSize},.5,cos(floor(.5+${a}/2.094395102)*2.094395102-${a})*length(${st})))`;\n      break;\n\n    default:\n      throw new Error('Unexpected symbol type: ' + symbStyle.symbolType);\n  }\n\n  const builder = new ShaderBuilder()\n    .setSizeExpression(`vec2(${parsedSize})`)\n    .setRotationExpression(parsedRotation)\n    .setSymbolOffsetExpression(parsedOffset)\n    .setTextureCoordinateExpression(parsedTexCoord)\n    .setSymbolRotateWithView(!!symbStyle.rotateWithView)\n    .setColorExpression(\n      `vec4(${parsedColor}.rgb, ${parsedColor}.a * ${parsedOpacity} * ${opacityFilter})`\n    );\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      ValueTypes.BOOLEAN\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  // define one uniform per variable\n  fragContext.variables.forEach(function (varName) {\n    const uniformName = uniformNameForVariable(varName);\n    builder.addUniform(`float ${uniformName}`);\n    uniforms[uniformName] = function () {\n      if (!style.variables || style.variables[varName] === undefined) {\n        throw new Error(\n          `The following variable is missing from the style: ${varName}`\n        );\n      }\n      let value = style.variables[varName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(vertContext, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  });\n\n  if (symbStyle.symbolType === 'image' && symbStyle.src) {\n    const texture = new Image();\n    texture.crossOrigin =\n      symbStyle.crossOrigin === undefined ? 'anonymous' : symbStyle.crossOrigin;\n    texture.src = symbStyle.src;\n    builder\n      .addUniform('sampler2D u_texture')\n      .setColorExpression(\n        builder.getColorExpression() + ' * texture2D(u_texture, v_texCoord)'\n      );\n    uniforms['u_texture'] = texture;\n  }\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  fragContext.attributes.forEach(function (attrName) {\n    if (!vertContext.attributes.includes(attrName)) {\n      vertContext.attributes.push(attrName);\n    }\n    builder.addVarying(`v_${attrName}`, 'float', `a_${attrName}`);\n  });\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  vertContext.attributes.forEach(function (attrName) {\n    builder.addAttribute(`float a_${attrName}`);\n  });\n\n  return {\n    builder: builder,\n    attributes: vertContext.attributes.map(function (attributeName) {\n      return {\n        name: attributeName,\n        callback: function (feature, props) {\n          let value = props[attributeName];\n          if (typeof value === 'string') {\n            value = getStringNumberEquivalent(vertContext, value);\n          }\n          return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        },\n      };\n    }),\n    uniforms: uniforms,\n  };\n}\n", "/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {parseLiteralStyle} from '../webgl/ShaderBuilder.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} VectorSourceType\n * @typedef {Object} Options\n * @property {import('../style/literal.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {VectorSourceType} [source] Point source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} VectorSourceType\n * @extends {Layer<VectorSourceType, WebGLPointsLayerRenderer>}\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass WebGLPointsLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} options Options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n     */\n    this.parseResult_ = parseLiteralStyle(options.style);\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = options.style.variables || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hitDetectionDisabled_ = !!options.disableHitDetection;\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n      fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n      hitVertexShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolVertexShader(true),\n      hitFragmentShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolFragmentShader(true),\n      uniforms: this.parseResult_.uniforms,\n      attributes: this.parseResult_.attributes,\n    });\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\nexport default WebGLPointsLayer;\n", "/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const context = {\n    inFragmentShader: true,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n    bandCount: bandCount,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(\n      context,\n      style.contrast,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(\n      context,\n      style.exposure,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(\n      context,\n      style.saturation,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(\n      context,\n      style.brightness,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = context.variables.length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variableName = context.variables[i];\n    if (!(variableName in style.variables)) {\n      throw new Error(`Missing '${variableName}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variableName);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variableName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(context, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(function (\n    name\n  ) {\n    return context.functions[name];\n  });\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      if (color.a == 0.0) {\n        discard;\n      }\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n      ? [source]\n      : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAEA,WAAO,UAAUA;AACjB,WAAO,QAAQ,UAAUA;AAEzB,aAASA,QAAO,MAAM,aAAa,KAAK;AAEpC,YAAM,OAAO;AAEb,UAAI,WAAW,eAAe,YAAY,QACtC,WAAW,WAAW,YAAY,CAAC,IAAI,MAAM,KAAK,QAClD,YAAY,WAAW,MAAM,GAAG,UAAU,KAAK,IAAI,GACnD,YAAY,CAAC;AAEjB,UAAI,CAAC,aAAa,UAAU,SAAS,UAAU;AAAM,eAAO;AAE5D,UAAI,MAAM,MAAM,MAAM,MAAM,GAAG,GAAG;AAElC,UAAI;AAAU,oBAAY,eAAe,MAAM,aAAa,WAAW,GAAG;AAG1E,UAAI,KAAK,SAAS,KAAK,KAAK;AACxB,eAAO,OAAO,KAAK,CAAC;AACpB,eAAO,OAAO,KAAK,CAAC;AAEpB,iBAAS,IAAI,KAAK,IAAI,UAAU,KAAK,KAAK;AACtC,cAAI,KAAK,CAAC;AACV,cAAI,KAAK,IAAI,CAAC;AACd,cAAI,IAAI;AAAM,mBAAO;AACrB,cAAI,IAAI;AAAM,mBAAO;AACrB,cAAI,IAAI;AAAM,mBAAO;AACrB,cAAI,IAAI;AAAM,mBAAO;AAAA,QACzB;AAGA,kBAAU,KAAK,IAAI,OAAO,MAAM,OAAO,IAAI;AAC3C,kBAAU,YAAY,IAAI,QAAQ,UAAU;AAAA,MAChD;AAEA,mBAAa,WAAW,WAAW,KAAK,MAAM,MAAM,SAAS,CAAC;AAE9D,aAAO;AAAA,IACX;AAGA,aAAS,WAAW,MAAM,OAAO,KAAK,KAAK,WAAW;AAClD,UAAI,GAAG;AAEP,UAAI,cAAe,WAAW,MAAM,OAAO,KAAK,GAAG,IAAI,GAAI;AACvD,aAAK,IAAI,OAAO,IAAI,KAAK,KAAK;AAAK,iBAAO,WAAW,GAAG,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI;AAAA,MACtF,OAAO;AACH,aAAK,IAAI,MAAM,KAAK,KAAK,OAAO,KAAK;AAAK,iBAAO,WAAW,GAAG,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI;AAAA,MAC7F;AAEA,UAAI,QAAQC,QAAO,MAAM,KAAK,IAAI,GAAG;AACjC,mBAAW,IAAI;AACf,eAAO,KAAK;AAAA,MAChB;AAEA,aAAO;AAAA,IACX;AAGA,aAAS,aAAa,OAAO,KAAK;AAC9B,UAAI,CAAC;AAAO,eAAO;AACnB,UAAI,CAAC;AAAK,cAAM;AAEhB,UAAI,IAAI,OACJ;AACJ,SAAG;AACC,gBAAQ;AAER,YAAI,CAAC,EAAE,YAAYA,QAAO,GAAG,EAAE,IAAI,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,MAAM,IAAI;AACpE,qBAAW,CAAC;AACZ,cAAI,MAAM,EAAE;AACZ,cAAI,MAAM,EAAE;AAAM;AAClB,kBAAQ;AAAA,QAEZ,OAAO;AACH,cAAI,EAAE;AAAA,QACV;AAAA,MACJ,SAAS,SAAS,MAAM;AAExB,aAAO;AAAA,IACX;AAGA,aAAS,aAAa,KAAK,WAAW,KAAK,MAAM,MAAM,SAAS,MAAM;AAClE,UAAI,CAAC;AAAK;AAGV,UAAI,CAAC,QAAQ;AAAS,mBAAW,KAAK,MAAM,MAAM,OAAO;AAEzD,UAAI,OAAO,KACP,MAAM;AAGV,aAAO,IAAI,SAAS,IAAI,MAAM;AAC1B,eAAO,IAAI;AACX,eAAO,IAAI;AAEX,YAAI,UAAU,YAAY,KAAK,MAAM,MAAM,OAAO,IAAI,MAAM,GAAG,GAAG;AAE9D,oBAAU,KAAK,KAAK,IAAI,MAAM,CAAC;AAC/B,oBAAU,KAAK,IAAI,IAAI,MAAM,CAAC;AAC9B,oBAAU,KAAK,KAAK,IAAI,MAAM,CAAC;AAE/B,qBAAW,GAAG;AAGd,gBAAM,KAAK;AACX,iBAAO,KAAK;AAEZ;AAAA,QACJ;AAEA,cAAM;AAGN,YAAI,QAAQ,MAAM;AAEd,cAAI,CAAC,MAAM;AACP,yBAAa,aAAa,GAAG,GAAG,WAAW,KAAK,MAAM,MAAM,SAAS,CAAC;AAAA,UAG1E,WAAW,SAAS,GAAG;AACnB,kBAAM,uBAAuB,aAAa,GAAG,GAAG,WAAW,GAAG;AAC9D,yBAAa,KAAK,WAAW,KAAK,MAAM,MAAM,SAAS,CAAC;AAAA,UAG5D,WAAW,SAAS,GAAG;AACnB,wBAAY,KAAK,WAAW,KAAK,MAAM,MAAM,OAAO;AAAA,UACxD;AAEA;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAGA,aAAS,MAAM,KAAK;AAChB,UAAI,IAAI,IAAI,MACR,IAAI,KACJ,IAAI,IAAI;AAEZ,UAAI,KAAK,GAAG,GAAG,CAAC,KAAK;AAAG,eAAO;AAG/B,UAAI,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE;AAG7D,UAAI,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK,IACrD,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK,IACrD,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK,IACrD,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK;AAEzD,UAAI,IAAI,EAAE;AACV,aAAO,MAAM,GAAG;AACZ,YAAI,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAC9C,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,KAChD,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,KAAK;AAAG,iBAAO;AACzC,YAAI,EAAE;AAAA,MACV;AAEA,aAAO;AAAA,IACX;AAEA,aAAS,YAAY,KAAK,MAAM,MAAM,SAAS;AAC3C,UAAI,IAAI,IAAI,MACR,IAAI,KACJ,IAAI,IAAI;AAEZ,UAAI,KAAK,GAAG,GAAG,CAAC,KAAK;AAAG,eAAO;AAE/B,UAAI,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE;AAG7D,UAAI,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK,IACrD,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK,IACrD,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK,IACrD,KAAK,KAAK,KAAM,KAAK,KAAK,KAAK,KAAO,KAAK,KAAK,KAAK;AAGzD,UAAI,OAAO,OAAO,IAAI,IAAI,MAAM,MAAM,OAAO,GACzC,OAAO,OAAO,IAAI,IAAI,MAAM,MAAM,OAAO;AAE7C,UAAI,IAAI,IAAI,OACR,IAAI,IAAI;AAGZ,aAAO,KAAK,EAAE,KAAK,QAAQ,KAAK,EAAE,KAAK,MAAM;AACzC,YAAI,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,MAAM,KAAK,MAAM,KACrE,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,KAAK;AAAG,iBAAO;AAC9F,YAAI,EAAE;AAEN,YAAI,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,MAAM,KAAK,MAAM,KACrE,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,KAAK;AAAG,iBAAO;AAC9F,YAAI,EAAE;AAAA,MACV;AAGA,aAAO,KAAK,EAAE,KAAK,MAAM;AACrB,YAAI,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,MAAM,KAAK,MAAM,KACrE,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,KAAK;AAAG,iBAAO;AAC9F,YAAI,EAAE;AAAA,MACV;AAGA,aAAO,KAAK,EAAE,KAAK,MAAM;AACrB,YAAI,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,MAAM,MAAM,KAAK,MAAM,KACrE,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,KAAK;AAAG,iBAAO;AAC9F,YAAI,EAAE;AAAA,MACV;AAEA,aAAO;AAAA,IACX;AAGA,aAAS,uBAAuB,OAAO,WAAW,KAAK;AACnD,UAAI,IAAI;AACR,SAAG;AACC,YAAI,IAAI,EAAE,MACN,IAAI,EAAE,KAAK;AAEf,YAAI,CAACA,QAAO,GAAG,CAAC,KAAKC,YAAW,GAAG,GAAG,EAAE,MAAM,CAAC,KAAK,cAAc,GAAG,CAAC,KAAK,cAAc,GAAG,CAAC,GAAG;AAE5F,oBAAU,KAAK,EAAE,IAAI,MAAM,CAAC;AAC5B,oBAAU,KAAK,EAAE,IAAI,MAAM,CAAC;AAC5B,oBAAU,KAAK,EAAE,IAAI,MAAM,CAAC;AAG5B,qBAAW,CAAC;AACZ,qBAAW,EAAE,IAAI;AAEjB,cAAI,QAAQ;AAAA,QAChB;AACA,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAEf,aAAO,aAAa,CAAC;AAAA,IACzB;AAGA,aAAS,YAAY,OAAO,WAAW,KAAK,MAAM,MAAM,SAAS;AAE7D,UAAI,IAAI;AACR,SAAG;AACC,YAAI,IAAI,EAAE,KAAK;AACf,eAAO,MAAM,EAAE,MAAM;AACjB,cAAI,EAAE,MAAM,EAAE,KAAK,gBAAgB,GAAG,CAAC,GAAG;AAEtC,gBAAI,IAAI,aAAa,GAAG,CAAC;AAGzB,gBAAI,aAAa,GAAG,EAAE,IAAI;AAC1B,gBAAI,aAAa,GAAG,EAAE,IAAI;AAG1B,yBAAa,GAAG,WAAW,KAAK,MAAM,MAAM,SAAS,CAAC;AACtD,yBAAa,GAAG,WAAW,KAAK,MAAM,MAAM,SAAS,CAAC;AACtD;AAAA,UACJ;AACA,cAAI,EAAE;AAAA,QACV;AACA,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAAA,IACnB;AAGA,aAAS,eAAe,MAAM,aAAa,WAAW,KAAK;AACvD,UAAI,QAAQ,CAAC,GACT,GAAG,KAAK,OAAO,KAAK;AAExB,WAAK,IAAI,GAAG,MAAM,YAAY,QAAQ,IAAI,KAAK,KAAK;AAChD,gBAAQ,YAAY,CAAC,IAAI;AACzB,cAAM,IAAI,MAAM,IAAI,YAAY,IAAI,CAAC,IAAI,MAAM,KAAK;AACpD,eAAO,WAAW,MAAM,OAAO,KAAK,KAAK,KAAK;AAC9C,YAAI,SAAS,KAAK;AAAM,eAAK,UAAU;AACvC,cAAM,KAAK,YAAY,IAAI,CAAC;AAAA,MAChC;AAEA,YAAM,KAAK,QAAQ;AAGnB,WAAK,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AAC/B,oBAAY,cAAc,MAAM,CAAC,GAAG,SAAS;AAAA,MACjD;AAEA,aAAO;AAAA,IACX;AAEA,aAAS,SAAS,GAAG,GAAG;AACpB,aAAO,EAAE,IAAI,EAAE;AAAA,IACnB;AAGA,aAAS,cAAc,MAAM,WAAW;AACpC,UAAI,SAAS,eAAe,MAAM,SAAS;AAC3C,UAAI,CAAC,QAAQ;AACT,eAAO;AAAA,MACX;AAEA,UAAI,gBAAgB,aAAa,QAAQ,IAAI;AAG7C,mBAAa,eAAe,cAAc,IAAI;AAC9C,aAAO,aAAa,QAAQ,OAAO,IAAI;AAAA,IAC3C;AAGA,aAAS,eAAe,MAAM,WAAW;AACrC,UAAI,IAAI,WACJ,KAAK,KAAK,GACV,KAAK,KAAK,GACV,KAAK,WACL;AAIJ,SAAG;AACC,YAAI,MAAM,EAAE,KAAK,MAAM,EAAE,KAAK,KAAK,EAAE,KAAK,MAAM,EAAE,GAAG;AACjD,cAAI,IAAI,EAAE,KAAK,KAAK,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE;AAC5D,cAAI,KAAK,MAAM,IAAI,IAAI;AACnB,iBAAK;AACL,gBAAI,EAAE,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE;AAC3B,gBAAI,MAAM;AAAI,qBAAO;AAAA,UACzB;AAAA,QACJ;AACA,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAEf,UAAI,CAAC;AAAG,eAAO;AAMf,UAAI,OAAO,GACP,KAAK,EAAE,GACP,KAAK,EAAE,GACP,SAAS,UACT;AAEJ,UAAI;AAEJ,SAAG;AACC,YAAI,MAAM,EAAE,KAAK,EAAE,KAAK,MAAM,OAAO,EAAE,KAC/B,gBAAgB,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG;AAErF,gBAAM,KAAK,IAAI,KAAK,EAAE,CAAC,KAAK,KAAK,EAAE;AAEnC,cAAI,cAAc,GAAG,IAAI,MACpB,MAAM,UAAW,QAAQ,WAAW,EAAE,IAAI,EAAE,KAAM,EAAE,MAAM,EAAE,KAAK,qBAAqB,GAAG,CAAC,KAAO;AAClG,gBAAI;AACJ,qBAAS;AAAA,UACb;AAAA,QACJ;AAEA,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAEf,aAAO;AAAA,IACX;AAGA,aAAS,qBAAqB,GAAG,GAAG;AAChC,aAAO,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,IAAI,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,IAAI;AAAA,IACpE;AAGA,aAAS,WAAW,OAAO,MAAM,MAAM,SAAS;AAC5C,UAAI,IAAI;AACR,SAAG;AACC,YAAI,EAAE,MAAM;AAAG,YAAE,IAAI,OAAO,EAAE,GAAG,EAAE,GAAG,MAAM,MAAM,OAAO;AACzD,UAAE,QAAQ,EAAE;AACZ,UAAE,QAAQ,EAAE;AACZ,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAEf,QAAE,MAAM,QAAQ;AAChB,QAAE,QAAQ;AAEV,iBAAW,CAAC;AAAA,IAChB;AAIA,aAAS,WAAW,MAAM;AACtB,UAAI,GAAG,GAAG,GAAG,GAAG,MAAM,WAAW,OAAO,OACpC,SAAS;AAEb,SAAG;AACC,YAAI;AACJ,eAAO;AACP,eAAO;AACP,oBAAY;AAEZ,eAAO,GAAG;AACN;AACA,cAAI;AACJ,kBAAQ;AACR,eAAK,IAAI,GAAG,IAAI,QAAQ,KAAK;AACzB;AACA,gBAAI,EAAE;AACN,gBAAI,CAAC;AAAG;AAAA,UACZ;AACA,kBAAQ;AAER,iBAAO,QAAQ,KAAM,QAAQ,KAAK,GAAI;AAElC,gBAAI,UAAU,MAAM,UAAU,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI;AAClD,kBAAI;AACJ,kBAAI,EAAE;AACN;AAAA,YACJ,OAAO;AACH,kBAAI;AACJ,kBAAI,EAAE;AACN;AAAA,YACJ;AAEA,gBAAI;AAAM,mBAAK,QAAQ;AAAA;AAClB,qBAAO;AAEZ,cAAE,QAAQ;AACV,mBAAO;AAAA,UACX;AAEA,cAAI;AAAA,QACR;AAEA,aAAK,QAAQ;AACb,kBAAU;AAAA,MAEd,SAAS,YAAY;AAErB,aAAO;AAAA,IACX;AAGA,aAAS,OAAO,GAAG,GAAG,MAAM,MAAM,SAAS;AAEvC,WAAK,IAAI,QAAQ,UAAU;AAC3B,WAAK,IAAI,QAAQ,UAAU;AAE3B,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AAErB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AACrB,WAAK,IAAK,KAAK,KAAM;AAErB,aAAO,IAAK,KAAK;AAAA,IACrB;AAGA,aAAS,YAAY,OAAO;AACxB,UAAI,IAAI,OACJ,WAAW;AACf,SAAG;AACC,YAAI,EAAE,IAAI,SAAS,KAAM,EAAE,MAAM,SAAS,KAAK,EAAE,IAAI,SAAS;AAAI,qBAAW;AAC7E,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAEf,aAAO;AAAA,IACX;AAGA,aAAS,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACrD,cAAQ,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,QAC1C,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,QAC1C,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK;AAAA,IACtD;AAGA,aAAS,gBAAgB,GAAG,GAAG;AAC3B,aAAO,EAAE,KAAK,MAAM,EAAE,KAAK,EAAE,KAAK,MAAM,EAAE,KAAK,CAAC,kBAAkB,GAAG,CAAC;AAAA,OAC9D,cAAc,GAAG,CAAC,KAAK,cAAc,GAAG,CAAC,KAAK,aAAa,GAAG,CAAC;AAAA,OAC9D,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,KAAK,KAAK,GAAG,EAAE,MAAM,CAAC;AAAA,MAC7CD,QAAO,GAAG,CAAC,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,IAAI,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,IAAI;AAAA,IACrF;AAGA,aAAS,KAAK,GAAG,GAAG,GAAG;AACnB,cAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;AAAA,IAC9D;AAGA,aAASA,QAAO,IAAI,IAAI;AACpB,aAAO,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG;AAAA,IACxC;AAGA,aAASC,YAAW,IAAI,IAAI,IAAI,IAAI;AAChC,UAAI,KAAK,KAAK,KAAK,IAAI,IAAI,EAAE,CAAC;AAC9B,UAAI,KAAK,KAAK,KAAK,IAAI,IAAI,EAAE,CAAC;AAC9B,UAAI,KAAK,KAAK,KAAK,IAAI,IAAI,EAAE,CAAC;AAC9B,UAAI,KAAK,KAAK,KAAK,IAAI,IAAI,EAAE,CAAC;AAE9B,UAAI,OAAO,MAAM,OAAO;AAAI,eAAO;AAEnC,UAAI,OAAO,KAAK,UAAU,IAAI,IAAI,EAAE;AAAG,eAAO;AAC9C,UAAI,OAAO,KAAK,UAAU,IAAI,IAAI,EAAE;AAAG,eAAO;AAC9C,UAAI,OAAO,KAAK,UAAU,IAAI,IAAI,EAAE;AAAG,eAAO;AAC9C,UAAI,OAAO,KAAK,UAAU,IAAI,IAAI,EAAE;AAAG,eAAO;AAE9C,aAAO;AAAA,IACX;AAGA,aAAS,UAAU,GAAG,GAAG,GAAG;AACxB,aAAO,EAAE,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,IAC1H;AAEA,aAAS,KAAK,KAAK;AACf,aAAO,MAAM,IAAI,IAAI,MAAM,IAAI,KAAK;AAAA,IACxC;AAGA,aAAS,kBAAkB,GAAG,GAAG;AAC7B,UAAI,IAAI;AACR,SAAG;AACC,YAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,MAAM,EAAE,KAC7DA,YAAW,GAAG,EAAE,MAAM,GAAG,CAAC;AAAG,iBAAO;AAC5C,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAEf,aAAO;AAAA,IACX;AAGA,aAAS,cAAc,GAAG,GAAG;AACzB,aAAO,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI,IAAI,IAC7B,KAAK,GAAG,GAAG,EAAE,IAAI,KAAK,KAAK,KAAK,GAAG,EAAE,MAAM,CAAC,KAAK,IACjD,KAAK,GAAG,GAAG,EAAE,IAAI,IAAI,KAAK,KAAK,GAAG,EAAE,MAAM,CAAC,IAAI;AAAA,IACvD;AAGA,aAAS,aAAa,GAAG,GAAG;AACxB,UAAI,IAAI,GACJ,SAAS,OACT,MAAM,EAAE,IAAI,EAAE,KAAK,GACnB,MAAM,EAAE,IAAI,EAAE,KAAK;AACvB,SAAG;AACC,YAAM,EAAE,IAAI,OAAS,EAAE,KAAK,IAAI,MAAQ,EAAE,KAAK,MAAM,EAAE,KAC9C,MAAM,EAAE,KAAK,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,KAAK,EAAE;AAC/D,mBAAS,CAAC;AACd,YAAI,EAAE;AAAA,MACV,SAAS,MAAM;AAEf,aAAO;AAAA,IACX;AAIA,aAAS,aAAa,GAAG,GAAG;AACxB,UAAI,KAAK,IAAI,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAC3B,KAAK,IAAI,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAC3B,KAAK,EAAE,MACP,KAAK,EAAE;AAEX,QAAE,OAAO;AACT,QAAE,OAAO;AAET,SAAG,OAAO;AACV,SAAG,OAAO;AAEV,SAAG,OAAO;AACV,SAAG,OAAO;AAEV,SAAG,OAAO;AACV,SAAG,OAAO;AAEV,aAAO;AAAA,IACX;AAGA,aAAS,WAAW,GAAG,GAAG,GAAG,MAAM;AAC/B,UAAI,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC;AAExB,UAAI,CAAC,MAAM;AACP,UAAE,OAAO;AACT,UAAE,OAAO;AAAA,MAEb,OAAO;AACH,UAAE,OAAO,KAAK;AACd,UAAE,OAAO;AACT,aAAK,KAAK,OAAO;AACjB,aAAK,OAAO;AAAA,MAChB;AACA,aAAO;AAAA,IACX;AAEA,aAAS,WAAW,GAAG;AACnB,QAAE,KAAK,OAAO,EAAE;AAChB,QAAE,KAAK,OAAO,EAAE;AAEhB,UAAI,EAAE;AAAO,UAAE,MAAM,QAAQ,EAAE;AAC/B,UAAI,EAAE;AAAO,UAAE,MAAM,QAAQ,EAAE;AAAA,IACnC;AAEA,aAAS,KAAK,GAAG,GAAG,GAAG;AAEnB,WAAK,IAAI;AAGT,WAAK,IAAI;AACT,WAAK,IAAI;AAGT,WAAK,OAAO;AACZ,WAAK,OAAO;AAGZ,WAAK,IAAI;AAGT,WAAK,QAAQ;AACb,WAAK,QAAQ;AAGb,WAAK,UAAU;AAAA,IACnB;AAIA,IAAAF,QAAO,YAAY,SAAU,MAAM,aAAa,KAAK,WAAW;AAC5D,UAAI,WAAW,eAAe,YAAY;AAC1C,UAAI,WAAW,WAAW,YAAY,CAAC,IAAI,MAAM,KAAK;AAEtD,UAAI,cAAc,KAAK,IAAI,WAAW,MAAM,GAAG,UAAU,GAAG,CAAC;AAC7D,UAAI,UAAU;AACV,iBAAS,IAAI,GAAG,MAAM,YAAY,QAAQ,IAAI,KAAK,KAAK;AACpD,cAAI,QAAQ,YAAY,CAAC,IAAI;AAC7B,cAAI,MAAM,IAAI,MAAM,IAAI,YAAY,IAAI,CAAC,IAAI,MAAM,KAAK;AACxD,yBAAe,KAAK,IAAI,WAAW,MAAM,OAAO,KAAK,GAAG,CAAC;AAAA,QAC7D;AAAA,MACJ;AAEA,UAAI,gBAAgB;AACpB,WAAK,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK,GAAG;AACtC,YAAI,IAAI,UAAU,CAAC,IAAI;AACvB,YAAI,IAAI,UAAU,IAAI,CAAC,IAAI;AAC3B,YAAI,IAAI,UAAU,IAAI,CAAC,IAAI;AAC3B,yBAAiB,KAAK;AAAA,WACjB,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,MAC9C,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;AAAA,QAAE;AAAA,MACzD;AAEA,aAAO,gBAAgB,KAAK,kBAAkB,IAAI,IAC9C,KAAK,KAAK,gBAAgB,eAAe,WAAW;AAAA,IAC5D;AAEA,aAAS,WAAW,MAAM,OAAO,KAAK,KAAK;AACvC,UAAI,MAAM;AACV,eAAS,IAAI,OAAO,IAAI,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK;AAClD,gBAAQ,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;AACtD,YAAI;AAAA,MACR;AACA,aAAO;AAAA,IACX;AAGA,IAAAA,QAAO,UAAU,SAAU,MAAM;AAC7B,UAAI,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,QACjB,SAAS,EAAC,UAAU,CAAC,GAAG,OAAO,CAAC,GAAG,YAAY,IAAG,GAClD,YAAY;AAEhB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,iBAAS,IAAI,GAAG,IAAI,KAAK,CAAC,EAAE,QAAQ,KAAK;AACrC,mBAAS,IAAI,GAAG,IAAI,KAAK;AAAK,mBAAO,SAAS,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,QACpE;AACA,YAAI,IAAI,GAAG;AACP,uBAAa,KAAK,IAAI,CAAC,EAAE;AACzB,iBAAO,MAAM,KAAK,SAAS;AAAA,QAC/B;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;ACtpBO,IAAM,eAAe;AAUrB,IAAM,uBAAuB;AAQ7B,IAAM,cAAc;AAQpB,IAAM,cAAc;AAQpB,IAAM,eAAe;AAMrB,IAAM,gBAAgB;AAMtB,IAAM,iBAAiB;AAMvB,IAAM,eAAe;AAMrB,IAAM,QAAQ;AASrB,IAAM,cAAc,CAAC,sBAAsB,SAAS,aAAa,WAAW;AAOrE,SAAS,WAAW,QAAQ,YAAY;AAC7C,eAAa,OAAO;AAAA,IAClB;AAAA,MACE,uBAAuB;AAAA,MACvB,WAAW,oBAAoB,QAAQ;AAAA;AAAA,IACzC;AAAA,IACA;AAAA,EACF;AACA,QAAM,KAAK,YAAY;AACvB,WAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,QAAI;AACF,YAAM,UAAU,OAAO,WAAW,YAAY,CAAC,GAAG,UAAU;AAC5D,UAAI,SAAS;AACX;AAAA;AAAA,UAA8C;AAAA;AAAA,MAChD;AAAA,IACF,SAAS,GAAP;AAAA,IAEF;AAAA,EACF;AACA,SAAO;AACT;;;AC/FO,IAAM,cAAc;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AACF;AAkBA,IAAM,mBAAN,MAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMrB,YAAY,MAAM,OAAO;AAKvB,SAAK,QAAQ;AAMb,SAAK,OAAO;AAEZ,WAAO,SAAS,gBAAgB,SAAS,sBAAsB,EAAE;AAMjE,SAAK,QAAQ,UAAU,SAAY,QAAQ,YAAY;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,MAAM;AACX,SAAK,QAAQ,KAAK,qBAAqB,KAAK,IAAI,GAAG,IAAI;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAUG,QAAO;AACf,SAAK,QAAQ,qBAAqB,KAAK,IAAI,EAAE,KAAKA,MAAK;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,gBAAgBC,SAAQ;AACtB,SAAK,QAAQ,KAAK,qBAAqB,KAAK,IAAI,GAAGA,OAAM;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU;AACR,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU;AACR,WAAO,KAAK,QAAQ,KAAK,MAAM,SAAS;AAAA,EAC1C;AACF;AAOO,SAAS,qBAAqB,MAAM;AACzC,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AAEA,IAAO,iBAAQ;;;ACpIf,IAAO,2BAAQ;AAAA,EACb,MAAM;AAAA,EACN,UAAU;AACZ;;;ACJA,IAAM,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB9B,IAAM,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgFhC,IAAM,0BAAN,MAA8B;AAAA;AAAA;AAAA;AAAA,EAI5B,YAAY,SAAS;AACnB,SAAK,MAAM,QAAQ;AACnB,UAAM,KAAK,KAAK;AAEhB,SAAK,cAAc,QAAQ,cAAc;AAEzC,SAAK,uBAAuB,GAAG,cAAc;AAC7C,SAAK,2BAA2B;AAEhC,SAAK,eAAe,GAAG,kBAAkB;AAIzC,UAAM,eAAe,GAAG,aAAa,GAAG,aAAa;AACrD,OAAG;AAAA,MACD;AAAA,MACA,QAAQ,gBAAgB;AAAA,IAC1B;AACA,OAAG,cAAc,YAAY;AAC7B,UAAM,iBAAiB,GAAG,aAAa,GAAG,eAAe;AACzD,OAAG;AAAA,MACD;AAAA,MACA,QAAQ,kBAAkB;AAAA,IAC5B;AACA,OAAG,cAAc,cAAc;AAC/B,SAAK,uBAAuB,GAAG,cAAc;AAC7C,OAAG,aAAa,KAAK,sBAAsB,YAAY;AACvD,OAAG,aAAa,KAAK,sBAAsB,cAAc;AACzD,OAAG,YAAY,KAAK,oBAAoB;AAGxC,SAAK,8BAA8B,GAAG,aAAa;AACnD,UAAM,gBAAgB,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC;AAC/D,OAAG,WAAW,GAAG,cAAc,KAAK,2BAA2B;AAC/D,OAAG;AAAA,MACD,GAAG;AAAA,MACH,IAAI,aAAa,aAAa;AAAA,MAC9B,GAAG;AAAA,IACL;AAEA,SAAK,8BAA8B,GAAG;AAAA,MACpC,KAAK;AAAA,MACL;AAAA,IACF;AACA,SAAK,+BAA+B,GAAG;AAAA,MACrC,KAAK;AAAA,MACL;AAAA,IACF;AACA,SAAK,+BAA+B,GAAG;AAAA,MACrC,KAAK;AAAA,MACL;AAAA,IACF;AACA,SAAK,+BAA+B,GAAG;AAAA,MACrC,KAAK;AAAA,MACL;AAAA,IACF;AAOA,SAAK,YAAY,CAAC;AAClB,YAAQ,YACN,OAAO,KAAK,QAAQ,QAAQ,EAAE,QAAQ,CAAC,SAAS;AAC9C,WAAK,UAAU,KAAK;AAAA,QAClB,OAAO,QAAQ,SAAS,IAAI;AAAA,QAC5B,UAAU,GAAG,mBAAmB,KAAK,sBAAsB,IAAI;AAAA,MACjE,CAAC;AAAA,IACH,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ;AACN,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,KAAK,YAAY;AACf,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,cAAc;AAAA,MAClB,GAAG,qBAAqB,KAAK;AAAA,MAC7B,GAAG,sBAAsB,KAAK;AAAA,IAChC;AAGA,OAAG,gBAAgB,GAAG,aAAa,KAAK,eAAe,CAAC;AACxD,OAAG,SAAS,GAAG,GAAG,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC;AAGhD,QACE,CAAC,KAAK,4BACN,KAAK,yBAAyB,CAAC,MAAM,YAAY,CAAC,KAClD,KAAK,yBAAyB,CAAC,MAAM,YAAY,CAAC,GAClD;AACA,WAAK,2BAA2B;AAGhC,YAAM,QAAQ;AACd,YAAM,iBAAiB,GAAG;AAC1B,YAAM,SAAS;AACf,YAAM,SAAS,GAAG;AAClB,YAAM,OAAO,GAAG;AAChB,YAAM,OAAO;AACb,SAAG,YAAY,GAAG,YAAY,KAAK,oBAAoB;AACvD,SAAG;AAAA,QACD,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA,YAAY,CAAC;AAAA,QACb,YAAY,CAAC;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,SAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,MAAM;AAChE,SAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,SAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AAGnE,SAAG;AAAA,QACD,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,KAAK;AAAA,QACL;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,YAAY,UAAU,YAAY,aAAa;AACnD,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,OAAO,WAAW;AAExB,OAAG;AAAA,MACD,GAAG;AAAA,MACH,WAAW,SAAS,eAAe,IAAI;AAAA,IACzC;AACA,OAAG,cAAc,GAAG,QAAQ;AAC5B,OAAG,YAAY,GAAG,YAAY,KAAK,oBAAoB;AAEvD,QAAI,CAAC,UAAU;AAGb,YAAM,WAAW,OAAO,GAAG,MAAM;AACjC,UAAI,CAAC,WAAW,cAAc,QAAQ,GAAG;AACvC,cAAM,aAAa,GAAG,qBAAqB;AAC3C,YAAI,cAAc,WAAW,uBAAuB;AAClD,aAAG,WAAW,GAAK,GAAK,GAAK,CAAG;AAChC,aAAG,MAAM,GAAG,gBAAgB;AAAA,QAC9B;AAEA,mBAAW,cAAc,QAAQ,IAAI;AAAA,MACvC;AAAA,IACF;AAEA,OAAG,OAAO,GAAG,KAAK;AAClB,OAAG,UAAU,GAAG,KAAK,GAAG,mBAAmB;AAC3C,OAAG,SAAS,GAAG,GAAG,GAAG,oBAAoB,GAAG,mBAAmB;AAE/D,OAAG,WAAW,GAAG,cAAc,KAAK,2BAA2B;AAE/D,OAAG,WAAW,KAAK,oBAAoB;AACvC,OAAG,wBAAwB,KAAK,2BAA2B;AAC3D,OAAG;AAAA,MACD,KAAK;AAAA,MACL;AAAA,MACA,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,OAAG,UAAU,KAAK,8BAA8B,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAChE,OAAG,UAAU,KAAK,8BAA8B,CAAC;AAEjD,UAAM,UAAU,WAAW,iBAAiB,WAAW,UAAU,EAAE;AACnE,OAAG,UAAU,KAAK,8BAA8B,OAAO;AAEvD,SAAK,cAAc,UAAU;AAE7B,QAAI,YAAY;AACd,iBAAW,IAAI,UAAU;AAAA,IAC3B;AACA,OAAG,WAAW,GAAG,WAAW,GAAG,CAAC;AAChC,QAAI,aAAa;AACf,kBAAY,IAAI,UAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiB;AACf,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc,YAAY;AACxB,UAAM,KAAK,KAAK,MAAM;AAEtB,QAAI;AACJ,QAAI,cAAc;AAClB,SAAK,UAAU,QAAQ,SAAU,SAAS;AACxC,cACE,OAAO,QAAQ,UAAU,aACrB,QAAQ,MAAM,UAAU,IACxB,QAAQ;AAGd,UAAI,iBAAiB,qBAAqB,iBAAiB,WAAW;AAEpE,YAAI,CAAC,QAAQ,SAAS;AACpB,kBAAQ,UAAU,GAAG,cAAc;AAAA,QACrC;AACA,WAAG,cAAc,GAAG,UAAU,aAAa,CAAC;AAC5C,WAAG,YAAY,GAAG,YAAY,QAAQ,OAAO;AAC7C,WAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,MAAM;AAChE,WAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,WAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AAEnE,YAAI,iBAAiB,WAAW;AAC9B,aAAG;AAAA,YACD,GAAG;AAAA,YACH;AAAA,YACA,GAAG;AAAA,YACH,GAAG;AAAA,YACH,MAAM;AAAA,YACN,MAAM;AAAA,YACN;AAAA,YACA,GAAG;AAAA,YACH,IAAI,WAAW,MAAM,IAAI;AAAA,UAC3B;AAAA,QACF,OAAO;AACL,aAAG;AAAA,YACD,GAAG;AAAA,YACH;AAAA,YACA,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAGA,WAAG,UAAU,QAAQ,UAAU,aAAa;AAAA,MAC9C,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,gBAAQ,MAAM,QAAQ;AAAA,UACpB,KAAK;AACH,eAAG,UAAU,QAAQ,UAAU,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AACjD;AAAA,UACF,KAAK;AACH,eAAG,UAAU,QAAQ,UAAU,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAC3D;AAAA,UACF,KAAK;AACH,eAAG;AAAA,cACD,QAAQ;AAAA,cACR,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,YACT;AACA;AAAA,UACF;AACE;AAAA,QACJ;AAAA,MACF,WAAW,OAAO,UAAU,UAAU;AACpC,WAAG,UAAU,QAAQ,UAAU,KAAK;AAAA,MACtC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,IAAO,6BAAQ;;;AC5YR,SAASC,UAAS;AACvB,SAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACxD;AAOO,SAAS,cAAc,MAAM,WAAW;AAC7C,OAAK,CAAC,IAAI,UAAU,CAAC;AACrB,OAAK,CAAC,IAAI,UAAU,CAAC;AACrB,OAAK,CAAC,IAAI,UAAU,CAAC;AACrB,OAAK,CAAC,IAAI,UAAU,CAAC;AACrB,OAAK,EAAE,IAAI,UAAU,CAAC;AACtB,OAAK,EAAE,IAAI,UAAU,CAAC;AACtB,SAAO;AACT;;;ACoBO,IAAM,iBAAiB;AAAA,EAC5B,mBAAmB;AAAA,EACnB,qBAAqB;AAAA,EACrB,wBAAwB;AAAA,EACxB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,aAAa;AACf;AAOO,IAAM,gBAAgB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAyDA,IAAM,cAAc,CAAC;AAMrB,SAAS,wBAAwB,KAAK;AACpC,SAAO,YAAY;AACrB;AAEA,IAAI,4BAA4B;AAKhC,SAAS,0BAA0B;AACjC,QAAM,MAAM,YAAY;AACxB,+BAA6B;AAC7B,SAAO;AACT;AAMA,SAAS,UAAU,KAAK;AACtB,MAAI,YAAY,YAAY,GAAG;AAC/B,MAAI,CAAC,WAAW;AACd,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,MAAM,WAAW;AACxB,WAAO,MAAM,OAAO;AACpB,gBAAY,EAAC,OAAO,GAAG,OAAM;AAC7B,gBAAY,GAAG,IAAI;AAAA,EACrB;AAEA,YAAU,SAAS;AACnB,SAAO,UAAU;AACnB;AAKA,SAAS,cAAc,KAAK;AAC1B,QAAM,YAAY,YAAY,GAAG;AACjC,MAAI,CAAC,WAAW;AACd;AAAA,EACF;AAEA,YAAU,SAAS;AACnB,MAAI,UAAU,QAAQ,GAAG;AACvB;AAAA,EACF;AAEA,QAAM,SAAS,UAAU;AACzB,QAAM,KAAK,WAAW,MAAM;AAC5B,QAAM,YAAY,GAAG,aAAa,oBAAoB;AACtD,MAAI,WAAW;AACb,cAAU,YAAY;AAAA,EACxB;AAEA,SAAO,YAAY,GAAG;AACxB;AA8HA,IAAM,cAAN,cAA0B,mBAAW;AAAA;AAAA;AAAA;AAAA,EAInC,YAAY,SAAS;AACnB,UAAM;AACN,cAAU,WAAW,CAAC;AAGtB,SAAK,+BAA+B,KAAK,uBAAuB,KAAK,IAAI;AAGzE,SAAK,mCACH,KAAK,2BAA2B,KAAK,IAAI;AAM3C,SAAK,kBAAkB,QAAQ,iBAC3B,wBAAwB,QAAQ,cAAc,IAC9C,wBAAwB;AAM5B,SAAK,UAAU,UAAU,KAAK,eAAe;AAM7C,SAAK,MAAM,WAAW,KAAK,OAAO;AAMlC,SAAK,eAAe,CAAC;AAMrB,SAAK,kBAAkB,CAAC;AAMxB,SAAK,kBAAkB;AAEvB,SAAK,QAAQ;AAAA,MACX,yBAAiB;AAAA,MACjB,KAAK;AAAA,IACP;AACA,SAAK,QAAQ;AAAA,MACX,yBAAiB;AAAA,MACjB,KAAK;AAAA,IACP;AAMA,SAAK,sBAAsB,OAAgB;AAM3C,SAAK,qBAAqB,OAAgB;AAM1C,SAAK,WAAWC,QAAO;AAMvB,SAAK,oBAAoB,CAAC;AAM1B,SAAK,mBAAmB,CAAC;AAQzB,SAAK,YAAY,CAAC;AAClB,QAAI,QAAQ,UAAU;AACpB,WAAK,YAAY,QAAQ,QAAQ;AAAA,IACnC;AAEA,UAAM,KAAK,KAAK,MAAM;AAStB,SAAK,qBAAqB,QAAQ,gBAC9B,QAAQ,cAAc,IAAI,SAAUC,UAAS;AAC3C,aAAO,IAAI,2BAAwB;AAAA,QACjC,cAAc;AAAA,QACd,YAAYA,SAAQ;AAAA,QACpB,cAAcA,SAAQ;AAAA,QACtB,gBAAgBA,SAAQ;AAAA,QACxB,UAAUA,SAAQ;AAAA,MACpB,CAAC;AAAA,IACH,CAAC,IACD,CAAC,IAAI,2BAAwB,EAAC,cAAc,GAAE,CAAC,CAAC;AAMpD,SAAK,uBAAuB;AAM5B,SAAK,aAAa,KAAK,IAAI;AAAA,EAC7B;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,UAAU;AACpB,SAAK,YAAY,CAAC;AAClB,eAAW,QAAQ,UAAU;AAC3B,WAAK,UAAU,KAAK;AAAA,QAClB;AAAA,QACA,OAAO,SAAS,IAAI;AAAA,MACtB,CAAC;AAAA,IACH;AACA,SAAK,oBAAoB,CAAC;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,sBAAsB,gBAAgB;AACpC,WAAO,KAAK,oBAAoB,wBAAwB,cAAc;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,MAAM;AACjB,QAAI,QAAQ,KAAK,iBAAiB;AAChC,aAAO,KAAK,gBAAgB,IAAI;AAAA,IAClC;AACA,UAAM,YAAY,KAAK,IAAI,aAAa,IAAI;AAC5C,SAAK,gBAAgB,IAAI,IAAI;AAC7B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAWC,SAAQ;AACjB,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,YAAY,OAAOA,OAAM;AAC/B,QAAI,cAAc,KAAK,aAAa,SAAS;AAC7C,QAAI,CAAC,aAAa;AAChB,YAAM,cAAc,GAAG,aAAa;AACpC,oBAAc;AAAA,QACZ,QAAQA;AAAA,QACR;AAAA,MACF;AACA,WAAK,aAAa,SAAS,IAAI;AAAA,IACjC;AACA,OAAG,WAAWA,QAAO,QAAQ,GAAG,YAAY,WAAW;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,gBAAgBA,SAAQ;AACtB,UAAM,KAAK,KAAK,MAAM;AACtB,SAAK,WAAWA,OAAM;AACtB,OAAG,WAAWA,QAAO,QAAQ,GAAGA,QAAO,SAAS,GAAGA,QAAO,SAAS,CAAC;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,KAAK;AAChB,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,YAAY,OAAO,GAAG;AAC5B,UAAM,mBAAmB,KAAK,aAAa,SAAS;AACpD,QAAI,oBAAoB,CAAC,GAAG,cAAc,GAAG;AAC3C,SAAG,aAAa,iBAAiB,WAAW;AAAA,IAC9C;AACA,WAAO,KAAK,aAAa,SAAS;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,SAAK,QAAQ;AAAA,MACX,yBAAiB;AAAA,MACjB,KAAK;AAAA,IACP;AACA,SAAK,QAAQ;AAAA,MACX,yBAAiB;AAAA,MACjB,KAAK;AAAA,IACP;AAEA,kBAAc,KAAK,eAAe;AAElC,WAAO,KAAK;AACZ,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,YAAY,YAAY,mBAAmB;AACzC,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,SAAS,KAAK,UAAU;AAC9B,UAAM,OAAO,WAAW;AACxB,UAAM,aAAa,WAAW;AAE9B,WAAO,QAAQ,KAAK,CAAC,IAAI;AACzB,WAAO,SAAS,KAAK,CAAC,IAAI;AAC1B,WAAO,MAAM,QAAQ,KAAK,CAAC,IAAI;AAC/B,WAAO,MAAM,SAAS,KAAK,CAAC,IAAI;AAGhC,aAAS,IAAI,KAAK,mBAAmB,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5D,WAAK,mBAAmB,CAAC,EAAE,KAAK,UAAU;AAAA,IAC5C;AAEA,OAAG,YAAY,GAAG,YAAY,IAAI;AAElC,OAAG,WAAW,GAAK,GAAK,GAAK,CAAG;AAChC,OAAG,MAAM,GAAG,gBAAgB;AAE5B,OAAG,OAAO,GAAG,KAAK;AAClB,OAAG,UAAU,GAAG,KAAK,oBAAoB,GAAG,OAAO,GAAG,mBAAmB;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,0BAA0B,YAAY,cAAc,mBAAmB;AACrE,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,OAAO,aAAa,QAAQ;AAElC,OAAG,gBAAgB,GAAG,aAAa,aAAa,eAAe,CAAC;AAChE,OAAG,SAAS,GAAG,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAClC,OAAG,YAAY,GAAG,YAAY,aAAa,WAAW,CAAC;AACvD,OAAG,WAAW,GAAK,GAAK,GAAK,CAAG;AAChC,OAAG,MAAM,GAAG,gBAAgB;AAC5B,OAAG,OAAO,GAAG,KAAK;AAClB,OAAG,UAAU,GAAG,KAAK,oBAAoB,GAAG,OAAO,GAAG,mBAAmB;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,OAAO,KAAK;AACvB,UAAM,KAAK,KAAK,MAAM;AACtB,SAAK,aAAa,wBAAwB;AAE1C,UAAM,cAAc,GAAG;AACvB,UAAM,cAAc;AAEpB,UAAM,WAAW,MAAM;AACvB,UAAM,gBAAgB,QAAQ;AAC9B,OAAG,aAAa,GAAG,WAAW,UAAU,aAAa,aAAa;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,YAAY,YAAY,aAAa;AAEhD,aAAS,IAAI,GAAG,KAAK,KAAK,mBAAmB,QAAQ,IAAI,IAAI,KAAK;AAChE,UAAI,MAAM,KAAK,GAAG;AAChB,aAAK,mBAAmB,CAAC,EAAE;AAAA,UACzB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF,OAAO;AACL,aAAK,mBAAmB,CAAC,EAAE;AAAA,UACzB;AAAA,UACA,KAAK,mBAAmB,IAAI,CAAC;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY;AACV,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ;AACN,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB,YAAY;AAC1B,UAAM,OAAO,WAAW;AACxB,UAAM,WAAW,WAAW,UAAU;AACtC,UAAM,aAAa,WAAW;AAE9B,UAAM,oBAAoB,MAAe,KAAK,kBAAkB;AAChE,UAAe,mBAAmB,IAAI,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;AAE1D,UAAM,qBAAqB,MAAe,KAAK,mBAAmB;AAClE,QAAI,aAAa,GAAG;AAClB,aAAgB,oBAAoB,CAAC,QAAQ;AAAA,IAC/C;AAEA,SAAK;AAAA,MACH,eAAe;AAAA,MACf,cAAc,KAAK,UAAU,iBAAiB;AAAA,IAChD;AACA,SAAK;AAAA,MACH,eAAe;AAAA,MACf,cAAc,KAAK,UAAU,kBAAkB;AAAA,IACjD;AAEA,SAAK;AAAA,MACH,eAAe;AAAA,OACd,KAAK,IAAI,IAAI,KAAK,cAAc;AAAA,IACnC;AACA,SAAK,qBAAqB,eAAe,MAAM,WAAW,UAAU,IAAI;AACxE,SAAK;AAAA,MACH,eAAe;AAAA,MACf,WAAW,UAAU;AAAA,IACvB;AACA,SAAK,qBAAqB,eAAe,aAAa,UAAU;AAChE,SAAK,oBAAoB,eAAe,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAAA,EACrE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cAAc,YAAY;AACxB,UAAM,KAAK,KAAK,MAAM;AAEtB,QAAI;AACJ,QAAI,cAAc;AAClB,SAAK,UAAU,QAAQ,CAAC,YAAY;AAClC,cACE,OAAO,QAAQ,UAAU,aACrB,QAAQ,MAAM,UAAU,IACxB,QAAQ;AAGd,UACE,iBAAiB,qBACjB,iBAAiB,oBACjB,iBAAiB,WACjB;AAEA,YAAI,CAAC,QAAQ,SAAS;AACpB,kBAAQ,YAAY;AACpB,kBAAQ,UAAU,GAAG,cAAc;AAAA,QACrC;AACA,WAAG,cAAc,GAAG,UAAU,aAAa,CAAC;AAC5C,WAAG,YAAY,GAAG,YAAY,QAAQ,OAAO;AAC7C,WAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,MAAM;AAChE,WAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,WAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AAEnE,cAAM,aACJ,EAAE,iBAAiB;AAAA,QACc,MAAO;AAC1C,YAAI,cAAc,QAAQ,cAAc,OAAO;AAC7C,kBAAQ,YAAY;AACpB,aAAG;AAAA,YACD,GAAG;AAAA,YACH;AAAA,YACA,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAGA,WAAG,UAAU,KAAK,mBAAmB,QAAQ,IAAI,GAAG,aAAa;AAAA,MACnE,WAAW,MAAM,QAAQ,KAAK,KAAK,MAAM,WAAW,GAAG;AACrD,aAAK;AAAA,UACH,QAAQ;AAAA,UACR,cAAc,KAAK,UAAU,KAAK;AAAA,QACpC;AAAA,MACF,WAAW,MAAM,QAAQ,KAAK,KAAK,MAAM,UAAU,GAAG;AACpD,gBAAQ,MAAM,QAAQ;AAAA,UACpB,KAAK;AACH,eAAG;AAAA,cACD,KAAK,mBAAmB,QAAQ,IAAI;AAAA,cACpC,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,YACT;AACA;AAAA,UACF,KAAK;AACH,eAAG;AAAA,cACD,KAAK,mBAAmB,QAAQ,IAAI;AAAA,cACpC,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,YACT;AACA;AAAA,UACF,KAAK;AACH,eAAG;AAAA,cACD,KAAK,mBAAmB,QAAQ,IAAI;AAAA,cACpC,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,cACP,MAAM,CAAC;AAAA,YACT;AACA;AAAA,UACF;AACE;AAAA,QACJ;AAAA,MACF,WAAW,OAAO,UAAU,UAAU;AACpC,WAAG,UAAU,KAAK,mBAAmB,QAAQ,IAAI,GAAG,KAAK;AAAA,MAC3D;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,SAAS,YAAY;AAC9B,UAAM,KAAK,KAAK,MAAM;AACtB,OAAG,WAAW,OAAO;AACrB,SAAK,kBAAkB;AACvB,SAAK,oBAAoB,CAAC;AAC1B,SAAK,mBAAmB,CAAC;AACzB,SAAK,gBAAgB,UAAU;AAC/B,SAAK,cAAc,UAAU;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,cAAc,QAAQ,MAAM;AAC1B,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,SAAS,GAAG,aAAa,IAAI;AACnC,OAAG,aAAa,QAAQ,MAAM;AAC9B,OAAG,cAAc,MAAM;AACvB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,sBAAsB,oBAAoB;AACnD,UAAM,KAAK,KAAK,MAAM;AAEtB,UAAM,iBAAiB,KAAK;AAAA,MAC1B;AAAA,MACA,GAAG;AAAA,IACL;AAEA,UAAM,eAAe,KAAK;AAAA,MACxB;AAAA,MACA,GAAG;AAAA,IACL;AAEA,UAAM,UAAU,GAAG,cAAc;AACjC,OAAG,aAAa,SAAS,cAAc;AACvC,OAAG,aAAa,SAAS,YAAY;AACrC,OAAG,YAAY,OAAO;AAEtB,QAAI,CAAC,GAAG,mBAAmB,gBAAgB,GAAG,cAAc,GAAG;AAC7D,YAAM,UAAU,uCAAuC,GAAG;AAAA,QACxD;AAAA,MACF;AACA,YAAM,IAAI,MAAM,OAAO;AAAA,IACzB;AACA,OAAG,aAAa,cAAc;AAE9B,QAAI,CAAC,GAAG,mBAAmB,cAAc,GAAG,cAAc,GAAG;AAC3D,YAAM,UAAU,qCAAqC,GAAG;AAAA,QACtD;AAAA,MACF;AACA,YAAM,IAAI,MAAM,OAAO;AAAA,IACzB;AACA,OAAG,aAAa,YAAY;AAE5B,QAAI,CAAC,GAAG,oBAAoB,SAAS,GAAG,WAAW,GAAG;AACpD,YAAM,UAAU,8BAA8B,GAAG;AAAA,QAC/C;AAAA,MACF;AACA,YAAM,IAAI,MAAM,OAAO;AAAA,IACzB;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,mBAAmB,MAAM;AACvB,QAAI,KAAK,kBAAkB,IAAI,MAAM,QAAW;AAC9C,WAAK,kBAAkB,IAAI,IAAI,KAAK,MAAM,EAAE;AAAA,QAC1C,KAAK;AAAA,QACL;AAAA,MACF;AAAA,IACF;AACA,WAAO,KAAK,kBAAkB,IAAI;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,MAAM;AACzB,QAAI,KAAK,iBAAiB,IAAI,MAAM,QAAW;AAC7C,WAAK,iBAAiB,IAAI,IAAI,KAAK,MAAM,EAAE;AAAA,QACzC,KAAK;AAAA,QACL;AAAA,MACF;AAAA,IACF;AACA,WAAO,KAAK,iBAAiB,IAAI;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,wBAAwB,YAAY,WAAW;AAC7C,UAAM,OAAO,WAAW;AACxB,UAAM,WAAW,WAAW,UAAU;AACtC,UAAM,aAAa,WAAW,UAAU;AACxC,UAAM,SAAS,WAAW,UAAU;AAEpC,UAAe,SAAS;AACxB;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,aAAa,KAAK,CAAC;AAAA,MACxB,KAAK,aAAa,KAAK,CAAC;AAAA,MACxB,CAAC;AAAA,MACD,CAAC,OAAO,CAAC;AAAA,MACT,CAAC,OAAO,CAAC;AAAA,IACX;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,SAAS,OAAO;AACnC,SAAK,MAAM,EAAE,UAAU,KAAK,mBAAmB,OAAO,GAAG,KAAK;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,oBAAoB,SAAS,OAAO;AAClC,SAAK,MAAM,EAAE,WAAW,KAAK,mBAAmB,OAAO,GAAG,KAAK;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,oBAAoB,SAAS,OAAO;AAClC,SAAK,MAAM,EAAE,WAAW,KAAK,mBAAmB,OAAO,GAAG,KAAK;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,sBAAsB,SAAS,OAAO;AACpC,SAAK,MAAM,EAAE;AAAA,MACX,KAAK,mBAAmB,OAAO;AAAA,MAC/B;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,sBAAsB,YAAY,MAAM,MAAM,QAAQ,QAAQ;AAC5D,UAAMC,YAAW,KAAK,qBAAqB,UAAU;AAErD,QAAIA,YAAW,GAAG;AAChB;AAAA,IACF;AACA,SAAK,MAAM,EAAE,wBAAwBA,SAAQ;AAC7C,SAAK,MAAM,EAAE;AAAA,MACXA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,iBAAiB,YAAY;AAC3B,UAAM,SAAS,wBAAwB,UAAU;AACjD,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAM,OAAO,WAAW,CAAC;AACzB,WAAK;AAAA,QACH,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,QAAQ;AAAA,QACb;AAAA,QACA;AAAA,MACF;AACA,gBAAU,KAAK,OAAO,oBAAoB,KAAK,IAAI;AAAA,IACrD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,yBAAyB;AACvB,UAAM,KAAK,YAAY;AACvB,SAAK,kBAAkB;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,6BAA6B;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAY9B,cAAc,MAAM,MAAM,SAAS;AACjC,UAAM,KAAK,KAAK,MAAM;AACtB,cAAU,WAAW,GAAG,cAAc;AAGtC,UAAM,QAAQ;AACd,UAAM,iBAAiB,GAAG;AAC1B,UAAM,SAAS;AACf,UAAM,SAAS,GAAG;AAClB,UAAM,OAAO,GAAG;AAChB,OAAG,YAAY,GAAG,YAAY,OAAO;AACrC,QAAI,MAAM;AACR,SAAG,WAAW,GAAG,YAAY,OAAO,gBAAgB,QAAQ,MAAM,IAAI;AAAA,IACxE,OAAO;AACL,SAAG;AAAA,QACD,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK,CAAC;AAAA,QACN,KAAK,CAAC;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,OAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,MAAM;AAChE,OAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,OAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AAEnE,WAAO;AAAA,EACT;AACF;AAOO,SAAS,wBAAwB,YAAY;AAClD,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,UAAM,OAAO,WAAW,CAAC;AACzB,cAAU,KAAK,OAAO,oBAAoB,KAAK,IAAI;AAAA,EACrD;AACA,SAAO;AACT;AAOA,SAAS,oBAAoB,MAAM;AACjC,UAAQ,MAAM;AAAA,IACZ,KAAK,cAAc;AACjB,aAAO,WAAW;AAAA,IACpB,KAAK,cAAc;AACjB,aAAO,YAAY;AAAA,IACrB,KAAK,cAAc;AACjB,aAAO,YAAY;AAAA,IACrB,KAAK,cAAc;AAAA,IACnB;AACE,aAAO,aAAa;AAAA,EACxB;AACF;AAEA,IAAO,iBAAQ;;;AC/iCf,IAAM,qBAAN,cAAiCC,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7C,YAAY,OAAO,SAAS;AAC1B,UAAM,KAAK;AAEX,cAAU,WAAW,CAAC;AAQtB,SAAK,yBAAyB,OAAgB;AAM9C,SAAK,gBAAgB;AAKrB,SAAK,iBAAiB,QAAQ;AAK9B,SAAK,YAAY,QAAQ;AAMzB,SAAK;AAEL,UAAM,kBAAkB,iBAAc,KAAK,KAAK,aAAa,KAAK,IAAI,CAAC;AAEvE,SAAK,0BAA0B,KAAK,wBAAwB,KAAK,IAAI;AACrE,SAAK,2BAA2B,KAAK,yBAAyB,KAAK,IAAI;AAAA,EACzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,wBAAwB,SAAS,YAAY;AAC3C,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,MAAM,YAAYC,mBAAgB,UAAU,GAAG;AACjD,YAAM,QAAQ,IAAIC;AAAA,QAChBD,mBAAgB;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,cAAc,KAAK;AAAA,IAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,yBAAyB,SAAS,YAAY;AAC5C,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,MAAM,YAAYA,mBAAgB,WAAW,GAAG;AAClD,YAAM,QAAQ,IAAIC;AAAA,QAChBD,mBAAgB;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,cAAc,KAAK;AAAA,IAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,SAAS;AACb,SAAK,YAAY,QAAQ;AACzB,QAAI,KAAK,QAAQ;AACf,WAAK,OAAO,YAAY,KAAK,SAAS;AAAA,IACxC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe;AACb,QAAI,KAAK,QAAQ;AACf,WAAK,OAAO,QAAQ;AACpB,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,YAAY;AACvB,QAAI,KAAK,SAAS,EAAE,gBAAgB,GAAG;AACrC,UAAI,iBAAiB;AACrB,UAAI,cAAc;AAClB,UAAI;AACJ,eAAS,IAAI,GAAG,KAAK,WAAW,iBAAiB,QAAQ,IAAI,IAAI,KAAK;AACpE,cAAM,QAAQ,WAAW,iBAAiB,CAAC,EAAE;AAC7C,cAAM,WAAW,MAAM,YAAY;AACnC,YAAI,EAAE,oBAAoB,qBAAqB;AAC7C,2BAAiB;AACjB;AAAA,QACF;AACA,cAAM,iBAAiB,MAAM,aAAa;AAC1C,YAAI,kBAAkB,mBAAmB,WAAW;AAClD,yBAAe;AACf,2BAAiB;AAAA,QACnB;AACA,oBAAY;AACZ,YAAI,aAAa,MAAM;AACrB;AAAA,QACF;AAAA,MACF;AAEA,YAAM,iBACJ,SAAS,WAAW,QAAQ,YAAY;AAE1C,UAAI,CAAC,KAAK,UAAU,CAAC,KAAK,OAAO,sBAAsB,cAAc,GAAG;AACtE,aAAK,aAAa;AAElB,aAAK,SAAS,IAAI,eAAY;AAAA,UAC5B,eAAe,KAAK;AAAA,UACpB,UAAU,KAAK;AAAA,UACf;AAAA,QACF,CAAC;AAED,YAAI,WAAW;AACb,eAAK,OAAO,UAAU,EAAE,YAAY;AAAA,QACtC;AAEA,aAAK,mBAAmB;AAAA,MAC1B;AAAA,IACF;AAEA,WAAO,KAAK,qBAAqB,UAAU;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQtB,qBAAqB,YAAY;AAC/B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,SAAK,aAAa;AAClB,UAAM,gBAAgB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,qBAAqB,MAAM,SAAS,YAAY;AAC9C,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,MAAM,YAAY,IAAI,GAAG;AAC3B;AAAA,QACE,KAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX,CAAC,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,QACA,CAAC,WAAW,KAAK,CAAC;AAAA,MACpB;AAEA,YAAM,QAAQ,IAAIC;AAAA,QAChB;AAAA,QACA,KAAK;AAAA,QACL;AAAA,QACA;AAAA,MACF;AACA,YAAM,cAAc,KAAK;AAAA,IAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU,SAAS,YAAY;AAC7B,SAAK,qBAAqBD,mBAAgB,WAAW,SAAS,UAAU;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,WAAW,SAAS,YAAY;AAC9B,SAAK,qBAAqBA,mBAAgB,YAAY,SAAS,UAAU;AAAA,EAC3E;AACF;AAEA,IAAOD,iBAAQ;;;AC9Pf,IAAM,YAAY,IAAI,WAAW,CAAC;AAQlC,IAAM,oBAAN,MAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtB,YAAY,QAAQ,MAAM;AAKxB,SAAK,UAAU;AACf,UAAM,KAAK,OAAO,MAAM;AAMxB,SAAK,WAAW,GAAG,cAAc;AAMjC,SAAK,eAAe,GAAG,kBAAkB;AAMzC,SAAK,QAAQ,QAAQ,CAAC,GAAG,CAAC;AAM1B,SAAK,QAAQ,IAAI,WAAW,CAAC;AAM7B,SAAK,kBAAkB;AAEvB,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,QAAQ,MAAM;AACZ,QAAI,OAAO,MAAM,KAAK,KAAK,GAAG;AAC5B;AAAA,IACF;AACA,SAAK,MAAM,CAAC,IAAI,KAAK,CAAC;AACtB,SAAK,MAAM,CAAC,IAAI,KAAK,CAAC;AACtB,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,UAAU;AACR,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,kBAAkB;AAChB,SAAK,kBAAkB;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,UAAU;AACR,QAAI,KAAK,iBAAiB;AACxB,YAAM,OAAO,KAAK;AAClB,YAAM,KAAK,KAAK,QAAQ,MAAM;AAE9B,SAAG,gBAAgB,GAAG,aAAa,KAAK,YAAY;AACpD,SAAG;AAAA,QACD;AAAA,QACA;AAAA,QACA,KAAK,CAAC;AAAA,QACN,KAAK,CAAC;AAAA,QACN,GAAG;AAAA,QACH,GAAG;AAAA,QACH,KAAK;AAAA,MACP;AACA,WAAK,kBAAkB;AAAA,IACzB;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,UAAU,GAAG,GAAG;AACd,QAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,KAAK,KAAK,KAAK,MAAM,CAAC,GAAG;AAC7D,gBAAU,CAAC,IAAI;AACf,gBAAU,CAAC,IAAI;AACf,gBAAU,CAAC,IAAI;AACf,gBAAU,CAAC,IAAI;AACf,aAAO;AAAA,IACT;AAEA,SAAK,QAAQ;AACb,UAAM,QACJ,KAAK,MAAM,CAAC,KAAK,KAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,KAAK,KAAK,MAAM,CAAC;AACpE,cAAU,CAAC,IAAI,KAAK,MAAM,QAAQ,CAAC;AACnC,cAAU,CAAC,IAAI,KAAK,MAAM,QAAQ,IAAI,CAAC;AACvC,cAAU,CAAC,IAAI,KAAK,MAAM,QAAQ,IAAI,CAAC;AACvC,cAAU,CAAC,IAAI,KAAK,MAAM,QAAQ,IAAI,CAAC;AACvC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AACX,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB;AACf,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,cAAc;AACZ,UAAM,OAAO,KAAK;AAClB,UAAM,KAAK,KAAK,QAAQ,MAAM;AAE9B,SAAK,WAAW,KAAK,QAAQ,cAAc,MAAM,MAAM,KAAK,QAAQ;AAEpE,OAAG,gBAAgB,GAAG,aAAa,KAAK,YAAY;AACpD,OAAG,SAAS,GAAG,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAClC,OAAG;AAAA,MACD,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL;AAAA,IACF;AAEA,SAAK,QAAQ,IAAI,WAAW,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,EACnD;AACF;AAEA,IAAO,uBAAQ;;;ACnLR,IAAM,yBAAyB;AAAA,EACpC,0BAA0B;AAAA,EAC1B,wBAAwB;AAAA,EACxB,8BAA8B;AAChC;;;ACRA,oBAAmB;AAiUZ,SAAS,cAAcG,KAAIC,QAAO;AACvC,EAAAA,SAAQA,UAAS,CAAC;AAClB,QAAM,QAAQ;AACd,QAAM,SAAS,QAAQ;AACvB,EAAAA,OAAM,CAAC,IAAI,KAAK,MAAMD,MAAK,QAAQ,QAAQ,KAAK,IAAI;AACpD,EAAAC,OAAM,CAAC,IAAK,KAAK,MAAMD,MAAK,QAAQ,KAAK,IAAI,QAAS;AACtD,EAAAC,OAAM,CAAC,IAAK,KAAK,MAAMD,MAAK,KAAK,IAAI,QAAS;AAC9C,EAAAC,OAAM,CAAC,IAAKD,MAAK,QAAS;AAC1B,SAAOC;AACT;AAQO,SAAS,cAAcC,QAAO;AACnC,MAAIF,MAAK;AACT,QAAM,QAAQ;AACd,QAAM,OAAO,QAAQ;AACrB,EAAAA,OAAM,KAAK,MAAME,OAAM,CAAC,IAAI,QAAQ,QAAQ,QAAQ,IAAI;AACxD,EAAAF,OAAM,KAAK,MAAME,OAAM,CAAC,IAAI,QAAQ,QAAQ,IAAI;AAChD,EAAAF,OAAM,KAAK,MAAME,OAAM,CAAC,IAAI,QAAQ,IAAI;AACxC,EAAAF,OAAM,KAAK,MAAME,OAAM,CAAC,IAAI,IAAI;AAChC,SAAOF;AACT;;;AC7Ve,SAASG,UAAS;AACvB,QAAM,SAAS;AACf,SAAO,IAAI,OAAO,OAAO,SAAS,cAC9B,wCAAwC,OAAO,KAAK,QAAQ,QAAQ,EAAE,SAAS,QAAQ,IACvF,IAAI,gBAAgB,IAAI,KAAK,CAAC,MAAM,GAAG,EAAC,MAAM,yBAAwB,CAAC,CAAC,CAAC;AAC/E;;;ACoHR,IAAM,2BAAN,cAAuCC,eAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxD,YAAY,OAAO,SAAS;AAC1B,UAAM,WAAW,QAAQ,YAAY,CAAC;AACtC,UAAM,4BAA4B,OAAgB;AAClD,aAAS,eAAe,iBAAiB,IAAI;AAE7C,UAAM,OAAO;AAAA,MACX;AAAA,MACA,eAAe,QAAQ;AAAA,IACzB,CAAC;AAED,SAAK,QAAQ;AAEb,SAAK,kBAAkB;AAEvB,SAAK,kBAAkB,IAAI,eAAiB,cAAc,YAAY;AACtE,SAAK,qBAAqB,IAAI,eAAiB,cAAc,YAAY;AACzE,SAAK,iBAAiB,IAAI;AAAA,MACxB;AAAA,MACA;AAAA,IACF;AAKA,SAAK,gBAAgB,QAAQ;AAK7B,SAAK,kBAAkB,QAAQ;AAM/B,SAAK;AAML,SAAK,uBACH,QAAQ,qBAAqB,QAAQ,kBAAkB,OAAO;AAKhE,SAAK,mBAAmB,QAAQ;AAKhC,SAAK,qBAAqB,QAAQ;AAMlC,SAAK;AAEL,UAAM,mBAAmB,QAAQ,aAC7B,QAAQ,WAAW,IAAI,SAAU,WAAW;AAC1C,aAAO;AAAA,QACL,MAAM,OAAO,UAAU;AAAA,QACvB,MAAM;AAAA,QACN,MAAM,cAAc;AAAA,MACtB;AAAA,IACF,CAAC,IACD,CAAC;AAOL,SAAK,aAAa;AAAA,MAChB;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,cAAc;AAAA,MACtB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,cAAc;AAAA,MACtB;AAAA,IACF,EAAE,OAAO,gBAAgB;AAMzB,SAAK,yBAAyB;AAAA,MAC5B;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,cAAc;AAAA,MACtB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,cAAc;AAAA,MACtB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,cAAc;AAAA,MACtB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM,cAAc;AAAA,MACtB;AAAA,IACF,EAAE,OAAO,gBAAgB;AAEzB,SAAK,mBAAmB,QAAQ,aAAa,QAAQ,aAAa,CAAC;AAEnE,SAAK,kBAAkB,YAAY;AASnC,SAAK,oBAAoB;AAOzB,SAAK,mBAAmB,OAAgB;AAMxC,SAAK,yBAAyB,OAAgB;AAM9C,SAAK,sBAAsB,IAAI,aAAa,CAAC;AAO7C,SAAK,yBAAyB,IAAI,aAAa,CAAC;AAMhD,SAAK;AAOL,SAAK,sBAAsB;AAK3B,SAAK,UAAUC,QAAkB;AAEjC,SAAK,QAAQ;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,CAAC,UAAU;AACT,cAAM,WAAW,MAAM;AACvB,YAAI,SAAS,SAAS,uBAAuB,wBAAwB;AACnE,gBAAM,sBAAsB,SAAS;AACrC,cAAI,SAAS,cAAc;AACzB,iBAAK,mBAAmB,gBAAgB,SAAS,YAAY;AAC7D,iBAAK,OAAO,gBAAgB,KAAK,kBAAkB;AAAA,UACrD,OAAO;AACL,iBAAK,gBAAgB,gBAAgB,SAAS,YAAY;AAC1D,iBAAK,OAAO,gBAAgB,KAAK,eAAe;AAAA,UAClD;AACA,eAAK,eAAe,gBAAgB,SAAS,WAAW;AACxD,eAAK,OAAO,gBAAgB,KAAK,cAAc;AAE/C,eAAK,mBAAmB;AACxB;AAAA,YACE,KAAK;AAAA,YACL,KAAK;AAAA,UACP;AACA,cAAI,SAAS,cAAc;AACzB,iBAAK,yBAAyB,IAAI;AAAA,cAChC,MAAM,KAAK;AAAA,YACb;AAAA,UACF,OAAO;AACL,iBAAK,sBAAsB,IAAI;AAAA,cAC7B,MAAM,KAAK;AAAA,YACb;AACA,gBAAI,SAAS,uBAAuB,KAAK,qBAAqB;AAC5D,mBAAK,QAAQ;AAAA,YACf;AAAA,UACF;AAEA,eAAK,SAAS,EAAE,QAAQ;AAAA,QAC1B;AAAA,MACF;AAAA,IACF;AAOA,SAAK,gBAAgB,CAAC;AAOtB,SAAK,gBAAgB;AAErB,UAAM,SAAS,KAAK,SAAS,EAAE,UAAU;AACzC,SAAK,oBAAoB;AAAA,MACvB;AAAA,QACE;AAAA,QACA,wBAAgB;AAAA,QAChB,KAAK;AAAA,QACL;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA,wBAAgB;AAAA,QAChB,KAAK;AAAA,QACL;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA,wBAAgB;AAAA,QAChB,KAAK;AAAA,QACL;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA,wBAAgB;AAAA,QAChB,KAAK;AAAA,QACL;AAAA,MACF;AAAA,IACF;AACA,WAAO,eAAe,CAAC,YAAY;AACjC,WAAK,cAAc,OAAO,OAAO,CAAC,IAAI;AAAA,QACpC;AAAA,QACA,YAAY,QAAQ,cAAc;AAAA,QAClC,UAAU,QAAQ,YAAY;AAAA,MAChC;AACA,WAAK;AAAA,IACP,CAAC;AAAA,EACH;AAAA,EAEA,qBAAqB;AACnB,SAAK,WAAW,KAAK,OAAO;AAAA,MAC1B,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,QAAI,KAAK,sBAAsB;AAC7B,WAAK,cAAc,KAAK,OAAO;AAAA,QAC7B,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAEA,WAAK,mBAAmB,IAAI,qBAAkB,KAAK,MAAM;AAAA,IAC3D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,0BAA0B,OAAO;AAC/B,UAAM,UAAU,MAAM;AACtB,SAAK,cAAc,OAAO,OAAO,CAAC,IAAI;AAAA,MACpC;AAAA,MACA,YAAY,QAAQ,cAAc;AAAA,MAClC,UAAU,QAAQ,YAAY;AAAA,IAChC;AACA,SAAK;AAAA,EACP;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,4BAA4B,OAAO;AACjC,UAAM,UAAU,MAAM;AACtB,SAAK,cAAc,OAAO,OAAO,CAAC,IAAI;AAAA,MACpC;AAAA,MACA,YAAY,QAAQ,cAAc;AAAA,MAClC,UAAU,QAAQ,YAAY;AAAA,IAChC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,2BAA2B,OAAO;AAChC,UAAM,UAAU,MAAM;AACtB,WAAO,KAAK,cAAc,OAAO,OAAO,CAAC;AACzC,SAAK;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKA,4BAA4B;AAC1B,SAAK,gBAAgB,CAAC;AACtB,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,YAAY;AACtB,UAAM,KAAK,KAAK,OAAO,MAAM;AAC7B,SAAK,UAAU,IAAI,UAAU;AAE7B,UAAM,aAAa,WAAW,UAAU;AACxC,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,eAAe,MAAM,UAAU;AAErC,UAAM,aAAa,aAAa,SAAS,KAAK,WAAW,SAAS;AAClE,UAAM,mBAAmB,WAAW,UAAU;AAE9C,UAAM,SAAS,WAAW;AAC1B,UAAM,aAAa,aAAa,SAAS,gBAAgB,IAAI;AAC7D,UAAM,WAAW,aACb,KAAK,MAAM,OAAO,CAAC,IAAI,iBAAiB,CAAC,KAAK,UAAU,IAAI,IAC5D;AAEJ,UAAM,aAAa,aACf,KAAK,OAAO,OAAO,CAAC,IAAI,iBAAiB,CAAC,KAAK,UAAU,IACzD;AAEJ,QAAI,QAAQ;AACZ,UAAM,cAAc,KAAK,eAAe,QAAQ;AAEhD,OAAG;AAED,WAAK,OAAO,wBAAwB,YAAY,KAAK,iBAAiB;AACtE,gBAAmB,KAAK,mBAAmB,QAAQ,YAAY,CAAC;AAChE,eAAkB,KAAK,mBAAmB,KAAK,sBAAsB;AACrE,WAAK,OAAO,cAAc,UAAU;AAEpC,WAAK,OAAO,aAAa,GAAG,WAAW;AAAA,IACzC,SAAS,EAAE,QAAQ;AAEnB,SAAK,OAAO;AAAA,MACV;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AACA,UAAM,SAAS,KAAK,OAAO,UAAU;AAErC,QAAI,KAAK,sBAAsB;AAC7B,WAAK,mBAAmB,YAAY,YAAY,UAAU,UAAU;AACpE,WAAK,iBAAiB,gBAAgB;AAAA,IACxC;AAEA,SAAK,WAAW,IAAI,UAAU;AAE9B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,YAAY;AAC/B,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,eAAe,MAAM,UAAU;AACrC,UAAM,YAAY,WAAW;AAC7B,UAAM,gBACJ,CAAC,WAAW,UAAU,iBAAS,SAAS,KACxC,CAAC,WAAW,UAAU,iBAAS,WAAW;AAC5C,UAAM,gBAAgB,CAACC,QAAO,KAAK,iBAAiB,WAAW,MAAM;AACrE,UAAM,gBAAgB,KAAK,kBAAkB,aAAa,YAAY;AAEtE,QAAI,eAAe;AACjB,WAAK,kBAAkB,aAAa,YAAY;AAAA,IAClD;AAEA,QAAI,kBAAkB,iBAAiB,gBAAgB;AACrD,YAAM,aAAa,UAAU;AAC7B,YAAM,aAAa,UAAU;AAE7B,YAAM,eACJ,iBAAiB,qBAAa,MAAM,gBAAgB,IAAI;AAC1D,YAAM,SAAS,OAAO,WAAW,QAAQ,eAAe,UAAU;AAClE,mBAAa,aAAa,QAAQ,YAAY,UAAU;AAExD,WAAK,gBAAgB,UAAU;AAC/B,WAAK,kBAAkB,WAAW,OAAO,MAAM;AAAA,IACjD;AAEA,SAAK,OAAO,WAAW,KAAK,UAAU,UAAU;AAChD,SAAK,OAAO,YAAY,UAAU;AAGlC,SAAK,OAAO,WAAW,KAAK,eAAe;AAC3C,SAAK,OAAO,WAAW,KAAK,cAAc;AAC1C,SAAK,OAAO,iBAAiB,KAAK,UAAU;AAE5C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,gBAAgB,YAAY;AAE1B,UAAM,sBAAsB,OAAgB;AAC5C,SAAK,OAAO,wBAAwB,YAAY,mBAAmB;AAMnE,UAAM,0BACH,IAAI,KAAK,iBAAiB,UAAU,KAAK;AAC5C,QACE,CAAC,KAAK,uBACN,KAAK,oBAAoB,WAAW,wBACpC;AACA,WAAK,sBAAsB,IAAI,aAAa,sBAAsB;AAAA,IACpE;AACA,QAAI,KAAK,sBAAsB;AAC7B,YAAM,6BACH,IAAI,KAAK,iBAAiB,UAAU,KAAK;AAC5C,UACE,CAAC,KAAK,0BACN,KAAK,uBAAuB,WAAW,2BACvC;AACA,aAAK,yBAAyB,IAAI;AAAA,UAChC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,cAAcC;AAClB,UAAM,YAAY,CAAC;AACnB,UAAM,WAAW,CAAC;AAClB,QAAI,cAAc;AAClB,QAAI,WAAW;AACf,QAAI;AACJ,eAAW,cAAc,KAAK,eAAe;AAC3C,qBAAe,KAAK,cAAc,UAAU;AAC5C,MAAAA;AAAA,MACE,aAAa;AAEf,UAAI,CAACA,aAAYA,UAAS,QAAQ,MAAM,SAAS;AAC/C;AAAA,MACF;AAEA,gBAAU,CAAC,IAAIA,UAAS,mBAAmB,EAAE,CAAC;AAC9C,gBAAU,CAAC,IAAIA,UAAS,mBAAmB,EAAE,CAAC;AAC9C,YAAe,qBAAqB,SAAS;AAE7C,iBAAW,cAAc,WAAW,GAAG,QAAQ;AAE/C,WAAK,oBAAoB,aAAa,IAAI,UAAU,CAAC;AACrD,WAAK,oBAAoB,aAAa,IAAI,UAAU,CAAC;AAIrD,UAAI,KAAK,sBAAsB;AAC7B,aAAK,uBAAuB,UAAU,IAAI,UAAU,CAAC;AACrD,aAAK,uBAAuB,UAAU,IAAI,UAAU,CAAC;AACrD,aAAK,uBAAuB,UAAU,IAAI,SAAS,CAAC;AACpD,aAAK,uBAAuB,UAAU,IAAI,SAAS,CAAC;AACpD,aAAK,uBAAuB,UAAU,IAAI,SAAS,CAAC;AACpD,aAAK,uBAAuB,UAAU,IAAI,SAAS,CAAC;AACpD,aAAK,uBAAuB,UAAU,IAAI,OAAO,UAAU;AAAA,MAC7D;AAGA,UAAI;AACJ,eAAS,IAAI,GAAG,IAAI,KAAK,iBAAiB,QAAQ,KAAK;AACrD,gBAAQ,KAAK,iBAAiB,CAAC,EAAE;AAAA,UAC/B,aAAa;AAAA,UACb,aAAa;AAAA,QACf;AACA,aAAK,oBAAoB,aAAa,IAAI;AAC1C,YAAI,KAAK,sBAAsB;AAC7B,eAAK,uBAAuB,UAAU,IAAI;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AAGA,UAAM,UAAU;AAAA,MACd,IAAI;AAAA,MACJ,MAAM,uBAAuB;AAAA,MAC7B,oBAAoB,KAAK,oBAAoB;AAAA,MAC7C,uBAAuB,KAAK,iBAAiB;AAAA,IAC/C;AAEA,YAAQ,qBAAqB,IAAI;AACjC,YAAQ,oBAAoB,IAAI,EAAE,KAAK;AACvC,SAAK,QAAQ;AACb,SAAK,QAAQ,YAAY,SAAS,CAAC,KAAK,oBAAoB,MAAM,CAAC;AACnE,SAAK,sBAAsB;AAG3B,QAAI,KAAK,sBAAsB;AAC7B,YAAM,aAAa;AAAA,QACjB,IAAI;AAAA,QACJ,MAAM,uBAAuB;AAAA,QAC7B,oBAAoB,KAAK,uBAAuB;AAAA,QAChD,uBAAuB,IAAI,KAAK,iBAAiB;AAAA,MACnD;AACA,iBAAW,qBAAqB,IAAI;AACpC,iBAAW,cAAc,IAAI;AAC7B,WAAK,QAAQ,YAAY,YAAY;AAAA,QACnC,KAAK,uBAAuB;AAAA,MAC9B,CAAC;AACD,WAAK,yBAAyB;AAAA,IAChC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,2BACE,YACA,YACA,cACA,UACA,SACA;AACA,WAAO,KAAK,sBAAsB,EAAE;AACpC,QAAI,CAAC,KAAK,wBAAwB;AAChC,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA,MACZ,WAAW;AAAA,MACX,WAAW,MAAM;AAAA,IACnB;AAEA,UAAM,OAAO,KAAK,iBAAiB,UAAU,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACvE,UAAMC,SAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG;AACzE,UAAM,QAAQ,cAAcA,MAAK;AACjC,UAAM,UAAU,KAAK,uBAAuB,KAAK;AACjD,UAAM,MAAM,KAAK,MAAM,OAAO,EAAE,SAAS;AAEzC,UAAM,SAAS,KAAK,SAAS,EAAE,UAAU;AACzC,UAAM,UAAU,OAAO,gBAAgB,GAAG;AAC1C,QAAI,SAAS;AACX,aAAO,SAAS,SAAS,KAAK,SAAS,GAAG,IAAI;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,mBAAmB,YAAY,YAAY,UAAU,YAAY;AAE/D,QAAI,CAAC,KAAK,mBAAmB,QAAQ,GAAG;AACtC;AAAA,IACF;AAEA,QAAI,QAAQ;AAEZ,SAAK,iBAAiB,QAAQ;AAAA,MAC5B,KAAK,MAAM,WAAW,KAAK,CAAC,IAAI,CAAC;AAAA,MACjC,KAAK,MAAM,WAAW,KAAK,CAAC,IAAI,CAAC;AAAA,IACnC,CAAC;AAED,SAAK,OAAO,WAAW,KAAK,aAAa,UAAU;AACnD,SAAK,OAAO;AAAA,MACV;AAAA,MACA,KAAK;AAAA,MACL;AAAA,IACF;AAEA,SAAK,OAAO,WAAW,KAAK,kBAAkB;AAC9C,SAAK,OAAO,WAAW,KAAK,cAAc;AAC1C,SAAK,OAAO,iBAAiB,KAAK,sBAAsB;AAExD,OAAG;AACD,WAAK,OAAO,wBAAwB,YAAY,KAAK,iBAAiB;AACtE,gBAAmB,KAAK,mBAAmB,QAAQ,YAAY,CAAC;AAChE,eAAkB,KAAK,mBAAmB,KAAK,sBAAsB;AACrE,WAAK,OAAO,cAAc,UAAU;AAEpC,YAAM,cAAc,KAAK,eAAe,QAAQ;AAChD,WAAK,OAAO,aAAa,GAAG,WAAW;AAAA,IACzC,SAAS,EAAE,QAAQ;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,SAAK,QAAQ,UAAU;AACvB,SAAK,SAAS;AACd,SAAK,kBAAkB,QAAQ,SAAU,KAAK;AAC5C,oBAAc,GAAG;AAAA,IACnB,CAAC;AACD,SAAK,oBAAoB;AACzB,UAAM,gBAAgB;AAAA,EACxB;AACF;AAEA,IAAO,sBAAQ;;;ACntBf,IAAM,WAAW;AAAA,EACf,MAAM;AAAA,EACN,UAAU;AAAA,EACV,QAAQ;AACV;AAMA,IAAM,mBAAmB,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,MAAM;AAahE,IAAM,UAAN,cAAsB,mBAAW;AAAA;AAAA;AAAA;AAAA,EAI/B,YAAY,SAAS;AACnB,cAAU,UAAU,UAAU,CAAC;AAE/B,UAAM,cAAc,OAAO,OAAO,CAAC,GAAG,OAAO;AAE7C,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,UAAM,WAAW;AAMjB,SAAK,YAAY;AAEjB,SAAK,kBAAkB,SAAS,UAAU,KAAK,sBAAsB;AAErE,SAAK,YAAY,QAAQ,WAAW,QAAQ,WAAW,gBAAgB;AAEvE,SAAK,QAAQ,QAAQ,SAAS,SAAY,QAAQ,OAAO,EAAE;AAE3D,SAAK,UAAU,QAAQ,WAAW,SAAY,QAAQ,SAAS,CAAC;AAEhE,UAAM,SAAS,QAAQ,SAAS,QAAQ,SAAS;AACjD,QAAI,OAAO,WAAW,UAAU;AAC9B,WAAK,kBAAkB,SAAU,SAAS;AACxC,eAAO,QAAQ,IAAI,MAAM;AAAA,MAC3B;AAAA,IACF,OAAO;AACL,WAAK,kBAAkB;AAAA,IACzB;AAIA,SAAK,eAAe,IAAI;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,UAAU;AACR;AAAA;AAAA,MAA8B,KAAK,IAAI,SAAS,IAAI;AAAA;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,cAAc;AACZ;AAAA;AAAA,MAAqC,KAAK,IAAI,SAAS,QAAQ;AAAA;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY;AACV;AAAA;AAAA,MAA8B,KAAK,IAAI,SAAS,MAAM;AAAA;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA,EAKA,yBAAyB;AACvB,SAAK,YAAY,eAAe,KAAK,YAAY,CAAC;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,QAAQ,MAAM;AACZ,SAAK,IAAI,SAAS,MAAM,IAAI;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,QAAQ;AAClB,SAAK,IAAI,SAAS,UAAU,MAAM;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,UAAU,QAAQ;AAChB,SAAK,IAAI,SAAS,QAAQ,MAAM;AAAA,EAClC;AAAA,EAEA,iBAAiB;AACf,WAAO,IAAI,oBAAyB,MAAM;AAAA,MACxC,WAAW,KAAK,aAAa;AAAA,MAC7B,YAAY;AAAA,QACV;AAAA,UACE,MAAM;AAAA,UACN,UAAU,CAAC,YAAY;AACrB,kBAAM,SAAS,KAAK,gBAAgB,OAAO;AAC3C,mBAAO,WAAW,SAAY,MAAM,QAAQ,GAAG,CAAC,IAAI;AAAA,UACtD;AAAA,QACF;AAAA,MACF;AAAA,MACA,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAuBd,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAchB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0BjB,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBnB,UAAU;AAAA,QACR,QAAQ,MAAM;AACZ,kBAAQ,KAAK,IAAI,SAAS,MAAM,IAAI,KAAK,IAAI,SAAS,IAAI,KAAK;AAAA,QACjE;AAAA,QACA,aAAa,MAAM;AACjB,iBACE,KAAK,IAAI,SAAS,MAAM,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI,SAAS,IAAI,CAAC;AAAA,QAEnE;AAAA,MACF;AAAA,MACA,eAAe;AAAA,QACb;AAAA,UACE,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAehB,UAAU;AAAA,YACR,mBAAmB,MAAM;AACvB,qBAAO,KAAK;AAAA,YACd;AAAA,YACA,WAAW,MAAM;AACf,qBAAO,KAAK,WAAW;AAAA,YACzB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,kBAAkB;AAAA,EAAC;AACrB;AAMA,SAAS,eAAe,QAAQ;AAC9B,QAAM,QAAQ;AACd,QAAM,SAAS;AACf,QAAM,UAAU,sBAAsB,OAAO,MAAM;AAEnD,QAAM,WAAW,QAAQ,qBAAqB,GAAG,GAAG,OAAO,MAAM;AACjE,QAAM,OAAO,KAAK,OAAO,SAAS;AAClC,WAAS,IAAI,GAAG,KAAK,OAAO,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC/C,aAAS,aAAa,IAAI,MAAM,OAAO,CAAC,CAAC;AAAA,EAC3C;AAEA,UAAQ,YAAY;AACpB,UAAQ,SAAS,GAAG,GAAG,OAAO,MAAM;AAEpC,SAAO,QAAQ;AACjB;AAEA,IAAO,kBAAQ;;;ACnSf,IAAM,gBAAgB;AAAA,EACpB,SAAS,CAAC,WAAW,UAAU,cAAc,SAAS,MAAM;AAAA,EAC5D,UAAU,CAAC,WAAW,YAAY;AAAA,EAClC,UAAU,CAAC;AACb;AAKA,IAAM,iBAAiB;AAAA,EACrB,UAAU,CAAC,SAAS,QAAQ,SAAS;AAAA,EACrC,UAAU,CAAC,WAAW,UAAU,cAAc,SAAS,QAAQ,SAAS;AAC1E;AAQA,IAAM,gCAAN,cAA4C,kBAAwB;AAAA;AAAA;AAAA;AAAA,EAIlE,YAAY,OAAO;AACjB,UAAM,KAAK;AAGX,SAAK,+BAA+B,KAAK,wBAAwB,KAAK,IAAI;AAM1E,SAAK;AAML,SAAK,sCAAsC;AAM3C,SAAK;AAML,SAAK,gBAAgB,OAAgB;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,MAAM,YAAY,YAAY;AACxC,QAAI;AACJ,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,UAAU,kBAAU,UAAU,UAAU,kBAAU,OAAO;AAC3D,WAAK,qBAAqB,MAAM,YAAY,UAAU;AACtD,UAAI,KAAK,sBAAsB,IAAI,GAAG;AACpC,iBAAS;AAAA,MACX;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ,GAAG,GAAG,GAAG,YAAY;AAC3B,UAAM,aAAa,WAAW;AAC9B,UAAM,YAAY,WAAW;AAC7B,UAAM,aAAa,UAAU;AAC7B,UAAM,aAAa,UAAU;AAC7B,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,OAAO,MAAM,UAAU,EAAE,QAAQ,GAAG,GAAG,GAAG,YAAY,UAAU;AACtE,UAAM,YAAY,WAAW;AAC7B,UAAM,OAAO,EACX,UAAU,iBAAS,SAAS,KAAK,UAAU,iBAAS,WAAW;AAEjE,QAAI,QAAQ,CAAC,KAAK,kBAAkB;AAClC,WAAK,mBAAmB;AAAA,IAC1B;AACA,UAAM,SAAS,KAAK,YAAY,MAAM,YAAY,UAAU;AAC5D,QACE,WACC,QAAQ,KAAK,IAAI,IAAI,WAAW,OAAO,MACxC,MAAM,cAAc,MAAM,UAC1B;AACA,WAAK,iBAAiB,MAAM,UAAU;AAAA,IACxC;AACA,WAAO,MAAM,QAAQ,GAAG,GAAG,GAAG,UAAU;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,MAAM;AACnB,UAAM,QAAQ,KAAK,SAAS;AAC5B,WACE,MAAM,eAAe,IAAI,MACxB,MAAM,cAAc,MAAM,WACvB,OAAO,KAAK,KAAK,KAAK,iBACtB,KAAK,WAAW,KAAK;AAAA,EAE7B;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,MAAM;AACjB,WAAO,KAAK,SAAS,KAAK,SAAS,CAAC;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,YAAY;AACvB,UAAM,gBAAgB,KAAK,SAAS,EAAE,YAAY;AAClD,QAAI,KAAK,2BAA2B,eAAe;AACjD,WAAK,yBAAyB;AAC9B,WAAK,cAAc,SAAS;AAAA,IAC9B;AACA,WAAO,MAAM,aAAa,UAAU;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,qBAAqB,MAAM,YAAY,YAAY;AACjD,UAAM;AAAA;AAAA,MACJ,KAAK,SAAS;AAAA;AAEhB,UAAM,WAAW,MAAM,YAAY;AACnC,UAAM,cAAc,MAAM,eAAe,KAAK;AAE9C,UAAM,aAAa,KAAK;AACxB,UAAM,eAAe,KAAK,eAAe,KAAK;AAC9C,QACE,CAAC,aAAa,SACd,aAAa,uBAAuB,cACpC,aAAa,oBAAoB,YACjC,aAAa,uBAAuB,aACpC;AACA;AAAA,IACF;AAEA,UAAM,SAAS,MAAM,UAAU;AAC/B,UAAM,YAAY,MAAM,aAAa;AACrC,UAAM,iBAAiB,OAAO,YAAY;AAC1C,UAAM,WAAW,OAAO,yBAAyB,UAAU;AAC3D,UAAM,aAAa,SAAS,mBAAmB,KAAK,gBAAgB;AAEpE,UAAM,cAAc,OAAO,eAAe,YAAY,YAAY,IAAI;AACtE,UAAM,WAAW,OAAO,KAAK;AAC7B,WAAO,KAAK,sBAAsB,QAAQ;AAC1C,SAAK,eAAe,QAAQ,IAAI,CAAC;AACjC,QAAI,WAAW;AACb,WAAK,wBAAwB,QAAQ,IAAI,CAAC;AAAA,IAC5C;AACA,iBAAa,QAAQ;AACrB,aAAS,IAAI,GAAG,KAAK,YAAY,QAAQ,IAAI,IAAI,EAAE,GAAG;AACpD,YAAM,aAAa,YAAY,CAAC;AAChC,UAAI,WAAW,SAAS,KAAK,kBAAU,QAAQ;AAC7C;AAAA,MACF;AACA,YAAM,kBAAkB,WAAW;AACnC,YAAM,mBACJ,eAAe,mBAAmB,eAAe;AACnD,YAAM,eAAe,gBAAgB,YAAY,gBAAgB;AACjE,YAAM,gBAAgB;AAAA,QACpB;AAAA,QACA,MAAM,gBAAgB,IAAI;AAAA,QAC1B,KAAK;AAAA,MACP;AACA,YAAM,iBAAiBC,QAAO,kBAAkB,YAAY,IACxD,OACA;AACJ,YAAM,eAAe,IAAI;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,wBAAwB,YAC1B,IAAI,qBAAmB,GAAG,cAAc,YAAY,UAAU,IAC9D;AACJ,YAAM,mBAAmB;AAAA,QACvB;AAAA,QACA;AAAA,MACF;AAMA,YAAM,SAAS,SAAU,SAAS;AAChC,YAAI;AACJ,cAAM,gBACJ,QAAQ,iBAAiB,KAAK,MAAM,iBAAiB;AACvD,YAAI,eAAe;AACjB,mBAAS,cAAc,SAAS,UAAU;AAAA,QAC5C;AACA,YAAI,QAAQ;AACV,gBAAM,QAAQ,KAAK;AAAA,YACjB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AACA,uBAAa,QAAQ,aAAa,SAAS;AAAA,QAC7C;AAAA,MACF;AAEA,YAAM,WAAW,WAAW,YAAY;AACxC,UAAI,eAAe,gBAAgB,aAAa,qBAAqB;AACnE,iBAAS,KAAK,WAAW;AAAA,MAC3B;AACA,eAAS,IAAI,GAAG,KAAK,SAAS,QAAQ,IAAI,IAAI,EAAE,GAAG;AACjD,cAAM,UAAU,SAAS,CAAC;AAC1B,YACE,CAAC,kBACD,WAAW,gBAAgB,QAAQ,YAAY,EAAE,UAAU,CAAC,GAC5D;AACA,iBAAO,KAAK,MAAM,OAAO;AAAA,QAC3B;AAAA,MACF;AACA,YAAM,4BAA4B,aAAa,OAAO;AAEtD,YAAM,eACJ,MAAM,cAAc,MAAM,YAC1B,aACA,YAAY,WAAW,IACnB,OACA;AACN,YAAM,uBAAuB,IAAI;AAAA,QAC/B;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO,YAAY;AAAA,QACnB;AAAA,QACA,MAAM,gBAAgB;AAAA,MACxB;AACA,WAAK,eAAe,QAAQ,EAAE,KAAK,oBAAoB;AACvD,UAAI,uBAAuB;AACzB,cAAM,yBAAyB,IAAI;AAAA,UACjC;AAAA,UACA;AAAA,UACA;AAAA,UACA,OAAO,YAAY;AAAA,UACnB,sBAAsB,OAAO;AAAA,UAC7B,MAAM,gBAAgB;AAAA,QACxB;AACA,aAAK,wBAAwB,QAAQ,EAAE,KAAK,sBAAsB;AAAA,MACpE;AAAA,IACF;AACA,iBAAa,mBAAmB;AAChC,iBAAa,sBAAsB;AACnC,iBAAa,qBAAqB;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,2BACE,YACA,YACA,cACA,UACA,SACA;AACA,UAAM,aAAa,WAAW,UAAU;AACxC,UAAM,WAAW,WAAW,UAAU;AACtC,mBAAe,gBAAgB,SAAY,IAAI;AAC/C,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,SAAS,MAAM,UAAU;AAC/B,UAAM,WAAW,OAAO;AAAA,MACtB,WAAW,UAAU;AAAA,IACvB;AAEA,UAAM,YAAY,eAAe,CAAC,UAAU,CAAC;AAC7C,WAAO,WAAW,aAAa,cAAc,SAAS;AAGtD,UAAM,WAAW,CAAC;AAQlB,UAAM,kBAAkB,SAAU,SAASC,WAAU,YAAY;AAC/D,UAAI,MAAM,QAAQ,MAAM;AACxB,UAAI,QAAQ,QAAW;AACrB,cAAM,OAAO,OAAO;AAAA,MACtB;AACA,YAAM,QAAQ,SAAS,GAAG;AAC1B,UAAI,CAAC,OAAO;AACV,YAAI,eAAe,GAAG;AACpB,mBAAS,GAAG,IAAI;AAChB,iBAAO,SAAS,SAAS,OAAOA,SAAQ;AAAA,QAC1C;AACA,gBAAQ;AAAA,UACL,SAAS,GAAG,IAAI;AAAA,YACf;AAAA,YACA;AAAA,YACA,UAAUA;AAAA,YACV;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF,WAAW,UAAU,QAAQ,aAAa,MAAM,YAAY;AAC1D,YAAI,eAAe,GAAG;AACpB,mBAAS,GAAG,IAAI;AAChB,kBAAQ,OAAO,QAAQ,YAAY,KAAK,GAAG,CAAC;AAC5C,iBAAO,SAAS,SAAS,OAAOA,SAAQ;AAAA,QAC1C;AACA,cAAM,WAAWA;AACjB,cAAM,aAAa;AAAA,MACrB;AACA,aAAO;AAAA,IACT;AAEA,UAAM;AAAA;AAAA,MAEF,KAAK;AAAA;AAGT,QAAI;AACJ,aAAS,IAAI,GAAG,KAAK,cAAc,QAAQ,CAAC,SAAS,IAAI,IAAI,EAAE,GAAG;AAChE,YAAM,OAAO,cAAc,CAAC;AAC5B,YAAM,aAAa,SAAS,mBAAmB,KAAK,gBAAgB;AACpE,UAAI,CAAC,WAAW,YAAY,SAAS,GAAG;AACtC;AAAA,MACF;AAEA,YAAM,WAAW,OAAO,KAAK;AAC7B,YAAM,iBAAiB,CAAC,KAAK,eAAe,QAAQ,CAAC;AACrD,YAAM,0BAA0B,KAAK,wBAAwB,QAAQ;AACrE,UAAI,yBAAyB;AAC3B,uBAAe,KAAK,uBAAuB;AAAA,MAC7C;AACA,qBAAe,KAAK,CAACC,oBAAmB;AACtC,cAAM,sBACJA,oBAAmB,0BACf,WAAW,cAAc,IAAI,EAAE,IAAI,CAAC,SAAS,KAAK,KAAK,IACvD;AACN,iBAAS,IAAI,GAAG,KAAKA,gBAAe,QAAQ,IAAI,IAAI,EAAE,GAAG;AACvD,gBAAM,gBAAgBA,gBAAe,CAAC;AACtC,kBAAQ,cAAc;AAAA,YACpB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AACA,cAAI,OAAO;AACT,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,OAAO;AACjB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAM,QAAQ,KAAK,SAAS;AAC5B,YAAM,WAAW,OAAO,KAAK;AAC7B,YAAM,SAAS,MAAM,UAAU;AAC/B,YAAM,aAAa,KAAK;AACxB,YAAM,mBAAmB,WAAW,UAAU;AAC9C,YAAM,aAAa,KAAK;AACxB,YAAM,WAAW,OAAO,yBAAyB,UAAU;AAC3D,YAAM,aAAa;AAAA,QACjB,KAAK;AAAA,QACL,MAAM,MAAM;AAAA,MACd;AACA,YAAM,YAAY,SAAS;AAAA,QACzB;AAAA,QACA;AAAA,MACF;AAEA,UAAI;AACJ,eAAS,IAAI,GAAG,KAAK,KAAK,cAAc,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC3D,YACE,UAAU,SAAS,MAAM,KAAK,cAAc,CAAC,EAAE,UAAU,SAAS,GAClE;AACA;AAAA,UACE,KAAK,cAAc,CAAC;AAEtB,cAAI,KAAK,SAAS,MAAM,kBAAU,QAAQ;AACxC,kBAAMC,UAAS,SAAS,mBAAmB,KAAK,SAAS;AACzD,gBACE,OAAO,SAAS,KAChB,WAAW,SAAS,KACpB,CAAC,eAAe,kBAAkBA,OAAM,GACxC;AACA,oBAAM,YAAY,UAAU;AAAA,YAC9B;AACA;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AACA,UAAI,CAAC,QAAQ,KAAK,qBAAqB,GAAG;AACxC,gBAAQ,CAAC,CAAC;AACV;AAAA,MACF;AACA,YAAM,SAAS,SAAS,mBAAmB,KAAK,gBAAgB;AAChE,YAAM,SAAS,WAAW,MAAM;AAChC,YAAM,YAAY;AAAA,SACf,WAAW,CAAC,IAAI,OAAO,CAAC,KAAK;AAAA,SAC7B,OAAO,CAAC,IAAI,WAAW,CAAC,KAAK;AAAA,MAChC;AAEA,YAAM,WAAW,KACd,eAAe,EACf,OAAO,SAAU,aAAa,YAAY;AACzC,eAAO,YAAY,OAAO,WAAW,YAAY,CAAC;AAAA,MACpD,GAAG,CAAC,CAAC;AAEP,UAAI,wBAAwB,KAAK,sBAAsB,QAAQ;AAC/D,UAAI,CAAC,uBAAuB;AAC1B,cAAM,WAAW;AAAA,UACf,SAAS;AAAA,YACP,SAAS,kBAAkB,YAAY,OAAO,UAAU;AAAA,UAC1D;AAAA,QACF;AACA,cAAM,WAAW,KAAK;AACtB,cAAM,aAAa;AAAA,UACjB,KAAK;AAAA,YACH,SAAS,mBAAmB,KAAK,gBAAgB;AAAA,YACjD;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS,CAAC,IAAI;AAAA,YACd,SAAS,CAAC,IAAI;AAAA,YACd;AAAA,UACF;AAAA,QACF;AACA,gCAAwB;AAAA,UACtB;AAAA,UACA;AAAA,UACA;AAAA,UACA,MAAM,iBAAiB;AAAA,UACvB,SAAS,mBAAmB,KAAK,gBAAgB;AAAA,UACjD,KAAK,eAAe,KAAK,EAAE;AAAA,UAC3B;AAAA,QACF;AACA,aAAK,sBAAsB,QAAQ,IAAI;AAAA,MACzC;AACA,cAAQ,UAAU,WAAW,UAAU,qBAAqB,CAAC;AAAA,IAC/D,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB;AACnB,UAAM,QAAQ,KAAK,SAAS;AAC5B,QAAI,MAAM,WAAW,KAAK,KAAK,2BAA2B,QAAW;AACnE,YAAM,QAAQ;AAAA,IAChB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,wBAAwB,OAAO;AAC7B,SAAK,wBAAwB;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB,YAAY;AAC1B,UAAM,UAAU,KAAK;AACrB,UAAM,QAAQ,QAAQ;AACtB,YAAQ,cAAc,KAAK,SAAS,EAAE,WAAW;AACjD,UAAM,YAAY,WAAW;AAC7B,UAAM,OAAO,EACX,UAAU,iBAAS,SAAS,KAAK,UAAU,iBAAS,WAAW;AAEjE,UAAM;AAAA;AAAA,MAEF,KAAK;AAAA;AAET,aAAS,IAAI,GAAG,KAAK,MAAM,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC9C,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,0BACJ,KAAK,wBAAwB,OAAO,KAAK,SAAS,CAAC,CAAC;AACtD,UAAI,yBAAyB;AAC3B,iBAAS,IAAI,wBAAwB,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC5D,kCAAwB,CAAC,EAAE;AAAA,YACzB,KAAK;AAAA,YACL;AAAA,YACA,KAAK,uBAAuB,MAAM,UAAU;AAAA,YAC5C,WAAW,UAAU;AAAA,YACrB;AAAA,YACA;AAAA,YACA,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,YAAQ,cAAc;AAAA,EACxB;AAAA,EAEA,uBAAuB,MAAM,YAAY;AACvC,UAAM,aAAa,WAAW;AAC9B,UAAM,YAAY,WAAW;AAC7B,UAAM,SAAS,UAAU;AACzB,UAAM,aAAa,UAAU;AAC7B,UAAM,WAAW,UAAU;AAC3B,UAAM,OAAO,WAAW;AACxB,UAAM,QAAQ,KAAK,MAAM,KAAK,CAAC,IAAI,UAAU;AAC7C,UAAM,SAAS,KAAK,MAAM,KAAK,CAAC,IAAI,UAAU;AAE9C,UAAM,SAAS,KAAK,SAAS,EAAE,UAAU;AACzC,UAAM,WAAW,OAAO;AAAA,MACtB,WAAW,UAAU;AAAA,IACvB;AACA,UAAM,YAAY,KAAK;AACvB,UAAM,aAAa,SAAS,mBAAmB,KAAK,gBAAgB;AACpE,UAAM,cACJ,SAAS,mBAAmB,WAAW,KAAK,SAAS,EAAE,CAAC,IAAI,WAAW,CAAC;AAC1E,UAAM,YAAY;AAAA,MAChB,MAAM,KAAK,sBAAsB,MAAM,GAAG,IAAI,YAAY,IAAI,UAAU;AAAA,MACxE,KAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,WAAW,SAAS,YAAY;AAC9B,UAAM,YAAY,WAAW;AAC7B,UAAM,OAAO,EACX,UAAU,iBAAS,SAAS,KAAK,UAAU,iBAAS,WAAW;AAGjE,SAAK,sCACH,WAAW,2BAA2B,MAAM;AAC9C,SAAK,oBAAoB,WAAW,UAAU;AAE9C,UAAM;AAAA;AAAA,MACJ,KAAK,SAAS;AAAA;AAEhB,UAAM,aAAa,MAAM,cAAc;AACvC,UAAM,QAAQ,QAAQ;AACtB,YAAQ,cAAc,MAAM,WAAW;AACvC,UAAM,cAAc,eAAe,UAAU;AAC7C,UAAM,YAAY,WAAW;AAC7B,UAAM,WAAW,UAAU;AAC3B,UAAM,aAAa,MAAM,UAAU;AACnC,UAAM,WAAW,WAAW,yBAAyB,UAAU,UAAU;AACzE,UAAM,IAAI,SAAS;AAAA,MACjB,UAAU;AAAA,MACV,WAAW;AAAA,IACb;AAEA,UAAM,QAAQ,KAAK;AACnB,UAAM,QAAQ,CAAC;AACf,UAAM,SAAS,CAAC;AAChB,QAAI,QAAQ;AACZ,aAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC1C,YAAM;AAAA;AAAA,QACJ,MAAM,CAAC;AAAA;AAET,cAAQ,SAAS,CAAC,KAAK,eAAe,KAAK,EAAE;AAC7C,YAAM,iBAAiB,KAAK,eAAe,OAAO,KAAK,CAAC,EAAE;AAAA,QACxD,CAAC,UAAU,MAAM,aAAa,WAAW;AAAA,MAC3C;AACA,UAAI,eAAe,WAAW,GAAG;AAC/B;AAAA,MACF;AACA,YAAM,YAAY,KAAK,uBAAuB,MAAM,UAAU;AAC9D,YAAM,WAAW,KAAK,UAAU,CAAC;AACjC,UAAI,eAAe;AAEnB,YAAM,cAAc,eAAe,CAAC,EAAE,cAAc,SAAS;AAC7D,UAAI,aAAa;AACf,iBAAS,IAAI,GAAG,KAAK,MAAM,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC9C,cAAI,MAAM,YAAY,WAAW,OAAO,CAAC,GAAG;AAC1C,kBAAM,OAAO,MAAM,CAAC;AACpB,gBACE;AAAA,cACE;AAAA,gBACE,YAAY,CAAC;AAAA,gBACb,YAAY,CAAC;AAAA,gBACb,YAAY,CAAC;AAAA,gBACb,YAAY,CAAC;AAAA,cACf;AAAA,cACA,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,YACrC,GACA;AACA,kBAAI,CAAC,cAAc;AACjB,wBAAQ,KAAK;AACb,+BAAe;AAAA,cACjB;AACA,sBAAQ,UAAU;AAElB,sBAAQ,OAAO,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC;AAC7C,sBAAQ,OAAO,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC;AAC7C,sBAAQ,OAAO,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC;AAC7C,sBAAQ,OAAO,YAAY,CAAC,GAAG,YAAY,CAAC,CAAC;AAE7C,sBAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAC/B,sBAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAC/B,sBAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAC/B,sBAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAC/B,sBAAQ,KAAK;AAAA,YACf;AAAA,UACF;AAAA,QACF;AACA,cAAM,KAAK,WAAW;AACtB,eAAO,KAAK,QAAQ;AAAA,MACtB;AACA,eAAS,IAAI,GAAG,KAAK,eAAe,QAAQ,IAAI,IAAI,EAAE,GAAG;AACvD,cAAM,gBAAgB,eAAe,CAAC;AACtC,sBAAc;AAAA,UACZ;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AACA,UAAI,cAAc;AAChB,gBAAQ,QAAQ;AAAA,MAClB;AAAA,IACF;AACA,YAAQ,cAAc;AACtB,SAAK,QAAQ;AAEb,UAAM,WAAW,SAAS,UAAU;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,cACE,SACA,kBACA,QACA,cACA,uBACA;AACA,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AACA,QAAI,UAAU;AACd,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,eAAS,IAAI,GAAG,KAAK,OAAO,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC/C,kBACE;AAAA,UACE;AAAA,UACA;AAAA,UACA,OAAO,CAAC;AAAA,UACR;AAAA,UACA,KAAK;AAAA,UACL;AAAA,UACA;AAAA,QACF,KAAK;AAAA,MACT;AAAA,IACF,OAAO;AACL,gBAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,sBAAsB,MAAM;AAC1B,UAAM;AAAA;AAAA,MACJ,KAAK,SAAS;AAAA;AAEhB,QAAI,MAAM,cAAc,MAAM,UAAU;AACtC,aAAO;AAAA,IACT;AACA,UAAM,cAAc,KAAK,eAAe,KAAK;AAC7C,UAAM,WAAW,MAAM,YAAY;AACnC,UAAM,aAAa,KAAK;AACxB,WACE,YAAY,2BAA2B,cACvC,YAAY,yBAAyB;AAAA,EAEzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,iBAAiB,MAAM,YAAY;AACjC,UAAM;AAAA;AAAA,MACJ,KAAK,SAAS;AAAA;AAEhB,UAAM,cAAc,KAAK,eAAe,KAAK;AAC7C,UAAM,WAAW,MAAM,YAAY;AACnC,UAAM,iBAAiB,KAAK,eAAe,OAAO,KAAK,CAAC;AACxD,gBAAY,uBAAuB;AAEnC,UAAM,YAAY,KAAK;AACvB,UAAM,IAAI,UAAU,CAAC;AACrB,UAAM,SAAS,MAAM,UAAU;AAC/B,QAAI,aAAa,WAAW;AAC5B,UAAM,YAAY,WAAW;AAC7B,UAAM,aAAa,UAAU;AAC7B,UAAM,WAAW,OAAO,yBAAyB,UAAU;AAC3D,UAAM,iBAAiB,SAAS,cAAc,KAAK,UAAU,CAAC,CAAC;AAC/D,UAAM,mBACH,WAAW,aAAa,KAAK,mBAAoB;AACpD,UAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,UAAM,UAAU,KAAK,WAAW,KAAK;AAGrC,iBAAa,KAAK;AAAA,MAChB,KAAK,IAAI,YAAY,mBAAmB,UAAU;AAAA,IACpD;AACA,UAAM,OAAO,OAAO,iBAAiB,GAAG,YAAY,UAAU;AAC9D,YAAQ,OAAO,QAAQ,KAAK,CAAC;AAC7B,YAAQ,OAAO,SAAS,KAAK,CAAC;AAC9B,UAAM,cAAc,aAAa;AACjC,QAAI,gBAAgB,GAAG;AACrB,YAAM,kBAAkB,MAAe,KAAK,aAAa;AACzD,YAAe,iBAAiB,aAAa,WAAW;AACxD,cAAQ,aAAa,MAAM,SAAS,eAAe;AAAA,IACrD;AACA,UAAM,aAAa,SAAS,mBAAmB,WAAW,KAAK,SAAS;AACxE,UAAM,aAAa,mBAAmB;AACtC,UAAM,YAAY,MAAe,KAAK,aAAa;AACnD,UAAe,WAAW,YAAY,CAAC,UAAU;AACjD,cAAmB,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC5D,aAAS,IAAI,GAAG,KAAK,eAAe,QAAQ,IAAI,IAAI,EAAE,GAAG;AACvD,YAAM,gBAAgB,eAAe,CAAC;AACtC,oBAAc;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAc,MAAM,cAAc,CAAC;AAAA,MACrC;AAAA,IACF;AACA,gBAAY,yBAAyB,KAAK;AAAA,EAC5C;AACF;AAEA,IAAO,0BAAQ;;;ACnvBf,IAAM,kBAAN,cAA8B,mBAAgB;AAAA;AAAA;AAAA;AAAA,EAI5C,YAAY,SAAS;AACnB,cAAU,UAAU,UAAU,CAAC;AAE/B,UAAM;AAAA;AAAA,MAAqC,OAAO,OAAO,CAAC,GAAG,OAAO;AAAA;AACpE,WAAO,YAAY;AACnB,WAAO,YAAY;AAEnB;AAAA;AAAA,MAEI;AAAA,IAEJ;AAKA,SAAK;AAKL,SAAK;AAKL,SAAK;AAEL,UAAM,aAAa,QAAQ,cAAc;AAEzC,WAAO,cAAc,YAAY,cAAc,UAAU,EAAE;AAM3D,SAAK,cAAc;AAEnB,SAAK,WAAW,QAAQ,UAAU,QAAQ,UAAU,CAAC;AACrD,SAAK;AAAA,MACH,QAAQ,2BAA2B,SAC/B,QAAQ,yBACR;AAAA,IACN;AAOA,SAAK;AAOL,SAAK;AAAA,EACP;AAAA,EAEA,iBAAiB;AACf,WAAO,IAAI,wBAA8B,IAAI;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,YAAY,OAAO;AACjB,WAAO,MAAM,YAAY,KAAK;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB;AACd,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa;AACX;AAAA;AAAA,MAA8B,KAAK,IAAI,qBAAa,OAAO;AAAA;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,4BAA4B;AAC1B;AAAA;AAAA,MACE,KAAK,IAAI,qBAAa,0BAA0B;AAAA;AAAA,EAEpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,SAAS;AAClB,SAAK,IAAI,qBAAa,SAAS,OAAO;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,0BAA0B,wBAAwB;AAChD,SAAK,IAAI,qBAAa,4BAA4B,sBAAsB;AAAA,EAC1E;AACF;AAEA,IAAOC,sBAAQ;;;;;ACpNf,IAAIC,iBAAiB;EACnB,eAAe;IAAC;IAAE;IAAE;IAAE;EAAP;EAAW,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EACvC,gBAAgB;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,QAAQ;IAAC;IAAE;IAAI;IAAI;EAAX;EACzC,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,SAAS;IAAC;IAAI;IAAI;IAAI;EAAb;EACxC,SAAS;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,UAAU;IAAC;IAAI;IAAI;IAAI;EAAb;EACpC,SAAS;IAAC;IAAE;IAAE;IAAE;EAAP;EAAW,kBAAkB;IAAC;IAAI;IAAI;IAAI;EAAb;EACtC,QAAQ;IAAC;IAAE;IAAE;IAAI;EAAT;EAAa,cAAc;IAAC;IAAI;IAAG;IAAI;EAAZ;EACnC,SAAS;IAAC;IAAI;IAAG;IAAG;EAAX;EAAe,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EACrC,aAAa;IAAC;IAAG;IAAI;IAAI;EAAZ;EAAgB,cAAc;IAAC;IAAI;IAAI;IAAE;EAAX;EAC3C,aAAa;IAAC;IAAI;IAAI;IAAG;EAAZ;EAAgB,SAAS;IAAC;IAAI;IAAI;IAAG;EAAZ;EACtC,kBAAkB;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,YAAY;IAAC;IAAI;IAAI;IAAI;EAAb;EAC/C,WAAW;IAAC;IAAI;IAAG;IAAG;EAAX;EAAe,QAAQ;IAAC;IAAE;IAAI;IAAI;EAAX;EAClC,YAAY;IAAC;IAAE;IAAE;IAAI;EAAT;EAAa,YAAY;IAAC;IAAE;IAAI;IAAI;EAAX;EACrC,iBAAiB;IAAC;IAAI;IAAI;IAAG;EAAZ;EAAgB,YAAY;IAAC;IAAI;IAAI;IAAI;EAAb;EAC7C,aAAa;IAAC;IAAE;IAAI;IAAE;EAAT;EAAa,YAAY;IAAC;IAAI;IAAI;IAAI;EAAb;EACtC,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,eAAe;IAAC;IAAI;IAAE;IAAI;EAAX;EAC7C,kBAAkB;IAAC;IAAG;IAAI;IAAG;EAAX;EAAe,cAAc;IAAC;IAAI;IAAI;IAAE;EAAX;EAC/C,cAAc;IAAC;IAAI;IAAG;IAAI;EAAZ;EAAgB,WAAW;IAAC;IAAI;IAAE;IAAE;EAAT;EACzC,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,gBAAgB;IAAC;IAAI;IAAI;IAAI;EAAb;EAC/C,iBAAiB;IAAC;IAAG;IAAG;IAAI;EAAX;EAAe,iBAAiB;IAAC;IAAG;IAAG;IAAG;EAAV;EACjD,iBAAiB;IAAC;IAAG;IAAG;IAAG;EAAV;EAAc,iBAAiB;IAAC;IAAE;IAAI;IAAI;EAAX;EAChD,cAAc;IAAC;IAAI;IAAE;IAAI;EAAX;EAAe,YAAY;IAAC;IAAI;IAAG;IAAI;EAAZ;EACzC,eAAe;IAAC;IAAE;IAAI;IAAI;EAAX;EAAe,WAAW;IAAC;IAAI;IAAI;IAAI;EAAb;EACzC,WAAW;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAG;IAAI;IAAI;EAAZ;EAC1C,aAAa;IAAC;IAAI;IAAG;IAAG;EAAX;EAAe,eAAe;IAAC;IAAI;IAAI;IAAI;EAAb;EAC3C,eAAe;IAAC;IAAG;IAAI;IAAG;EAAX;EAAe,WAAW;IAAC;IAAI;IAAE;IAAI;EAAX;EACzC,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EAC5C,QAAQ;IAAC;IAAI;IAAI;IAAE;EAAX;EAAe,aAAa;IAAC;IAAI;IAAI;IAAG;EAAZ;EACpC,QAAQ;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,SAAS;IAAC;IAAE;IAAI;IAAE;EAAT;EAClC,eAAe;IAAC;IAAI;IAAI;IAAG;EAAZ;EAAgB,QAAQ;IAAC;IAAI;IAAI;IAAI;EAAb;EACvC,YAAY;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,WAAW;IAAC;IAAI;IAAI;IAAI;EAAb;EACxC,aAAa;IAAC;IAAI;IAAG;IAAG;EAAX;EAAe,UAAU;IAAC;IAAG;IAAE;IAAI;EAAV;EACtC,SAAS;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,SAAS;IAAC;IAAI;IAAI;IAAI;EAAb;EACnC,YAAY;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,iBAAiB;IAAC;IAAI;IAAI;IAAI;EAAb;EAC9C,aAAa;IAAC;IAAI;IAAI;IAAE;EAAX;EAAe,gBAAgB;IAAC;IAAI;IAAI;IAAI;EAAb;EAC5C,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EAC5C,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,wBAAwB;IAAC;IAAI;IAAI;IAAI;EAAb;EACtD,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EAC5C,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAC3C,eAAe;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,iBAAiB;IAAC;IAAG;IAAI;IAAI;EAAZ;EACjD,gBAAgB;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,kBAAkB;IAAC;IAAI;IAAI;IAAI;EAAb;EACnD,kBAAkB;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,kBAAkB;IAAC;IAAI;IAAI;IAAI;EAAb;EACrD,eAAe;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,QAAQ;IAAC;IAAE;IAAI;IAAE;EAAT;EACxC,aAAa;IAAC;IAAG;IAAI;IAAG;EAAX;EAAe,SAAS;IAAC;IAAI;IAAI;IAAI;EAAb;EACrC,WAAW;IAAC;IAAI;IAAE;IAAI;EAAX;EAAe,UAAU;IAAC;IAAI;IAAE;IAAE;EAAT;EACpC,oBAAoB;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAE;IAAE;IAAI;EAAT;EACnD,gBAAgB;IAAC;IAAI;IAAG;IAAI;EAAZ;EAAgB,gBAAgB;IAAC;IAAI;IAAI;IAAI;EAAb;EAChD,kBAAkB;IAAC;IAAG;IAAI;IAAI;EAAZ;EAAgB,mBAAmB;IAAC;IAAI;IAAI;IAAI;EAAb;EACrD,qBAAqB;IAAC;IAAE;IAAI;IAAI;EAAX;EAAe,mBAAmB;IAAC;IAAG;IAAI;IAAI;EAAZ;EACvD,mBAAmB;IAAC;IAAI;IAAG;IAAI;EAAZ;EAAgB,gBAAgB;IAAC;IAAG;IAAG;IAAI;EAAX;EACnD,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAC3C,YAAY;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,eAAe;IAAC;IAAI;IAAI;IAAI;EAAb;EAC5C,QAAQ;IAAC;IAAE;IAAE;IAAI;EAAT;EAAa,WAAW;IAAC;IAAI;IAAI;IAAI;EAAb;EAChC,SAAS;IAAC;IAAI;IAAI;IAAE;EAAX;EAAe,aAAa;IAAC;IAAI;IAAI;IAAG;EAAZ;EACrC,UAAU;IAAC;IAAI;IAAI;IAAE;EAAX;EAAe,aAAa;IAAC;IAAI;IAAG;IAAE;EAAV;EACtC,UAAU;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,iBAAiB;IAAC;IAAI;IAAI;IAAI;EAAb;EAC5C,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,iBAAiB;IAAC;IAAI;IAAI;IAAI;EAAb;EAC/C,iBAAiB;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EAChD,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,QAAQ;IAAC;IAAI;IAAI;IAAG;EAAZ;EACtC,QAAQ;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,QAAQ;IAAC;IAAI;IAAI;IAAI;EAAb;EACjC,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,UAAU;IAAC;IAAI;IAAE;IAAI;EAAX;EACzC,iBAAiB;IAAC;IAAI;IAAG;IAAI;EAAZ;EACjB,OAAO;IAAC;IAAI;IAAE;IAAE;EAAT;EAAa,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EACjC,aAAa;IAAC;IAAG;IAAI;IAAI;EAAZ;EAAgB,eAAe;IAAC;IAAI;IAAG;IAAG;EAAX;EAC5C,UAAU;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAI;IAAI;IAAG;EAAZ;EACzC,YAAY;IAAC;IAAG;IAAI;IAAG;EAAX;EAAe,YAAY;IAAC;IAAI;IAAI;IAAI;EAAb;EACvC,UAAU;IAAC;IAAI;IAAG;IAAG;EAAX;EAAe,UAAU;IAAC;IAAI;IAAI;IAAI;EAAb;EACnC,WAAW;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,aAAa;IAAC;IAAI;IAAG;IAAI;EAAZ;EACzC,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,aAAa;IAAC;IAAI;IAAI;IAAI;EAAb;EAC3C,QAAQ;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,eAAe;IAAC;IAAE;IAAI;IAAI;EAAX;EACxC,aAAa;IAAC;IAAG;IAAI;IAAI;EAAZ;EAAgB,OAAO;IAAC;IAAI;IAAI;IAAI;EAAb;EACpC,QAAQ;IAAC;IAAE;IAAI;IAAI;EAAX;EAAe,WAAW;IAAC;IAAI;IAAI;IAAI;EAAb;EAClC,UAAU;IAAC;IAAI;IAAG;IAAG;EAAX;EAAe,aAAa;IAAC;IAAG;IAAI;IAAI;EAAZ;EACtC,UAAU;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,SAAS;IAAC;IAAI;IAAI;IAAI;EAAb;EACpC,SAAS;IAAC;IAAI;IAAI;IAAI;EAAb;EAAiB,cAAc;IAAC;IAAI;IAAI;IAAI;EAAb;EACxC,UAAU;IAAC;IAAI;IAAI;IAAE;EAAX;EAAe,eAAe;IAAC;IAAI;IAAI;IAAG;EAAZ;AA3ErB;AA6ErB,SAASC,eAAeC,GAAG;AACzBA,MAAIC,KAAKC,MAAMF,CAAX;AACJ,SAAOA,IAAI,IAAI,IAAIA,IAAI,MAAM,MAAMA;AAFV;AAK3B,SAASG,gBAAgBC,GAAG;AAC1B,SAAOA,IAAI,IAAI,IAAIA,IAAI,IAAI,IAAIA;AADL;AAI5B,SAASC,cAAcC,KAAK;AACtBA,MAAAA,IAAIA,IAAIC,SAAS,CAAjB,MAAwB,KAA5B;AACE,WAAOR,eAAeS,WAAWF,GAAX,IAAkB,MAAM,GAAvC;EAFiB;AAG1B,SAAOP,eAAeU,SAASH,GAAT,CAAf;AAHmB;AAM5B,SAASI,gBAAgBJ,KAAK;AACxBA,MAAAA,IAAIA,IAAIC,SAAS,CAAjB,MAAwB,KAC1B;AAAA,WAAOJ,gBAAgBK,WAAWF,GAAX,IAAkB,GAAlC;EAFmB;AAG5B,SAAOH,gBAAgBK,WAAWF,GAAX,CAAhB;AAHqB;AAM9B,SAASK,eAAeC,IAAIC,IAAIC,GAAG;AACjC,MAAIA,IAAI,GAAGA;AAAAA,SAAK;EAAhB,WACSA,IAAI,GAAGA;AAAAA,SAAK;EAFY;AAIjC,MAAIA,IAAI,IAAI,GAAZ;AAAe,WAAOF,MAAMC,KAAKD,MAAME,IAAI;EAJV;AAKjC,MAAIA,IAAI,IAAI,GAAG;AAAA,WAAOD;EALW;AAMjC,MAAIC,IAAI,IAAI,GAAZ;AAAe,WAAOF,MAAMC,KAAKD,OAAO,IAAE,IAAIE,KAAK;EANlB;AAOjC,SAAOF;AAP0B;AAUnC,SAASG,cAAcC,SAAS;AAE9B,MAAIV,MAAMU,QAAQC,QAAQ,MAAM,EAAtB,EAA0BC,YAA1B;AAGNZ,MAAAA,OAAOR,gBAAgB;AAAA,WAAOA,eAAeQ,GAAf,EAAoBa,MAApB;EALJ;AAQ9B,MAAIb,IAAI,CAAJ,MAAW,KAAK;AAClB,QAAIA,IAAIC,WAAW,GAAG;AACpB,UAAIa,KAAKX,SAASH,IAAIe,OAAO,CAAX,GAAe,EAAxB;AACL,UAAA,EAAED,MAAM,KAAKA,MAAM,OAAQ;AAAA,eAAO;MAFlB;AAGb,aAAA;SAAGA,KAAK,SAAU,KAAOA,KAAK,SAAU;QACtCA,KAAK,OAAUA,KAAK,QAAS;QAC7BA,KAAK,MAASA,KAAK,OAAQ;QAC5B;MAHD;IAHa,WAOXd,IAAIC,WAAW,GAAG;AAC3B,UAAIa,KAAKX,SAASH,IAAIe,OAAO,CAAX,GAAe,EAAxB;AACL,UAAA,EAAED,MAAM,KAAKA,MAAM,WAAW;AAAA,eAAO;MAFd;AAGpB,aAAA;SAAEA,KAAK,aAAa;SAClBA,KAAK,UAAW;QACjBA,KAAK;QACL;MAHD;IAHoB;AAS7B,WAAO;EAjBW;AAoBpB,MAAIE,KAAKhB,IAAIiB,QAAQ,GAAZ,GAAkBC,KAAKlB,IAAIiB,QAAQ,GAAZ;AAChC,MAAID,OAAO,MAAME,KAAK,MAAMlB,IAAIC,QAAQ;AACtC,QAAIkB,QAAQnB,IAAIe,OAAO,GAAGC,EAAd;AACZ,QAAII,SAASpB,IAAIe,OAAOC,KAAG,GAAGE,MAAIF,KAAG,EAAxB,EAA4BK,MAAM,GAAlC;AACb,QAAIC,QAAQ;AACZ,YAAQH,OAAR;MACE,KAAK;AACH,YAAIC,OAAOnB,WAAW,GAAG;AAAA,iBAAO;QADlC;AAEEqB,gBAAQlB,gBAAgBgB,OAAOG,IAAP,CAAhB;MAEV,KAAK;AACH,YAAIH,OAAOnB,WAAW,GAAG;AAAA,iBAAO;QADlC;AAEE,eAAO;UAACF,cAAcqB,OAAO,CAAP,CAAd;UACArB,cAAcqB,OAAO,CAAP,CAAd;UACArB,cAAcqB,OAAO,CAAP,CAAd;UACAE;QAHD;MAIT,KAAK;AACH,YAAIF,OAAOnB,WAAW,GAAG;AAAA,iBAAO;QADlC;AAEEqB,gBAAQlB,gBAAgBgB,OAAOG,IAAP,CAAhB;MAEV,KAAK;AACH,YAAIH,OAAOnB,WAAW,GAAG;AAAA,iBAAO;QADlC;AAEE,YAAIO,KAAON,WAAWkB,OAAO,CAAP,CAAX,IAAwB,MAAO,OAAO,MAAO;AAGpDI,YAAAA,IAAIpB,gBAAgBgB,OAAO,CAAP,CAAhB;AACR,YAAIK,IAAIrB,gBAAgBgB,OAAO,CAAP,CAAhB;AACR,YAAIb,KAAKkB,KAAK,MAAMA,KAAKD,IAAI,KAAKC,IAAID,IAAIC,IAAID;AAC9C,YAAIlB,KAAKmB,IAAI,IAAIlB;AACjB,eAAO;UAACd,eAAeY,eAAeC,IAAIC,IAAIC,IAAE,IAAE,CAA3B,IAAgC,GAA/C;UACAf,eAAeY,eAAeC,IAAIC,IAAIC,CAAvB,IAA4B,GAA3C;UACAf,eAAeY,eAAeC,IAAIC,IAAIC,IAAE,IAAE,CAA3B,IAAgC,GAA/C;UACAc;QAHD;MAIT;AACE,eAAO;IA7BX;EAJsC;AAqCxC,SAAO;AAlEuB;AAqEhC,IAAI;AAAEI,oBAAAA,eAAAA,gBAAwBjB;AAA1B,SAAgDkB,GAAN;AAAS;ACzLvD,IAAMC,QAMFC,SAAAA,OAAYC,GAAWC,GAAWC,GAAWC,GAAe;;QAAH;AACrD,OAAKH,IAAIA;AACT,OAAKC,IAAIA;AACT,OAAKC,IAAIA;AACT,OAAKC,IAAIA;AAVL;AAuBDC,MAAAA,QAAAA,SAAAA,MAAMC,OAA6C;AACtD,MAAI,CAACA,OAAO;AACR,WAAOC;EADC;AAIZ,MAAID,iBAAiBP,OAAO;AACxB,WAAOO;EADiB;AAI5B,MAAI,OAAOA,UAAU,UAAU;AAC3B,WAAOC;EADoB;AAI/BC,MAAMC,QAAO7B,gBAAc0B,KAAd;AACb,MAAI,CAACG,OAAM;AACP,WAAOF;EADA;AAIX,SAAO,IAAIR,MACPU,MAAK,CAAL,IAAU,MAAMA,MAAK,CAAL,GAChBA,MAAK,CAAL,IAAU,MAAMA,MAAK,CAAL,GAChBA,MAAK,CAAL,IAAU,MAAMA,MAAK,CAAL,GAChBA,MAAK,CAAL,CAJG;AAzCH;AA2DRC,MAAAA,UAAAA,WAAAA,SAAAA,WAAmB;AACT,MAAA,MAAe,KAAKC,QAAL;AAAdV,MAAAA,IAAAA,IAAAA,CAAAA;AAAGC,MAAAA,IAAAA,IAAAA,CAAAA;AAAGC,MAAAA,IAAAA,IAAAA,CAAAA;AAAGC,MADD,IAAA,IAAA,CAAA;AAEf,SAAetC,UAAAA,KAAKC,MAAMkC,CAAX,IAAiBnC,MAAAA,KAAKC,MAAMmC,CAAX,IAAiBpC,MAAAA,KAAKC,MAAMoC,CAAX,IAA1C,MAA2DC,IAA3D;AA7DH;AAqERO,MAAAA,UAAAA,UAAAA,SAAAA,UAA4C;AAAA,MAAA,MACnB;AAAdV,MAAAA,IAAAA,IAAAA;AAAGC,MAAAA,IAAAA,IAAAA;AAAGC,MAAAA,IAAAA,IAAAA;AAAGC,MADwB,IAAA,IAAA;AAExC,SAAOA,MAAM,IAAI;IAAC;IAAG;IAAG;IAAG;EAAV,IAAe;IAC5BH,IAAI,MAAMG;IACVF,IAAI,MAAME;IACVD,IAAI,MAAMC;IACVA;EAJ4B;AAvE5B;AAoFRQ,MAAAA,UAAAA,YAAAA,SAAAA,YAA8C;AAAA,MAAA,MACrB;AAAdX,MAAAA,IAAAA,IAAAA;AAAGC,MAAAA,IAAAA,IAAAA;AAAGC,MAAAA,IAAAA,IAAAA;AAAGC,MAD0B,IAAA,IAAA;AAE1C,SAAOA,MAAM,IAAI;IAAC;IAAG;IAAG;IAAG;EAAV,IAAe;IAC5BH,IAAIG;IACJF,IAAIE;IACJD,IAAIC;IACJA;EAJ4B;AAtF5B;AAmGRS,MAAAA,UAAAA,8BAAAA,SAAAA,8BAAgE;AAAA,MAAA,MACvC;AAAdZ,MAAAA,IAAAA,IAAAA;AAAGC,MAAAA,IAAAA,IAAAA;AAAGC,MAAAA,IAAAA,IAAAA;AAAGC,MAD4C,IAAA,IAAA;AAE5D,SAAO;IACHH;IACAC;IACAC;IACAC;EAJG;AArGH;AA8GZL,MAAMe,QAAQ,IAAIf,MAAM,GAAG,GAAG,GAAG,CAAnB;AACdA,MAAMgB,QAAQ,IAAIhB,MAAM,GAAG,GAAG,GAAG,CAAnB;AACdA,MAAMiB,cAAc,IAAIjB,MAAM,GAAG,GAAG,GAAG,CAAnB;AACpBA,MAAMkB,MAAM,IAAIlB,MAAM,GAAG,GAAG,GAAG,CAAnB;AACZA,MAAMmB,OAAO,IAAInB,MAAM,GAAG,GAAG,GAAG,CAAnB;AAEb,IAAA,UAAA;AC5HA,SAASoB,eAAeC,OAAO;AAC3B,SAAO,OAAOA,UAAU,WAAW;IAAC;IAAWA;EAAZ,IAAqBA;AAD7B;AAIhB,SAASC,gBAAgBC,YAAiBC,cAAmE;AACxHC,MAAIC,QAAQH,WAAWG;AACvB,MAAI,CAACA,OAAO;AAER,WAAOC,wBAAwBJ,YAAYC,YAApC;EAFC;AAKZf,MAAMmB,0BAA0BF,SAAS,OAAOA,MAAM,CAAN,EAAS,CAAT,MAAgB;AAChEjB,MAAMoB,mBAAmBD,2BAA2BL,WAAWO,aAAatB;AAC5EC,MAAMsB,gBAAgBH,2BAA2B,CAACC;AAElDH,UAAQA,MAAMM,IAAN,SAAWC,MAAS;AACxB,QAAI,CAACJ,oBAAoBL,aAAaU,UAAU,OAAOD,KAAK,CAAL,MAAY,UAAU;AACzE,aAAO;QAACA,KAAK,CAAL;QAASE,mBAAmBF,KAAK,CAAL,CAAnB;MAAV;IADkE;AAG7E,WAAO;MAACA,KAAK,CAAL;MAASb,eAAea,KAAK,CAAL,CAAf;IAAV;EAJiB,CAApB;AAOR,MAAIL,yBAAyB;AACzB,WAAOQ,+BAA+Bb,YAAYC,cAAcE,KAAzD;EADkB,WAElBK,eAAe;AACtB,WAAOM,oBAAoBd,YAAYC,cAAcE,KAA9C;EADe,OAEnB;AACH,WAAOY,wBAAwBf,YAAYC,cAAcE,KAAlD;EADJ;AAtBiH;AA2B5H,SAASC,wBAAwBJ,YAAYC,cAA4B;AACrEf,MAAM8B,OAAM;IAAC;IAAOhB,WAAWO;EAAnB;AAEZ,MAAIP,WAAWiB,YAAYhC,QAAW;AAGlC,WAAOgB,aAAaiB,SAAS,WAAW;MAAC;MAAUF;IAAX,IAAkBA;EAHxB,WAI3Bf,aAAaiB,SAAS,QAAQ;AACrC,WAAO;MACH;MACAF;MACAG,OAAOC,KAAKnB,aAAaoB,MAAzB;MACAL;MACAhB,WAAWiB;IALR;EAD8B,OAQlC;AACH/B,QAAMoC,aAAa;MAACrB,aAAaiB,SAAS,UAAU,aAAajB,aAAaiB;MAAMF;MAAKnB,eAAeG,WAAWiB,OAA1B;IAAtE;AACnB,QAAIhB,aAAaiB,SAAS,SAAS;AAC/BI,iBAAWC,OAAO,GAAG,GAAGtB,aAAaH,OAAOG,aAAanD,UAAU,IAAnE;IAD+B;AAGnC,WAAOwE;EALJ;AAf8D;AAwBzE,SAASE,uBAAuBxB,YAAY;AACxC,UAAQA,WAAWyB,YAAnB;IACA,KAAK;AAAO,aAAO;IACnB,KAAK;AAAO,aAAO;IACnB;AAAS,aAAO;EAHhB;AADwC;AAQ5C,SAASZ,+BAA+Bb,YAAYC,cAAcE,OAAO;AACrEjB,MAAMwC,4BAA4B,CAAA;AAClCxC,MAAMyC,uBAAuB,CAAA;AAC7BzC,MAAM0C,YAAY,CAAA;AAClB,WAASvD,IAAI,GAAGA,IAAI8B,MAAMrD,QAAQuB,KAAK;AACnCa,QAAMwB,OAAOP,MAAM9B,CAAN;AACba,QAAM2C,OAAOnB,KAAK,CAAL,EAAQmB;AACrB,QAAIH,0BAA0BG,IAA1B,MAAoC5C,QAAW;AAC/CyC,gCAA0BG,IAA1B,IAAkC;QAAA;QAE9BX,MAAMlB,WAAWkB;QACjBX,UAAUP,WAAWO;QACrBU,SAASjB,WAAWiB;MAJU;AAMlCU,2BAAqBE,IAArB,IAA6B,CAAA;AAC7BD,gBAAUE,KAAKD,IAAf;IAR+C;AAUnDF,yBAAqBE,IAArB,EAA2BC,KAAK;MAACpB,KAAK,CAAL,EAAQZ;MAAOY,KAAK,CAAL;IAAhB,CAAhC;EAbmC;AAoBjCqB,MAAAA,eAAeC,gBAAgB,CAAA,GAAI/B,YAApB;AACrB,MAAI8B,iBAAiB,eAAe;AAChC7C,QAAMoC,aAAa;MAACE,uBAAuBxB,UAAvB;MAAoC,CAAC,QAAD;MAAY,CAAC,MAAD;IAAjD;AAEnB,aAAA,IAAA,GAAA,OAAgB4B,WAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAW;AAAhBK,UAAAA,IAAAA,KAAAA,CAAAA;AACP/C,UAAMgD,SAASnB,wBAAwBW,0BAA0BO,CAA1B,GAA8BhC,cAAc0B,qBAAqBM,CAArB,CAApE;AACfE,qBAAeb,YAAYW,GAAGC,QAAQ,KAAtC;IAFuB;AAK3B,WAAOZ;EARyB,OAS7B;AACHpC,QAAMoC,eAAa;MAAC;MAAQ,CAAC,MAAD;IAAT;AAEnB,aAAA,MAAA,GAAA,SAAgBM,WAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAW;AAAhBK,UAAAA,MAAAA,OAAAA,GAAAA;AACP/C,UAAMgD,WAASnB,wBAAwBW,0BAA0BO,GAA1B,GAA8BhC,cAAc0B,qBAAqBM,GAArB,CAApE;AACfE,qBAAeb,cAAYW,KAAGC,UAAQ,IAAtC;IAFuB;AAK3BE,6BAAyBd,YAAzB;AAEA,WAAOA;EAVJ;AAlC8D;AAgDzE,SAASe,SAASvD,GAAGD,GAAG;AACpB,MAAIC,MAAMG,QAAW;AAAA,WAAOH;EADR;AAEpB,MAAID,MAAMI,QAAW;AAAA,WAAOJ;EAFR;AAAA;AAKxB,SAASyD,YAAYtC,YAAYC,cAAc;AAC3Cf,MAAMqD,eAAe1C,eAAewC,SAASrC,WAAWiB,SAAShB,aAAagB,OAA1C,CAAf;AAQjBsB,MAAAA,iBAAiBtD,UAAagB,aAAaiB,SAAS,iBAAiB;AACrE,WAAO;EAD8D;AAGzE,SAAOqB;AAZoC;AAe/C,SAASxB,wBAAwBf,YAAYC,cAAcE,OAAO;AAC9DjB,MAAMgC,OAAOc,gBAAgBhC,YAAYC,YAA5B;AACbf,MAAM8B,OAAM;IAAC;IAAOhB,WAAWO;EAAnB;AACZ,MAAIW,SAAS,iBAAiB,OAAOf,MAAM,CAAN,EAAS,CAAT,MAAgB,WAAW;AAE5DjB,QAAMoC,aAAa,CAAC,MAAD;AACnB,aAAA,IAAA,GAAA,OAAmBnB,OAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAO;AAAfO,UAAAA,OAAAA,KAAAA,CAAAA;AACPY,iBAAWQ,KAAK;QAAC;QAAMd;QAAKN,KAAK,CAAL;MAAZ,GAAsBA,KAAK,CAAL,CAAtC;IADsB;AAI1BY,eAAWQ,KAAKQ,YAAYtC,YAAYC,YAAxB,CAAhB;AACA,WAAOqB;EARqD,WASrDJ,SAAS,eAAe;AAC/BhC,QAAMoC,eAAa;MAAC;MAASN;IAAV;AACnB,aAAA,MAAA,GAAA,SAAmBb,OAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAO;AAAfO,UAAAA,SAAAA,OAAAA,GAAAA;AACPyB,qBAAeb,cAAYZ,OAAK,CAAL,GAASA,OAAK,CAAL,GAAS,KAA7C;IADsB;AAG1BY,iBAAWQ,KAAKQ,YAAYtC,YAAYC,YAAxB,CAAhB;AACA,WAAOqB;EANwB,WAOxBJ,SAAS,YAAY;AAC5BhC,QAAMoC,eAAa;MAAC;MAAQ;QAAC;QAAUN;MAAX;IAAT;AACnB,aAAA,MAAA,GAAA,SAAmBb,OAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAO;AAAfO,UAAAA,SAAAA,OAAAA,GAAAA;AACPyB,qBAAeb,cAAYZ,OAAK,CAAL,GAASA,OAAK,CAAL,GAAS,IAA7C;IADsB;AAG1B0B,6BAAyBd,YAAzB;AACA,WAAOtB,WAAWiB,YAAYhC,SAAYqC,eAAa;MACnD;MACA;QAAC;QAAM;UAAC;UAAUN;QAAX;QAAiB;MAAxB;MACAM;MACAzB,eAAeG,WAAWiB,OAA1B;IAJmD;EAN3B,WAYrBC,SAAS,eAAe;AAC/BhC,QAAMsD,OAAOxC,WAAWwC,SAASvD,SAAYe,WAAWwC,OAAO;AAC/DtD,QAAMoC,eAAa;MACfE,uBAAuBxB,UAAvB;MACAwC,SAAS,IAAI,CAAC,QAAD,IAAa;QAAC;QAAeA;MAAhB;MAC1B;QAAC;QAAUxB;MAAX;IAHe;AAMnB,aAAA,MAAA,GAAA,SAAmBb,OAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAO;AAAfO,UAAAA,SAAAA,OAAAA,GAAAA;AACPyB,qBAAeb,cAAYZ,OAAK,CAAL,GAASA,OAAK,CAAL,GAAS,KAA7C;IADsB;AAG1B,WAAOV,WAAWiB,YAAYhC,SAAYqC,eAAa;MACnD;MACA;QAAC;QAAM;UAAC;UAAUN;QAAX;QAAiB;MAAxB;MACAM;MACAzB,eAAeG,WAAWiB,OAA1B;IAJmD;EAXxB,OAiB5B;AACH,UAAM,IAAIwB,MAAwCvB,oCAAAA,IAAAA;EAD/C;AAhDuD;AAqDlE,SAASJ,oBAAoBd,YAAYC,cAAcE,OAAOnB,OAAkB;AAAlB,MAAA,UAAA;AAAA,YAAQ,CAAC,MAAD;AAClEE,MAAMgC,OAAOc,gBAAgBhC,YAAYC,YAA5B;AACbC,MAAIoB;AACJpB,MAAIwC,SAAS;AACb,MAAIxB,SAAS,YAAY;AACrBI,iBAAa;MAAC;MAAQtC;IAAT;AACb0D,aAAS;EAFY,WAGdxB,SAAS,eAAe;AAC/BhC,QAAMsD,OAAOxC,WAAWwC,SAASvD,SAAYe,WAAWwC,OAAO;AAC/DlB,iBAAa;MAACE,uBAAuBxB,UAAvB;MAAoCwC,SAAS,IAAI,CAAC,QAAD,IAAa;QAAC;QAAeA;MAAhB;MAAuBxD;IAAtF;EAFkB,OAI5B;AACH,UAAM,IAAIyD,MAAJ,iCAAyCvB,OAA/B,GAAA;EADb;AAIP,WAAA,IAAA,GAAA,OAAmBf,OAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAO;AAAfO,QAAAA,OAAAA,KAAAA,CAAAA;AACPyB,mBAAeb,YAAYZ,KAAK,CAAL,GAASA,KAAK,CAAL,GAASgC,MAA7C;EADsB;AAI1BN,2BAAyBd,UAAzB;AAEA,SAAOA;AArBqE;AAwBhF,SAASc,yBAAyBd,YAAY;AAEtCA,MAAAA,WAAW,CAAX,MAAkB,UAAUA,WAAWxE,WAAW,GAAG;AACrDwE,eAAWQ,KAAK,CAAhB;AACAR,eAAWQ,KAAKR,WAAW,CAAX,CAAhB;EAFqD;AAFf;AAQ9C,SAASa,eAAeQ,OAAO3D,OAAOkD,QAAQQ,QAAQ;AAGlD,MAAIC,MAAM7F,SAAS,KAAKkC,UAAU2D,MAAMA,MAAM7F,SAAS,CAArB,GAAyB;AACvD;EADuD;AAIvD,MAAA,EAAE4F,UAAUC,MAAM7F,WAAW,IAAI;AACjC6F,UAAMb,KAAK9C,KAAX;EADiC;AAGrC2D,QAAMb,KAAKI,MAAX;AAVkD;AAatD,SAASF,gBAAgBhC,YAAYC,cAAc;AAC/C,MAAID,WAAWkB,MAAM;AACjB,WAAOlB,WAAWkB;EADD,OAEd;AAEH,WAAQjB,aAAaqB,WAAiBsB,eAAe,gBAAgB;EAFlE;AAHwC;AAU5C,SAAShC,mBAAmBvC,GAA6C;AAC5Ea,MAAM2D,SAAS,CAAC,QAAD;AACf3D,MAAM4D,KAAK;AACX5C,MAAI6C,MAAM;AACV,WAASC,QAAQF,GAAGG,KAAK5E,CAAR,GAAY2E,UAAU,MAAMA,QAAQF,GAAGG,KAAK5E,CAAR,GAAY;AAC7Da,QAAMgE,UAAU7E,EAAEX,MAAMqF,KAAKD,GAAGK,YAAYH,MAAM,CAAN,EAASlG,MAArC;AAChBiG,UAAMD,GAAGK;AACT,QAAID,QAAQpG,SAAS,GAArB;AAAwB+F,aAAOf,KAAKoB,OAAZ;IAHqC;AAI7DL,WAAOf,KAAK;MAAC;MAAOkB,MAAM,CAAN;IAAR,CAAZ;EAJ6D;AAOjE,MAAIH,OAAO/F,WAAW,GAAG;AACrB,WAAOuB;EADc;AAIzB,MAAI0E,MAAM1E,EAAEvB,QAAQ;AAChB+F,WAAOf,KAAKzD,EAAEX,MAAMqF,GAAR,CAAZ;EADgB,WAETF,OAAO/F,WAAW,GAAG;AAC5B,WAAO;MAAC;MAAa+F,OAAO,CAAP;IAAd;EADqB;AAIhC,SAAOA;AArBqE;ACpPhF,IAAMO,eAAN,SAAAX,QAAA;AAGI/D,WAAAA,cAAY2E,KAAaC,SAAiB;AACtCC,IAAAA,OAAA,KAAA,MAAMD,OAAN;AACA,SAAKA,UAAUA;AACf,SAAKD,MAAMA;EAH2B;;;;;;EAHnBZ,KAF3B;AAYA,IAAA,iBAAA;ACJA,IAAMe,QAGF9E,SAAAA,OAAY+E,QAAgBC,UAA4C;;eAAJ,CAAA;AAChE,OAAKD,SAASA;AACd,OAAKC,WAAW,CAAA;AAChB,WAAA,IAAA,GAAA,OAAiCA,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAA3CxE,QAAA,MAAA,KAAA,CAAA;AAAYyE,QAAAA,OAAAA,IAAAA,CAAAA;AAAMrC,QAAAA,aAAAA,IAAAA,CAAAA;AACd,SAAKoC,SAASC,IAAd,IAAsBrC;EADiB;AANvC;gBAWRsC,SAAA,SAAA,OAAOF,UAA8C;AACjD,SAAO,IAAIF,MAAM,MAAME,QAAhB;AAZH;gBAeR1C,MAAA,SAAAA,KAAI2C,MAA0B;AAC1B,MAAI,KAAKD,SAASC,IAAd,GAAqB;AAAE,WAAO,KAAKD,SAASC,IAAd;EAAT;AACzB,MAAI,KAAKF,QAAQ;AAAE,WAAO,KAAKA,OAAOzC,IAAI2C,IAAhB;EAAT;AACjB,QAAM,IAAIlB,MAASkB,OAAH,sBAAA;AAlBZ;gBAqBRE,MAAA,SAAA,IAAIF,MAAuB;AACvB,MAAI,KAAKD,SAASC,IAAd,GAAqB;AAAA,WAAO;EADT;AAEvB,SAAO,KAAKF,SAAS,KAAKA,OAAOI,IAAIF,IAAhB,IAAwB;AAvBzC;AA2BZ,IAAA,UAAA;ACGOzE,IAAM4E,WAAW,EAACC,MAAM,OAAP;AACjB7E,IAAM8E,aAAa,EAACD,MAAM,SAAP;AACnB7E,IAAM+E,aAAa,EAACF,MAAM,SAAP;AACnB7E,IAAMgF,cAAc,EAACH,MAAM,UAAP;AACpB7E,IAAMiF,YAAY,EAACJ,MAAM,QAAP;AAClB7E,IAAMkF,aAAa,EAACL,MAAM,SAAP;AACnB7E,IAAMmF,YAAY,EAACN,MAAM,QAAP;AAClB7E,IAAMoF,YAAY,EAACP,MAAM,QAAP;AAClB7E,IAAMqF,eAAe,EAACR,MAAM,WAAP;AACrB7E,IAAMsF,gBAAgB,EAACT,MAAM,YAAP;AACtB7E,IAAMuF,oBAAoB,EAACV,MAAM,gBAAP;AAE1B,SAASW,QAAMC,UAAgBC,GAAuB;AACzD,SAAO;IACHb,MAAM;IADH;IAAA;EAAA;AADkD;AAQtD,SAAS3E,WAAS8B,MAAoB;AACzC,MAAIA,KAAK6C,SAAS,SAAS;AACvB7E,QAAMyF,WAAWvF,WAAS8B,KAAKyD,QAAd;AACjB,WAAO,OAAOzD,KAAK0D,MAAM,WACZD,WAAAA,WAAazD,OAAAA,KAAK0D,IADxB,MAEH1D,KAAKyD,SAASZ,SAAS,UAAU,UAAmBY,WAAAA,WAAT;EAJxB,OAKpB;AACH,WAAOzD,KAAK6C;EADT;AANkC;AAW7C7E,IAAM2F,mBAAmB;EACrBf;EACAE;EACAC;EACAC;EACAC;EACAK;EACAJ;EACAM,QAAML,SAAN;EACAI;AATqB;AAiBlB,SAASK,aAAaC,UAAgBC,GAAkB;AAC3D,MAAIA,EAAEjB,SAAS,SAAS;AAEpB,WAAO;EAFa,WAGbgB,SAAShB,SAAS,SAAS;AAClC,QAAIiB,EAAEjB,SAAS,YACTiB,EAAEJ,MAAM,KAAKI,EAAEL,SAASZ,SAAS,WAAY,CAACe,aAAaC,SAASJ,UAAUK,EAAEL,QAAlC,OAC/C,OAAOI,SAASH,MAAM,YAAYG,SAASH,MAAMI,EAAEJ,IAAI;AACxD,aAAO;IADiD;EAH1B,WAM3BG,SAAShB,SAASiB,EAAEjB,MAAM;AACjC,WAAO;EAD0B,WAE1BgB,SAAShB,SAAS,SAAS;AAClC,aAAA,IAAA,GAAA,OAAyBc,kBAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAkB;AAAhCI,UAAAA,aAAAA,KAAAA,CAAAA;AACP,UAAI,CAACH,aAAaG,YAAYD,CAAzB,GAA6B;AAC9B,eAAO;MADuB;IADK;EADT;AAQtC,SAAO,cAAY5F,WAAS2F,QAAT,IAAgC3F,gBAAAA,WAAS4F,CAAT,IAA5C;AApBoD;AAuBxD,SAASE,YAAYC,UAAgBC,cAAoC;AAC5E,SAAOA,aAAaC,KAAb,SAAkBL,GAAA;AAAA,WAAKA,EAAEjB,SAASoB,SAASpB;EAAAA,CAA3C;AADqE;AAIzE,SAASuB,kBAAkBH,UAAeC,cAA0C;AACvF,SAAOA,aAAaC,KAAb,SAAkBL,GAAK;AAC1B,QAAIA,MAAM,QAAQ;AACd,aAAOG,aAAa;IADN,WAEPH,MAAM,SAAS;AACtB,aAAOO,MAAMC,QAAQL,QAAd;IADe,WAEfH,MAAM,UAAU;AACvB,aAAOG,YAAY,CAACI,MAAMC,QAAQL,QAAd,KAA2B,OAAOA,aAAa;IAD5C,OAEpB;AACH,aAAOH,MAAM,OAAOG;IADjB;EAPmB,CAAvB;AADgF;AC/E5E,IAAMM,WAKjB/G,SAAA+G,UAAYC,eAAwBC,oBAA6BC,QAAuB;AACpF,MAAIF,eACA;AAAA,SAAKG,cAAcF,qBAAqB,YAAY;EADxD,OAGI;AAAA,SAAKE,cAAcF,qBAAqB,WAAW;EAJ6B;AAMpF,OAAKC,SAASA;AACd,OAAKE,WAAW,IAAIC,KAAKN,SAAS,KAAKG,SAAS,KAAKA,SAAS,CAAA,GAC1D;IAACC,aAAa,KAAKA;IAAaG,OAAO;EAAvC,CADY;AAZM;AAgB1BC,SAAAA,UAAAA,UAAAA,SAAAA,QAAQC,KAAaC,KAAqB;AACtC,SAAO,KAAKL,SAASG,QAAQC,KAAKC,GAA3B;AAjBe;AAoB1BC,SAAAA,UAAAA,iBAAAA,SAAAA,iBAAyB;AAGrB,SAAO,IAAIL,KAAKN,SAAS,KAAKG,SAAS,KAAKA,SAAS,CAAA,CAA9C,EACFS,gBADE,EACgBT;AAxBD;;AC9BvB,IAAMU,mBAOT5H,SAAAA,kBAAY6H,MAAcC,OAA6BC,QAAsBC,WAA0BC,WAAyB;AAE5H,OAAKJ,OAAOA,KAAKK,YAAYL,KAAKK,UAAL,IAAmBL;AAChD,OAAKC,QAAQA;AACb,OAAKC,QAAQA;AACb,OAAKC,YAAYA;AACjB,OAAKC,YAAYA;AAbK;AAiBf,IAAME,YAGjBnI,SAAAmI,WAAYC,UAAmC;AAC3C,OAAKA,WAAWA;AAJO;AAO3B,UAAOC,aAAAA,SAAAA,YAAWC,aAAgC;AAC9C,SAAO,IAAIH,UAAU,CAAC,IAAIP,iBAAiBU,aAAa,MAAM,MAAM,MAAM,IAApD,CAAD,CAAd;AARgB;AAW3BC,UAAAA,UAAAA,UAAAA,SAAAA,WAAmB;AACf,MAAI,KAAKH,SAAShK,WAAW,GAAG;AAAA,WAAO;EADxB;AAEf,SAAO,CAAC,KAAKgK,SAASzB,KAAK6B,SAAAA,SAAWA;AAAAA,WAAAA,QAAQX,KAAKzJ,WAAW,KACxBoK,QAAQV,SAASU,QAAQV,MAAM7C,KAAK7G,WAAW;EAAA,CAD7E;AAbe;AAiB3B,UAAOqK,UAAAA,SAAAA,QAAQZ,MAAqC;AAChD,MAAIA,gBAAgBM,WAAW;AAC3B,WAAON;EADoB,OAExB;AACH,WAAOM,UAAUE,WAAWR,IAArB;EADJ;AApBgB;AAyB3BnH,UAAAA,UAAAA,WAAAA,SAAAA,YAAmB;AACf,MAAI,KAAK0H,SAAShK,WAAW,GAAG;AAAA,WAAO;EADxB;AAEf,SAAO,KAAKgK,SAASrG,IAAd,SAAkByG,SAAA;AAAA,WAAWA,QAAQX;EAAAA,CAArC,EAA2Ca,KAAK,EAAhD;AA3BgB;AA8B3BC,UAAAA,UAAAA,YAAAA,SAAAA,YAA0B;AACtBnI,MAAMoI,aAA2B,CAAC,QAAD;AACjC,WAAsB,IAAA,GAAA,OAAA,KAAKR,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAA1BI,QAAAA,UAAAA,KAAAA,CAAAA;AACP,QAAIA,QAAQV,OAAO;AACfc,iBAAWxF,KAAK;QAAC;QAASoF,QAAQV,MAAM7C;MAAxB,CAAhB;AACA;IAFe;AAInB2D,eAAWxF,KAAKoF,QAAQX,IAAxB;AACArH,QAAMqI,UAAoC,CAAA;AAC1C,QAAIL,QAAQR,WAAW;AACnBa,cAAQ,WAAR,IAAuB;QAAC;QAAWL,QAAQR,UAAUxI,MAAM,GAAxB;MAAZ;IADJ;AAGvB,QAAIgJ,QAAQT,OAAO;AACfc,cAAQ,YAAR,IAAwBL,QAAQT;IADjB;AAGnB,QAAIS,QAAQP,WAAW;AACnBY,cAAQ,YAAR,IAAyB,CAAC,MAAD,EAAwB3D,OAAOsD,QAAQP,UAAUtH,QAAlB,CAAhC;IADL;AAGvBiI,eAAWxF,KAAKyF,OAAhB;EAhBiC;AAkBrC,SAAOD;AAlDgB;;ACdhB,IAAME,gBAIjB9I,SAAA8I,eAAYD,SAA+B;AACvC,OAAK5D,OAAO4D,QAAQ5D;AACpB,OAAK8D,YAAYF,QAAQE;AANE;AAS/BrI,cAAAA,UAAAA,WAAAA,SAAAA,YAAmB;AACf,SAAO,KAAKuE;AAVe;AAa/B,cAAOoD,aAAAA,SAAAA,YAAWpD,MAAoC;AAClD,MAAI,CAACA,MAAM;AAAA,WAAO;EADgC;AAE3C,SAAA,IAAI6D,cAAc;IAAA;IAAOC,WAAW;EAAlB,CAAlB;AAfoB;AAkB/BJ,cAAAA,UAAAA,YAAAA,SAAAA,aAA2B;AACvB,SAAO;IAAC;IAAS,KAAK1D;EAAf;AAnBoB;;ACK5B,SAAS+D,aAAa/I,GAAUC,GAAUC,GAAUC,GAA0B;AACjF,MAAI,EACA,OAAOH,MAAM,YAAYA,KAAK,KAAKA,KAAK,OACxC,OAAOC,MAAM,YAAYA,KAAK,KAAKA,KAAK,OACxC,OAAOC,MAAM,YAAYA,KAAK,KAAKA,KAAK,MACzC;AACCK,QAAMY,QAAQ,OAAOhB,MAAM,WAAW;MAACH;MAAGC;MAAGC;MAAGC;IAAV,IAAe;MAACH;MAAGC;MAAGC;IAAP;AACrD,WAAA,yBAA8BiB,MAAMsH,KAAK,IAAX,IAAvB;EAFR;AAKH,MAAI,EACOtI,OAAAA,MAAM,eAAgB,OAAOA,MAAM,YAAYA,KAAK,KAAKA,KAAK,IACtE;AACC,WAA8B,yBAAA;MAACH;MAAGC;MAAGC;MAAGC;IAAV,EAAasI,KAAK,IAAlB,IAAvB;EADR;AAIH,SAAO;AAhB0E;AAqB9E,SAASO,QAAQC,OAAuB;AAC3C,MAAIA,UAAU,MAAM;AAChB,WAAO;EADS,WAET,OAAOA,UAAU,UAAU;AAClC,WAAO;EAD2B,WAE3B,OAAOA,UAAU,WAAW;AACnC,WAAO;EAD4B,WAE5B,OAAOA,UAAU,UAAU;AAClC,WAAO;EAD2B,WAE3BA,iBAAiBnJ,SAAO;AAC/B,WAAO;EADwB,WAExBmJ,iBAAiBnC,YAAU;AAClC,WAAO;EAD2B,WAE3BmC,iBAAiBf,aAAW;AACnC,WAAO;EAD4B,WAE5Be,iBAAiBJ,iBAAe;AACvC,WAAO;EADgC,WAEhCjC,MAAMC,QAAQoC,KAAd,GAAsB;AAC7B,aAAA,IAAA,GAAA,OAAmBA,OAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAO;AAAfC,UAAAA,OAAAA,KAAAA,CAAAA;AACP,UAAI,CAACF,QAAQE,IAAR,GAAe;AAChB,eAAO;MADS;IADE;AAK1B,WAAO;EANsB,WAOtB,OAAOD,UAAU,UAAU;AAClC,aAAWvE,OAAOuE,OAAO;AACrB,UAAI,CAACD,QAAQC,MAAMvE,GAAN,CAAR,GAAqB;AACtB,eAAO;MADe;IADL;AAKzB,WAAO;EAN2B,OAO/B;AACH,WAAO;EADJ;AA/BoC;AAoCxC,SAASyE,OAAOhI,OAAoB;AACvC,MAAIA,UAAU,MAAM;AAChB,WAAOgE;EADS,WAET,OAAOhE,UAAU,UAAU;AAClC,WAAOmE;EAD2B,WAE3B,OAAOnE,UAAU,WAAW;AACnC,WAAOoE;EAD4B,WAE5B,OAAOpE,UAAU,UAAU;AAClC,WAAOkE;EAD2B,WAE3BlE,iBAAiBrB,SAAO;AAC/B,WAAO0F;EADwB,WAExBrE,iBAAiB2F,YAAU;AAClC,WAAOlB;EAD2B,WAE3BzE,iBAAiB+G,aAAW;AACnC,WAAOrC;EAD4B,WAE5B1E,iBAAiB0H,iBAAe;AACvC,WAAO/C;EADgC,WAEhCc,MAAMC,QAAQ1F,KAAd,GAAsB;AAC7BZ,QAAMpC,SAASgD,MAAMhD;AACrBoD,QAAIyE;AAEJ,aAAA,IAAA,GAAA,OAAmB7E,OAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAO;AAAf+H,UAAAA,OAAAA,KAAAA,CAAAA;AACP3I,UAAM8F,IAAI8C,OAAOD,IAAP;AACV,UAAI,CAAClD,UAAU;AACXA,mBAAWK;MADA,WAEJL,aAAaK,GAAG;AACvB;MADuB,OAEpB;AACHL,mBAAWN;AACX;MAFG;IANe;AAY1B,WAAOK,QAAMC,YAAYN,WAAWvH,MAA7B;EAhBsB,OAiB1B;AAEH,WAAOsH;EAFJ;AAlCgC;AAwCpC,SAAShF,UAASU,OAAsB;AAC3CZ,MAAMgC,OAAO,OAAOpB;AACpB,MAAIA,UAAU,MAAM;AAChB,WAAO;EADS,WAEToB,SAAS,YAAYA,SAAS,YAAYA,SAAS,WAAW;AACrE,WAAO6G,OAAOjI,KAAP;EAD8D,WAE9DA,iBAAiBrB,WAASqB,iBAAiB+G,eAAa/G,iBAAiB0H,iBAAe;AAC/F,WAAO1H,MAAMV,SAAN;EADwF,OAE5F;AACH,WAAO4I,KAAKC,UAAUnI,KAAf;EADJ;AARoC;AClG/C,IAAMoI,UAIFxJ,SAAAA,SAAYwC,MAAYpB,OAAc;AAClC,OAAKoB,OAAOA;AACZ,OAAKpB,QAAQA;AANe;AAShC,QAAOf,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAyC;AAC/E,MAAID,KAAKrL,WAAW,GAApB;AACI,WAAOsL,QAAQC,MAAM,oEAAiEF,KAAKrL,SAAS,KAA/E,WAAA;EAFsD;AAI/E,MAAI,CAAC6K,QAAQQ,KAAK,CAAL,CAAR,GAAL;AACI,WAAOC,QAAQC,MAAM,eAAd;EALoE;AAO/EnJ,MAAMY,QAASqI,KAAK,CAAL;AACfjI,MAAIgB,OAAO4G,OAAOhI,KAAP;AAGXZ,MAAM6F,WAAWqD,QAAQE;AACzB,MACIpH,KAAK6C,SAAS,WACd7C,KAAK0D,MAAM,KACXG,YACAA,SAAShB,SAAS,YACVgB,OAAAA,SAASH,MAAM,YAAYG,SAASH,MAAM,IACpD;AACE1D,WAAO6D;EADT;AAIF,SAAO,IAAImD,QAAQhH,MAAMpB,KAAlB;AA/BqB;AAkChCyI,QAAAA,UAAAA,WAAAA,SAAAA,WAAkB;AACd,SAAO,KAAKzI;AAnCgB;AAsChC0I,QAAAA,UAAAA,YAAAA,SAAAA,YAAY;AAtCoB;AAwChCC,QAAAA,UAAAA,gBAAAA,SAAAA,gBAAyB;AACrB,SAAO;AAzCqB;AA4ChCpB,QAAAA,UAAAA,YAAAA,SAAAA,aAAkC;AAC9B,MAAI,KAAKnG,KAAK6C,SAAS,WAAW,KAAK7C,KAAK6C,SAAS,UAAU;AAC3D,WAAO;MAAC;MAAW,KAAKjE;IAAjB;EADoD,WAEpD,KAAKA,iBAAiBrB,SAAO;AAI7B,WAAA,CAAC,MAAD,EAASmF,OAAO,KAAK9D,MAAMT,QAAX,CAAhB;EAJ6B,WAK7B,KAAKS,iBAAiB+G,aAAW;AAExC,WAAO,KAAK/G,MAAMuH,UAAX;EAFiC,OAGrC;AAKH,WAAQ,KAAKvH;EALV;AAvDqB;AAiEpC,IAAA,YAAA;AC1EA,IAAM4I,eAIFhK,SAAAgK,cAAYpF,SAAiB;AACzB,OAAKK,OAAO;AACZ,OAAKL,UAAUA;AANJ;AASfqF,aAAAA,UAAAA,SAAAA,SAAAA,SAAiB;AACb,SAAO,KAAKrF;AAVD;AAcnB,IAAA,iBAAA;ACMApE,IAAM0J,UAAQ;EACVC,QAAQ5E;EACR6E,QAAQ9E;EACR+E,SAAS7E;EACT8E,QAAQ5E;AAJE;AAOd,IAAM6E,YAIFvK,SAAAA,WAAYwC,MAAYiH,MAAyB;AAC7C,OAAKjH,OAAOA;AACZ,OAAKiH,OAAOA;AANkB;AASlC,UAAOpJ,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAsC;AAC5E,MAAID,KAAKrL,SAAS,GAAlB;AACI,WAAOsL,QAAQC,MAAM,iCAAd;EAFiE;AAI5EnI,MAAI3D,IAAI;AACR2D,MAAIgB;AAEJhC,MAAMyE,OAAgBwE,KAAK,CAAL;AACtB,MAAIxE,SAAS,SAAS;AAClBzD,QAAIyE;AACJ,QAAIwD,KAAKrL,SAAS,GAAG;AACjBoC,UAAMgC,SAAOiH,KAAK,CAAL;AACb,UAAI,OAAOjH,WAAS,YAAY,EAAEA,UAAQ0H,YAAU1H,WAAS,UACzD;AAAA,eAAOkH,QAAQC,MAAM,4EAA4E,CAA1F;MAHM;AAIjB1D,iBAAWiE,QAAM1H,MAAN;AACX3E;IALiB,OAMd;AACHoI,iBAAWN;IADR;AAIPnE,QAAI0E;AACJ,QAAIuD,KAAKrL,SAAS,GAAG;AACjB,UAAIqL,KAAK,CAAL,MAAY,SACJA,OAAAA,KAAK,CAAL,MAAY,YAChBA,KAAK,CAAL,IAAU,KACVA,KAAK,CAAL,MAAY3L,KAAK0M,MAAMf,KAAK,CAAL,CAAX,IAClB;AACE,eAAOC,QAAQC,MAAM,qEAAqE,CAAnF;MADT;AAGFzD,UAAIuD,KAAK,CAAL;AACJ5L;IATiB;AAYrB2E,WAAOwD,QAAMC,UAAUC,CAAhB;EAzBW,OA0Bf;AAEH1D,WAAO0H,QAAMjF,IAAN;EAFJ;AAKPzE,MAAMiK,SAAS,CAAA;AACf,SAAO5M,IAAI4L,KAAKrL,QAAQP,KAAK;AACzB2C,QAAMF,QAAQoJ,QAAQrJ,MAAMoJ,KAAK5L,CAAL,GAASA,GAAG8H,SAA1B;AACd,QAAI,CAACrF,OAAO;AAAA,aAAO;IAFM;AAGzBmK,WAAOrH,KAAK9C,KAAZ;EAHyB;AAM7B,SAAO,IAAIiK,UAAU/H,MAAMiI,MAApB;AAvDuB;oBA0DlCZ,WAAA,SAAAA,UAASa,KAAoC;AACzC,WAAS7M,IAAI,GAAGA,IAAI,KAAK4L,KAAKrL,QAAQP,KAAK;AACvC2C,QAAMY,QAAQ,KAAKqI,KAAK5L,CAAV,EAAagM,SAASa,GAAtB;AACdlK,QAAMmJ,SAAQvD,aAAa,KAAK5D,MAAM4G,OAAOhI,KAAP,CAAxB;AACd,QAAI,CAACuI,QAAO;AACR,aAAOvI;IADC,WAEDvD,MAAM,KAAK4L,KAAKrL,SAAS,GAAG;AACnC,YAAM,IAAI4L,eAAJ,kCAAiDtJ,WAAS,KAAK8B,IAAd,IAAkC9B,iBAAAA,WAAS0I,OAAOhI,KAAP,CAAT,IAAnF,WAAA;IAD6B;EALA;AAW3C,SAAO;AAtEuB;oBAyElC0I,YAAA,SAAAA,WAAUa,IAA6B;AACnC,OAAKlB,KAAKmB,QAAQD,EAAlB;AA1E8B;AA6ElCZ,UAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AACrB,SAAO,KAAKN,KAAKoB,MAAV,SAAgBC,KAAA;AAAA,WAAOA,IAAIf,cAAJ;EAAA,CAAvB;AA9EuB;AAiFlCpB,UAAAA,UAAAA,YAAAA,SAAAA,aAAkC;AAC9BnI,MAAMgC,OAAO,KAAKA;AAClBhC,MAAMoI,aAAa,CAACpG,KAAK6C,IAAN;AACnB,MAAI7C,KAAK6C,SAAS,SAAS;AACvB7E,QAAMyF,WAAWzD,KAAKyD;AACtB,QAAIA,SAASZ,SAAS,YAClBY,SAASZ,SAAS,YAClBY,SAASZ,SAAS,WAAW;AAC7BuD,iBAAWxF,KAAK6C,SAASZ,IAAzB;AACA7E,UAAM0F,IAAI1D,KAAK0D;AACf,UAAI,OAAOA,MAAM,YAAY,KAAKuD,KAAKrL,SAAS,GAAG;AAC/CwK,mBAAWxF,KAAK8C,CAAhB;MAD+C;IAHtB;EAJV;AAY3B,SAAO0C,WAAW1D,OAAO,KAAKuE,KAAK1H,IAAI+I,SAAAA,KAAAA;AAAAA,WAAOA,IAAInC,UAAJ;EAArB,CAAA,CAAlB;AAhGuB;AAoGtC,IAAA,cAAA;AC7Ge,IAAMoC,mBAIjB/K,SAAA+K,kBAAY3C,UAA6C;AACrD,OAAK5F,OAAOsD;AACZ,OAAKsC,WAAWA;AANoC;AASxD,iBAAO/H,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAsC;AAC5E,MAAID,KAAKrL,SAAS,GAAG;AACjB,WAAOsL,QAAQC,MAAM,iCAAd;EADU;AAIrBnJ,MAAMwK,WAAWvB,KAAK,CAAL;AACjB,MAAI,CAAC5C,MAAMC,QAAQkE,QAAd,KAA2B,OAAOA,aAAa,UAAW;AAC3D,WAAOtB,QAAQC,MAAM,kDAAd;EADoD;AAI/DnJ,MAAM4H,WAA8C,CAAA;AACpD5G,MAAIyJ,uBAAuB;AAC3B,WAASpN,IAAI,GAAGA,KAAK4L,KAAKrL,SAAS,GAAG,EAAEP,GAAG;AACvC2C,QAAMsK,MAAOrB,KAAK5L,CAAL;AAEb,QAAIoN,wBAAwB,OAAOH,QAAQ,YAAY,CAACjE,MAAMC,QAAQgE,GAAd,GAAoB;AACxEG,6BAAuB;AAEvBzJ,UAAIuG,SAAQ;AACZ,UAAI+C,IAAI,YAAJ,GAAmB;AACnB/C,QAAAA,SAAQ2B,QAAQrJ,MAAMyK,IAAI,YAAJ,GAAmB,GAAGxF,UAApC;AACR,YAAI,CAACyC,QAAO;AAAA,iBAAO;QAFA;MAAA;AAKvBvG,UAAI0J,OAAO;AACX,UAAIJ,IAAI,WAAJ,GAAkB;AAClBI,eAAOxB,QAAQrJ,MAAMyK,IAAI,WAAJ,GAAkB,GAAG9E,QAAMT,UAAN,CAAnC;AACP,YAAI,CAAC2F,MAAM;AAAA,iBAAO;QAFA;MAAA;AAKtB1J,UAAIyG,YAAY;AAChB,UAAI6C,IAAI,YAAJ,GAAmB;AACnB7C,oBAAYyB,QAAQrJ,MAAMyK,IAAI,YAAJ,GAAmB,GAAGrF,SAApC;AACZ,YAAI,CAACwC,WAAW;AAAA,iBAAO;QAFJ;MAAA;AAKvBzH,UAAM2K,iBAAiB/C,SAASA,SAAShK,SAAS,CAA3B;AACvB+M,qBAAepD,QAAQA;AACvBoD,qBAAeD,OAAOA;AACtBC,qBAAelD,YAAYA;IAxB6C,OAyBrE;AACHzH,UAAM4K,UAAU1B,QAAQrJ,MAAMoJ,KAAK5L,CAAL,GAAS,GAAG8H,SAA1B;AAChB,UAAI,CAACyF,SAAS;AAAA,eAAO;MAFlB;AAIH5K,UAAM6E,OAAO+F,QAAQ5I,KAAK6C;AAC1B,UAAIA,SAAS,YAAYA,SAAS,WAAWA,SAAS,UAAUA,SAAS,iBAAzE;AACI,eAAOqE,QAAQC,MAAM,mEAAd;MANR;AAQHsB,6BAAuB;AACvB7C,eAAShF,KAAK;QAAA;QAAU2E,OAAO;QAAMmD,MAAM;QAAMjD,WAAW;MAA9C,CAAd;IATG;EA5BgC;AAyC3C,SAAO,IAAI8C,iBAAiB3C,QAArB;AA9D6C;2BAiExDyB,WAAA,SAAAA,UAASa,KAAmC;AACxClK,MAAM6K,kBAAA,SAAkB7C,SAAW;AAC/BhI,QAAM8K,mBAAmB9C,QAAQ4C,QAAQvB,SAASa,GAAzB;AACzB,QAAItB,OAAOkC,gBAAP,MAA6BvF,mBAAmB;AAChD,aAAO,IAAI6B,iBAAiB,IAAI0D,kBAAkB,MAAM,MAAM,IAAvD;IADyC;AAIpD,WAAO,IAAI1D,iBACHlH,UAAS4K,gBAAT,GACA,MACA9C,QAAQT,QAAQS,QAAQT,MAAM8B,SAASa,GAAvB,IAA8B,MAC9ClC,QAAQ0C,OAAO1C,QAAQ0C,KAAKrB,SAASa,GAAtB,EAA2BhC,KAAK,GAAhC,IAAuC,MACtDF,QAAQP,YAAYO,QAAQP,UAAU4B,SAASa,GAA3B,IAAkC,IALvD;EANwB;AAenC,SAAO,IAAIvC,YAAU,KAAKC,SAASrG,IAAIsJ,eAAlB,CAAd;AAjF6C;2BAoFxDvB,YAAA,SAAAA,WAAUa,IAA6B;AACnC,WAAsB,IAAA,GAAA,OAAA,KAAKvC,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAA1BI,QAAAA,UAAAA,KAAAA,CAAAA;AACPmC,OAAGnC,QAAQ4C,OAAX;AACA,QAAI5C,QAAQT,OAAO;AACf4C,SAAGnC,QAAQT,KAAX;IADe;AAGnB,QAAIS,QAAQ0C,MAAM;AACdP,SAAGnC,QAAQ0C,IAAX;IADc;AAGlB,QAAI1C,QAAQP,WAAW;AACnB0C,SAAGnC,QAAQP,SAAX;IADmB;EARU;AArFe;AAmGxD8B,iBAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AAGrB,SAAO;AAtG6C;AAyGxDpB,iBAAAA,UAAAA,YAAAA,SAAAA,aAAkC;AAC9BnI,MAAMoI,aAAa,CAAC,QAAD;AACnB,WAAsB,IAAA,GAAA,OAAA,KAAKR,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAA1BI,QAAAA,UAAAA,KAAAA,CAAAA;AACPI,eAAWxF,KAAKoF,QAAQ4C,QAAQzC,UAAhB,CAAhB;AACAnI,QAAMqI,UAAU,CAAA;AAChB,QAAIL,QAAQT,OAAO;AACfc,cAAQ,YAAR,IAAwBL,QAAQT,MAAMY,UAAd;IADT;AAGnB,QAAIH,QAAQ0C,MAAM;AACdrC,cAAQ,WAAR,IAAuBL,QAAQ0C,KAAKvC,UAAb;IADT;AAGlB,QAAIH,QAAQP,WAAW;AACnBY,cAAQ,YAAR,IAAwBL,QAAQP,UAAUU,UAAlB;IADL;AAGvBC,eAAWxF,KAAKyF,OAAhB;EAZiC;AAcrC,SAAOD;AAzH6C;;ACV7C,IAAM2C,kBAIjBvL,SAAAuL,iBAAYjL,OAAmB;AAC3B,OAAKkC,OAAOuD;AACZ,OAAKzF,QAAQA;AANsC;AASvD,gBAAOD,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAsC;AAC5E,MAAID,KAAKrL,WAAW,GAAG;AACnB,WAAOsL,QAAQC,MAAM,yBAAd;EADY;AAIvBnJ,MAAMyE,OAAOyE,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGlE,UAA1B;AACb,MAAI,CAACN,MAAL;AAAW,WAAOyE,QAAQC,MAAM,yBAAd;EAN0D;AAQ5E,SAAO,IAAI4B,gBAAgBtG,IAApB;AAjB4C;0BAoBvD4E,WAAA,SAAAA,UAASa,KAA8C;AACnDlK,MAAMgL,qBAAqB,KAAKlL,MAAMuJ,SAASa,GAApB;AAE3BlK,MAAMY,QAAQ0H,gBAAcT,WAAWmD,kBAAzB;AACd,MAAIpK,SAASsJ,IAAIe,iBAAjB;AAAkCrK,UAAM2H,YAAY2B,IAAIe,gBAAgBrM,QAAQoM,kBAA5B,IAAkD;EAJnD;AAMnD,SAAOpK;AA1B4C;0BA6BvD0I,YAAA,SAAAA,WAAUa,IAA6B;AACnCA,KAAG,KAAKrK,KAAR;AA9BmD;AAiCvDyJ,gBAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AAErB,SAAO;AAnC4C;AAsCvDpB,gBAAAA,UAAAA,YAAAA,SAAAA,aAAkC;AAC9B,SAAO;IAAC;IAAS,KAAKrI,MAAMqI,UAAX;EAAV;AAvC4C;;ACO3DnI,IAAM0J,UAAQ;EACV,cAAc1E;EACd,YAAYC;EACZ,aAAaH;EACb,aAAaC;AAJH;AAcd,IAAMmG,WAIF1L,SAAAA,UAAYwC,MAAYiH,MAAyB;AAC7C,OAAKjH,OAAOA;AACZ,OAAKiH,OAAOA;AANiB;AASjC,SAAOpJ,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAsC;AAC5E,MAAID,KAAKrL,SAAS,GAAlB;AACI,WAAOsL,QAAQC,MAAM,iCAAd;EAFiE;AAI5EnJ,MAAMyE,OAAgBwE,KAAK,CAAL;AAGtB,OAAKxE,SAAS,gBAAgBA,SAAS,gBAAgBwE,KAAKrL,WAAW,GAAvE;AACI,WAAOsL,QAAQC,MAAM,wBAAd;EARiE;AAU5EnJ,MAAMgC,OAAO0H,QAAMjF,IAAN;AAEbzE,MAAMiK,SAAS,CAAA;AACf,WAAS5M,IAAI,GAAGA,IAAI4L,KAAKrL,QAAQP,KAAK;AAClC2C,QAAMF,QAAQoJ,QAAQrJ,MAAMoJ,KAAK5L,CAAL,GAASA,GAAG8H,SAA1B;AACd,QAAI,CAACrF,OAAO;AAAA,aAAO;IAFe;AAGlCmK,WAAOrH,KAAK9C,KAAZ;EAHkC;AAMtC,SAAO,IAAIoL,SAASlJ,MAAMiI,MAAnB;AA5BsB;mBA+BjCZ,WAAA,SAAAA,UAASa,KAA8F;AACnG,MAAI,KAAKlI,KAAK6C,SAAS,WAAW;AAC9B,WAAOsG,QAAQ,KAAKlC,KAAK,CAAV,EAAaI,SAASa,GAAtB,CAAR;EADuB,WAEvB,KAAKlI,KAAK6C,SAAS,SAAS;AACnC7D,QAAIlB;AACJkB,QAAImI;AACJ,aAAkB,IAAA,GAAA,OAAA,KAAKF,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAlBqB,UAAAA,MAAAA,KAAAA,CAAAA;AACPxK,cAAQwK,IAAIjB,SAASa,GAAb;AACRf,MAAAA,SAAQ;AACR,UAAIrJ,iBAAiBP,SAAO;AACxB,eAAOO;MADiB,WAEjB,OAAOA,UAAU,UAAU;AAClCE,YAAMoL,IAAIlB,IAAImB,WAAWvL,KAAf;AACV,YAAIsL,GAAG;AAAA,iBAAOA;QAFoB;MAAA,WAG3B/E,MAAMC,QAAQxG,KAAd,GAAsB;AAC7B,YAAIA,MAAMlC,SAAS,KAAKkC,MAAMlC,SAAS,GAAG;AACtCuL,UAAAA,SAAQ,wBAAsBL,KAAKC,UAAUjJ,KAAf,IAAtB;QAD8B,OAEnC;AACHqJ,UAAAA,SAAQX,aAAa1I,MAAM,CAAN,GAAUA,MAAM,CAAN,GAAUA,MAAM,CAAN,GAAUA,MAAM,CAAN,CAA3C;QADL;AAGP,YAAI,CAACqJ,QAAO;AACR,iBAAO,IAAI5J,QAAOO,MAAM,CAAN,IAAiB,KAAMA,MAAM,CAAN,IAAiB,KAAMA,MAAM,CAAN,IAAiB,KAAMA,MAAM,CAAN,CAAhF;QADC;MANiB;IARR;AAmB7B,UAAM,IAAI0J,eAAaL,UAA8C,wCAAA,OAAOrJ,UAAU,WAAWA,QAAQ+I,OAAOC,KAAKC,UAAUjJ,KAAf,CAAP,KAAnG,GAAA;EAtB6B,WAuB5B,KAAKkC,KAAK6C,SAAS,UAAU;AACpC7D,QAAIJ,QAAQ;AACZ,aAAkB,MAAA,GAAA,SAAA,KAAKqI,MAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAM;AAAlBqB,UAAAA,QAAAA,OAAAA,GAAAA;AACP1J,cAAQ0J,MAAIjB,SAASa,GAAb;AACR,UAAItJ,UAAU,MAAM;AAAA,eAAO;MAFF;AAGzBZ,UAAMsL,MAAMC,OAAO3K,KAAP;AACZ,UAAI4K,MAAMF,GAAN,GAAJ;AAAgB;MAJS;AAKzB,aAAOA;IALkB;AAO7B,UAAM,IAAI9B,eAAkCV,uBAAAA,KAAKC,UAAUnI,KAAf,IAArB,aAAA;EATa,WAU7B,KAAKoB,KAAK6C,SAAS,aAAa;AAGvC,WAAO8C,YAAUE,WAAW4D,UAAc,KAAKxC,KAAK,CAAV,EAAaI,SAASa,GAAtB,CAAd,CAArB;EAHgC,WAIhC,KAAKlI,KAAK6C,SAAS,iBAAiB;AAC3C,WAAOyD,gBAAcT,WAAW4D,UAAc,KAAKxC,KAAK,CAAV,EAAaI,SAASa,GAAtB,CAAd,CAAzB;EADoC,OAExC;AACH,WAAOuB,UAAc,KAAKxC,KAAK,CAAV,EAAaI,SAASa,GAAtB,CAAd;EADJ;AAzEsB;mBA8EjCZ,YAAA,SAAAA,WAAUa,IAA6B;AACnC,OAAKlB,KAAKmB,QAAQD,EAAlB;AA/E6B;AAkFjCZ,SAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AACrB,SAAO,KAAKN,KAAKoB,MAAV,SAAgBC,KAAA;AAAA,WAAOA,IAAIf,cAAJ;EAAA,CAAvB;AAnFsB;AAsFjCpB,SAAAA,UAAAA,YAAAA,SAAAA,aAAkC;AAC9B,MAAI,KAAKnG,KAAK6C,SAAS,aAAa;AAChC,WAAO,IAAI0F,mBAAiB,CAAC;MAACK,SAAS,KAAK3B,KAAK,CAAV;MAAc1B,OAAO;MAAMmD,MAAM;MAAMjD,WAAW;IAA5D,CAAD,CAArB,EAA0FU,UAA1F;EADyB;AAIpC,MAAI,KAAKnG,KAAK6C,SAAS,iBAAiB;AACpC,WAAO,IAAIkG,kBAAgB,KAAK9B,KAAK,CAAV,CAApB,EAAkCd,UAAlC;EAD6B;AAIxCnI,MAAMoI,aAAa,CAAC,QAAM,KAAKpG,KAAK6C,IAAjB;AACnB,OAAKyE,UAAL,SAAeoC,OAAS;AAAEtD,eAAWxF,KAAK8I,MAAMvD,UAAN,CAAhB;EAAF,CAAxB;AACA,SAAOC;AAjGsB;AAqGrC,IAAA,aAAA;AC1HApI,IAAM2L,gBAAgB;EAAC;EAAW;EAAS;EAAc;AAAnC;AAEtB,IAAMC,oBAYFpM,SAAAA,qBAAc;AACV,OAAKqM,UAAW;AAChB,OAAKC,UAAU;AACf,OAAKC,eAAe;AACpB,OAAKC,mBAAmB;AACxB,OAAKC,mBAAmB,CAAA;AACxB,OAAKhB,kBAAkB;AACvB,OAAKiB,YAAY;AACjB,OAAKC,mBAAmB;AACxB,OAAKC,sBAAsB;AArBX;AAwBpBC,kBAAAA,UAAAA,KAAAA,SAAAA,KAAoB;AAChB,SAAO,KAAKP,WAAW,KAAKA,QAAQO,OAAOtM,SAAY,KAAK+L,QAAQO,KAAK;AAzBzD;AA4BpBC,kBAAAA,UAAAA,eAAAA,SAAAA,eAA8B;AAC1B,SAAO,KAAKR,UAAU,OAAO,KAAKA,QAAQ9J,SAAS,WAAW2J,cAAc,KAAKG,QAAQ9J,IAA3B,IAAmC,KAAK8J,QAAQ9J,OAAO;AA7BrG;AAgCpBuK,kBAAAA,UAAAA,WAAAA,SAAAA,WAAiC;AAC7B,SAAO,KAAKT,WAAW,cAAc,KAAKA,UAAU,KAAKA,QAAQS,WAAW;AAjC5D;AAoCpBC,kBAAAA,UAAAA,cAAAA,SAAAA,cAAsC;AAClC,SAAO,KAAKN;AArCI;AAwCpBO,kBAAAA,UAAAA,aAAAA,SAAAA,aAA8B;AAC1B,SAAQ,KAAKX,WAAW,KAAKA,QAAQW,cAAe,CAAA;AAzCpC;AA4CpBC,kBAAAA,UAAAA,qBAAAA,SAAAA,qBAA6B;AACzB,MAAI,KAAKP,oBAAoB,KAAKC,qBAAqB;AAEnDpM,QAAMoL,IAAI,KAAKgB,oBAAoBO;AACnC3M,QAAMuH,SAAQ,KAAK6E,oBAAoB7E;AACxB,QAAA,MAAA,KAAK4E;AAAbS,QAAAA,IAAAA,IAAAA;AAAGC,QAJyC,IAAA,IAAA;AAO7CC,QAAAA,KAAKF,IAAIrF,SAAQ6D,EAAE,CAAF;AACvBpL,QAAM+M,KAAKF,IAAItF,SAAQ6D,EAAE,CAAF;AAGjB4B,QAAAA,KAAK,KAAKZ,oBAAoBa,QAAQ,CAAjC;AACXjN,QAAMkN,KAAK,KAAKd,oBAAoBa,QAAQ,CAAjC;AAGLE,QAAAA,OAAQH,KAAKF,KAAKI,KAAKH;AAC7B,WAAOI;EAhB4C;AAmBvD,SAAO;AAhES;4BAmEpB9B,aAAA,SAAA,WAAWvL,OAAuB;AAC9BkB,MAAIoM,SAAS,KAAKnB,iBAAiBnM,KAAtB;AACb,MAAI,CAACsN,QAAQ;AACTA,aAAS,KAAKnB,iBAAiBnM,KAAtB,IAA+BP,QAAMM,MAAMC,KAAZ;EAD/B;AAGb,SAAOsN;AAxES;AA4ExB,IAAA,sBAAA;ACtEA,IAAMC,qBAQF7N,SAAAA,oBAAYiF,MAAczC,MAAYqH,YAAoBJ,MAAyB;AAC/E,OAAKxE,OAAOA;AACZ,OAAKzC,OAAOA;AACZ,OAAKsL,YAAYjE;AACjB,OAAKJ,OAAOA;AAZ2B;6BAe3CI,WAAA,SAAAA,UAASa,KAA+B;AACpC,SAAO,KAAKoD,UAAUpD,KAAK,KAAKjB,IAAzB;AAhBgC;6BAmB3CK,YAAA,SAAAA,WAAUa,IAA6B;AACnC,OAAKlB,KAAKmB,QAAQD,EAAlB;AApBuC;AAuB3CZ,mBAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AACrB,SAAO;AAxBgC;AA2B3CpB,mBAAAA,UAAAA,YAAAA,SAAAA,aAA0B;AACtB,SAAO,CAAC,KAAK1D,IAAN,EAAYC,OAAO,KAAKuE,KAAK1H,IAAI+I,SAAAA,KAAOA;AAAAA,WAAAA,IAAInC,UAAJ;EAAA,CAArB,CAAnB;AA5BgC;AA+B3C,mBAAOtI,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAsC;;AAC5ElJ,MAAMrB,KAAcsK,KAAK,CAAL;AACpBjJ,MAAMuN,aAAaF,mBAAmBG,YAAY7O,EAA/B;AACnB,MAAI,CAAC4O,YAAY;AACb,WAAOrE,QAAQC,MAA6BxK,yBAAAA,KAArC,6DAAoG,CAApG;EADM;AAKjBqB,MAAMgC,OAAOqE,MAAMC,QAAQiH,UAAd,IACTA,WAAW,CAAX,IAAgBA,WAAWvL;AAE/BhC,MAAMyN,qBAAqBpH,MAAMC,QAAQiH,UAAd,IACvB,CAAC;IAACA,WAAW,CAAX;IAAeA,WAAW,CAAX;EAAhB,CAAD,IACAA,WAAWG;AAEf1N,MAAM0N,YAAYD,mBAAmBE;IAAO,SAAAC,MAAEC;;AAC1C,aAAA,CAACxH,MAAMC,QAAQuH,SAAd;MACDA,UAAUjQ,WAAWqL,KAAKrL,SAAS;IAAA;;EAFrB;AAKlBoD,MAAI8M,mBAAoC;AAExC,WAAA,MAAA,GAAA,OAAiCJ,WAAAA,MAAAA,KAAAA,QAAAA,OAAAA,GAAW;AAA5C1N,QAAA,MAAA,KAAA,GAAA;AAAYjB,QAAAA,SAAAA,IAAAA,CAAAA;AAAQsK,QAAAA,aAAAA,IAAAA,CAAAA;AAGhByE,uBAAmB,IAAIC,iBAAe7E,QAAQ8E,UAAU9E,QAAQ+E,MAAM,MAAM/E,QAAQgF,KAAjE;AAIbC,QAAAA,aAAgC,CAAA;AACtCnN,QAAIoN,iBAAiB;AACrB,aAAS/Q,IAAI,GAAGA,IAAI4L,KAAKrL,QAAQP,KAAK;AAClC2C,UAAMsK,MAAMrB,KAAK5L,CAAL;AACZ2C,UAAMoJ,eAAe/C,MAAMC,QAAQvH,MAAd,IACjBA,OAAO1B,IAAI,CAAX,IACA0B,OAAOiD;AAEXhC,UAAMiK,SAAS6D,iBAAiBjO,MAAMyK,KAAK,IAAI6D,WAAWvQ,QAAQwL,YAAnD;AACf,UAAI,CAACa,QAAQ;AACTmE,yBAAiB;AACjB;MAFS;AAIbD,iBAAWvL,KAAKqH,MAAhB;IAXkC;AAatC,QAAImE,gBAAgB;AAAA;IAAA;AAMpB,QAAI/H,MAAMC,QAAQvH,MAAd,GAAuB;AACvB,UAAIA,OAAOnB,WAAWuQ,WAAWvQ,QAAQ;AACrCkQ,yBAAiB3E,MAAjB,cAAmCpK,OAAOnB,SAAnB,2BAAkDuQ,WAAWvQ,SAA7D,WAAA;AACvB;MAFqC;IADlB;AAO3B,aAASP,MAAI,GAAGA,MAAI8Q,WAAWvQ,QAAQP,OAAK;AACxC2C,UAAM6F,WAAWQ,MAAMC,QAAQvH,MAAd,IAAwBA,OAAO1B,GAAP,IAAY0B,OAAOiD;AAC5DhC,UAAMsK,QAAM6D,WAAW9Q,GAAX;AACZyQ,uBAAiBpJ,OAAOrH,MAAI,CAA5B,EAA+BuI,aAAaC,UAAUyE,MAAItI,IAA1D;IAHwC;AAM5C,QAAI8L,iBAAiBO,OAAOzQ,WAAW,GAAG;AACtC,aAAO,IAAIyP,mBAAmB1O,IAAIqD,MAAMqH,YAAU8E,UAA3C;IAD+B;EAzCF;AAgD5C,MAAIT,UAAU9P,WAAW,GAAG;AACxBsL,KAAAA,QAAAA,QAAQmF,QAAOzL,KAAAA,MAAf,OAAuBkL,iBAAiBO,MAAxC;EADwB,OAErB;AACHrO,QAAM6F,aAAW6H,UAAU9P,SAAS8P,YAAYD;AAChDzN,QAAMsO,aAAazI,WACdtE,IAAI,SAAAqM,MAAE7O;;AAAYwP,aAAAA,mBAAmBxP,OAAnB;IADJ,CAAA,EAEdmJ,KAAK,KAFS;AAInBlI,QAAMwO,cAAc,CAAA;AAGpB,aAASnR,MAAI,GAAGA,MAAI4L,KAAKrL,QAAQP,OAAK;AAClC2C,UAAMiK,WAASf,QAAQrJ,MAAMoJ,KAAK5L,GAAL,GAAS,IAAImR,YAAY5Q,MAAvC;AACf,UAAI,CAACqM,UAAQ;AAAA,eAAO;MAFc;AAGlCuE,kBAAY5L,KAAK1C,WAAS+J,SAAOjI,IAAhB,CAAjB;IAHkC;AAKtCkH,YAAQC,MAAR,gCAA4CmF,aAA9B,kBAAwDE,YAAYtG,KAAK,IAAjB,IAAxD,YAAA;EAdX;AAiBP,SAAO;AAxHgC;AA2H3C,mBAAOuG,WAAP,SAAA,SACIT,UACAR,cACF;AAEEH,qBAAmBG,cAAcA;AACjC,WAAW/I,QAAQ+I,cAAa;AAC5BQ,aAASvJ,IAAT,IAAiB4I;EADW;AAjIO;AAuI/C,SAASkB,mBAAmBV,WAA8B;AACtD,MAAIxH,MAAMC,QAAQuH,SAAd,GAA0B;AAC1B,WAAO,MAAIA,UAAUtM,IAAIrB,UAAd,EAAwBgI,KAAK,IAA7B,IAAJ;EADmB,OAEvB;AACH,WAAA,MAAWhI,WAAS2N,UAAU7L,IAAnB,IAAJ;EADJ;AAH+C;AAQ1D,IAAA,uBAAA;ACvJe,IAAM0M,qBAMjBlP,SAAAkP,oBAAYlI,eAA2BC,oBAAgCC,QAA2B;AAC9F,OAAK1E,OAAOqD;AACZ,OAAKqB,SAASA;AACd,OAAKF,gBAAgBA;AACrB,OAAKC,qBAAqBA;AAV4B;AAa1D,mBAAO5G,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAsC;AAC5E,MAAID,KAAKrL,WAAW,GAApB;AACI,WAAOsL,QAAQC,MAAM,wBAAd;EAFiE;AAI5EnJ,MAAMqI,UAAWY,KAAK,CAAL;AACjB,MAAI,OAAOZ,YAAY,YAAYhC,MAAMC,QAAQ+B,OAAd,GAAnC;AACI,WAAOa,QAAQC,MAAM,8CAAd;EANiE;AAQ5EnJ,MAAMwG,gBAAgB0C,QAAQrJ,MAC1BwI,QAAQ,gBAAR,MAA8BtI,SAAY,QAAQsI,QAAQ,gBAAR,GAA2B,GAAGrD,WAD9D;AAEtB,MAAI,CAACwB,eAAe;AAAA,WAAO;EAViD;AAY5ExG,MAAMyG,qBAAqByC,QAAQrJ,MAC/BwI,QAAQ,qBAAR,MAAmCtI,SAAY,QAAQsI,QAAQ,qBAAR,GAAgC,GAAGrD,WADnE;AAE3B,MAAI,CAACyB,oBAAoB;AAAA,WAAO;EAd4C;AAgB5EzF,MAAI0F,SAAS;AACb,MAAI2B,QAAQ,QAAR,GAAmB;AACnB3B,aAASwC,QAAQrJ,MAAMwI,QAAQ,QAAR,GAAmB,GAAGtD,UAApC;AACT,QAAI,CAAC2B,QAAQ;AAAA,aAAO;IAFD;EAAA;AAKvB,SAAO,IAAIgI,mBAAmBlI,eAAeC,oBAAoBC,MAA1D;AAnC+C;6BAsC1D2C,WAAA,SAAAA,UAASa,KAAkC;AACvC,SAAO,IAAI3D,WAAS,KAAKC,cAAc6C,SAASa,GAA5B,GAAkC,KAAKzD,mBAAmB4C,SAASa,GAAjC,GAAuC,KAAKxD,SAAS,KAAKA,OAAO2C,SAASa,GAArB,IAA4B,IAAhI;AAvC+C;6BA0C1DZ,YAAA,SAAAA,WAAUa,IAA6B;AACnCA,KAAG,KAAK3D,aAAR;AACA2D,KAAG,KAAK1D,kBAAR;AACA,MAAI,KAAKC,QAAQ;AACbyD,OAAG,KAAKzD,MAAR;EADa;AA7CqC;AAkD1D6C,mBAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AAKrB,SAAO;AAvD+C;AA0D1DpB,mBAAAA,UAAAA,YAAAA,SAAAA,aAAkC;AAC9BnI,MAAMqI,UAAU,CAAA;AAChBA,UAAQ,gBAAR,IAA4B,KAAK7B,cAAc2B,UAAnB;AAC5BE,UAAQ,qBAAR,IAAiC,KAAK5B,mBAAmB0B,UAAxB;AACjC,MAAI,KAAKzB,QAAQ;AACb2B,YAAQ,QAAR,IAAoB,KAAK3B,OAAOyB,UAAZ;EADP;AAGjB,SAAO;IAAC;IAAYE;EAAb;AAjE+C;;ACK9DrI,IAAM2O,SAAS;AAEf,SAASC,WAAWC,OAAYC,OAAyB;AACrDD,EAAAA,MAAK,CAAL,IAAUvR,KAAKyR,IAAIF,MAAK,CAAL,GAASC,MAAM,CAAN,CAAlB;AACVD,EAAAA,MAAK,CAAL,IAAUvR,KAAKyR,IAAIF,MAAK,CAAL,GAASC,MAAM,CAAN,CAAlB;AACVD,EAAAA,MAAK,CAAL,IAAUvR,KAAK0R,IAAIH,MAAK,CAAL,GAASC,MAAM,CAAN,CAAlB;AACVD,EAAAA,MAAK,CAAL,IAAUvR,KAAK0R,IAAIH,MAAK,CAAL,GAASC,MAAM,CAAN,CAAlB;AAJ2C;AAOzD,SAASG,iBAAiBC,KAAa;AACnC,UAAcA,MAAAA,OAAO;AADc;AAIvC,SAASC,iBAAiBC,KAAa;AACnC,UAAQ,MAAO,MAAM9R,KAAK+R,KAAK/R,KAAKgS,IAAIhS,KAAKiS,IAAIjS,KAAK+R,KAAK,IAAID,MAAM9R,KAAK+R,KAAK,GAAvC,CAAT,KAA0D;AADtD;AAIvC,SAASG,aAAaC,OAAaC,OAAa;AAC5C,MAAID,MAAM,CAAN,KAAYC,MAAM,CAAN,GAAU;AAAA,WAAO;EADW;AAE5C,MAAID,MAAM,CAAN,KAAYC,MAAM,CAAN,GAAU;AAAA,WAAO;EAFW;AAG5C,MAAID,MAAM,CAAN,KAAYC,MAAM,CAAN,GAAU;AAAA,WAAO;EAHW;AAI5C,MAAID,MAAM,CAAN,KAAYC,MAAM,CAAN,GAAU;AAAA,WAAO;EAJW;AAK5C,SAAO;AALqC;AAQhD,SAASC,mBAAmBC,GAAG1D,WAA4B;AACvDlM,MAAM4M,IAAIqC,iBAAiBW,EAAE,CAAF,CAAjB;AACV5P,MAAM6M,IAAIsC,iBAAiBS,EAAE,CAAF,CAAjB;AACV5P,MAAM6P,cAAcvS,KAAKwS,IAAI,GAAG5D,UAAUnJ,CAAtB;AACpB,SAAO;IAACzF,KAAKC,MAAMqP,IAAIiD,cAAclB,MAA7B;IAAsCrR,KAAKC,MAAMsP,IAAIgD,cAAclB,MAA7B;EAAvC;AAJgD;AAO3D,SAASoB,WAAWH,GAAGI,IAAIC,IAAI;AAC3BjQ,MAAMkQ,KAAKN,EAAE,CAAF,IAAOI,GAAG,CAAH;AAClBhQ,MAAMmQ,KAAKP,EAAE,CAAF,IAAOI,GAAG,CAAH;AAClBhQ,MAAMoQ,KAAKR,EAAE,CAAF,IAAOK,GAAG,CAAH;AAClBjQ,MAAMqQ,KAAKT,EAAE,CAAF,IAAOK,GAAG,CAAH;AAClB,SAAQC,KAAKG,KAAKD,KAAKD,OAAO,KAAOD,KAAKE,MAAM,KAAOD,KAAKE,MAAM;AALvC;AAQ/B,SAASC,aAAaV,GAAGI,IAAIC,IAAI;AAC7B,SAASD,GAAG,CAAH,IAAQJ,EAAE,CAAF,MAAWK,GAAG,CAAH,IAAQL,EAAE,CAAF,KAAWA,EAAE,CAAF,KAAQK,GAAG,CAAH,IAAQD,GAAG,CAAH,MAAUJ,EAAE,CAAF,IAAOI,GAAG,CAAH,MAAUC,GAAG,CAAH,IAAQD,GAAG,CAAH,KAASA,GAAG,CAAH;AAD9E;AAKjC,SAASO,mBAAmBC,OAAOC,OAAO;AACtCzP,MAAI0P,SAAS;AACb,WAASrT,IAAI,GAAGsT,MAAMF,MAAM7S,QAAQP,IAAIsT,KAAKtT,KAAK;AAC9C2C,QAAM4Q,OAAOH,MAAMpT,CAAN;AACb,aAASwT,IAAI,GAAGC,OAAOF,KAAKhT,QAAQiT,IAAIC,OAAO,GAAGD,KAAK;AACnD,UAAId,WAAWS,OAAOI,KAAKC,CAAL,GAASD,KAAKC,IAAI,CAAT,CAA3B,GAAyC;AAAA,eAAO;MADD;AAEnD,UAAIP,aAAaE,OAAOI,KAAKC,CAAL,GAASD,KAAKC,IAAI,CAAT,CAA7B,GAAJ;AAA+CH,iBAAS,CAACA;MAFN;IAAA;EAFT;AAOlD,SAAOA;AAT+B;AAY1C,SAASK,oBAAoBP,OAAOQ,UAAU;AAC1C,WAAS3T,IAAI,GAAGA,IAAI2T,SAASpT,QAAQP,KAAK;AACtC,QAAIkT,mBAAmBC,OAAOQ,SAAS3T,CAAT,CAA1B,GAAwC;AAAA,aAAO;IADb;EAAA;AAG1C,SAAO;AAJmC;AAO9C,SAAS4T,KAAKC,IAAIC,IAAI;AAClB,SAAQD,GAAG,CAAH,IAAQC,GAAG,CAAH,IAAQD,GAAG,CAAH,IAAQC,GAAG,CAAH;AADd;AAKtB,SAAUC,SAASpB,IAAIC,IAAIoB,IAAIC,IAAI;AAEzBpB,MAAAA,KAAKF,GAAG,CAAH,IAAQqB,GAAG,CAAH;AACnBrR,MAAMmQ,KAAKH,GAAG,CAAH,IAAQqB,GAAG,CAAH;AACnBrR,MAAMoQ,KAAKH,GAAG,CAAH,IAAQoB,GAAG,CAAH;AACnBrR,MAAMqQ,KAAKJ,GAAG,CAAH,IAAQoB,GAAG,CAAH;AACnBrR,MAAMuR,KAAKD,GAAG,CAAH,IAAQD,GAAG,CAAH;AACnBrR,MAAMwR,KAAKF,GAAG,CAAH,IAAQD,GAAG,CAAH;AACnBrR,MAAMyR,OAAQvB,KAAKsB,KAAKD,KAAKpB;AAC7BnQ,MAAM0R,OAAStB,KAAKoB,KAAKD,KAAKlB;AAC9B,MAAKoB,OAAO,KAAKC,OAAO,KAAOD,OAAO,KAAKC,OAAO,GAAI;AAAA,WAAO;EAV9B;AAW/B,SAAO;AAXwB;AAcnC,SAASC,kBAAkB/R,GAAGD,GAAGyL,GAAGwG,GAAG;AAInC5R,MAAM6R,UAAU;IAAClS,EAAE,CAAF,IAAOC,EAAE,CAAF;IAAMD,EAAE,CAAF,IAAOC,EAAE,CAAF;EAArB;AAChBI,MAAM8R,UAAU;IAACF,EAAE,CAAF,IAAOxG,EAAE,CAAF;IAAMwG,EAAE,CAAF,IAAOxG,EAAE,CAAF;EAArB;AAChB,MAAI6F,KAAKa,SAASD,OAAd,MAA2B,GAAG;AAAA,WAAO;EANN;AAWnC,MAAIT,SAASxR,GAAGD,GAAGyL,GAAGwG,CAAlB,KAAwBR,SAAShG,GAAGwG,GAAGhS,GAAGD,CAAlB,GAAsB;AAAA,WAAO;EAXtB;AAYnC,SAAO;AAZ4B;AAevC,SAASoS,qBAAqB/B,IAAIC,IAAI+B,SAAS;AAC3C,WAAA,IAAA,GAAA,OAAmBA,SAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAS;AAAjBpB,QAAAA,OAAAA,KAAAA,CAAAA;AAEP,aAASC,IAAI,GAAGA,IAAID,KAAKhT,SAAS,GAAG,EAAEiT,GAAG;AACtC,UAAIc,kBAAkB3B,IAAIC,IAAIW,KAAKC,CAAL,GAASD,KAAKC,IAAI,CAAT,CAAnC,GAAiD;AACjD,eAAO;MAD0C;IADf;EAFlB;AAQ5B,SAAO;AAToC;AAY/C,SAASoB,wBAAwBC,MAAMF,SAAS;AAE5C,WAAS3U,IAAI,GAAGA,IAAI6U,KAAKtU,QAAQ,EAAEP,GAAG;AAClC,QAAI,CAACkT,mBAAmB2B,KAAK7U,CAAL,GAAS2U,OAA5B,GAAsC;AACvC,aAAO;IADgC;EADT;AAOtC,WAAS3U,MAAI,GAAGA,MAAI6U,KAAKtU,SAAS,GAAG,EAAEP,KAAG;AACtC,QAAI0U,qBAAqBG,KAAK7U,GAAL,GAAS6U,KAAK7U,MAAI,CAAT,GAAa2U,OAA3C,GAAqD;AACrD,aAAO;IAD8C;EADnB;AAK1C,SAAO;AAdqC;AAiBhD,SAASG,yBAAyBD,MAAMlB,UAAU;AAC9C,WAAS3T,IAAI,GAAGA,IAAI2T,SAASpT,QAAQP,KAAK;AACtC,QAAI4U,wBAAwBC,MAAMlB,SAAS3T,CAAT,CAA9B,GAA4C;AAAA,aAAO;IADjB;EAAA;AAG1C,SAAO;AAJuC;AAOlD,SAAS+U,eAAeC,aAAaxD,OAAY3C,WAA4B;AACzElM,MAAMgS,UAAU,CAAA;AAChB,WAAS3U,IAAI,GAAGA,IAAIgV,YAAYzU,QAAQP,KAAK;AACzC2C,QAAM4Q,OAAO,CAAA;AACb,aAASC,IAAI,GAAGA,IAAIwB,YAAYhV,CAAZ,EAAeO,QAAQiT,KAAK;AAC5C7Q,UAAM8O,QAAQa,mBAAmB0C,YAAYhV,CAAZ,EAAewT,CAAf,GAAmB3E,SAAtC;AACd0C,iBAAWC,OAAMC,KAAjB;AACA8B,WAAKhO,KAAKkM,KAAV;IAH4C;AAKhDkD,YAAQpP,KAAKgO,IAAb;EAPyC;AAS7C,SAAOoB;AAXkE;AAc7E,SAASM,gBAAgBD,aAAaxD,OAAM3C,WAA4B;AACpElM,MAAMgR,WAAW,CAAA;AACjB,WAAS3T,IAAI,GAAGA,IAAIgV,YAAYzU,QAAQP,KAAK;AACzC2C,QAAMgS,UAAUI,eAAeC,YAAYhV,CAAZ,GAAgBwR,OAAM3C,SAArC;AAChB8E,aAASpO,KAAKoP,OAAd;EAFyC;AAI7C,SAAOhB;AAN6D;AASxE,SAASuB,YAAY3C,GAAGf,OAAM2D,UAAUC,WAAW;AAC/C,MAAI7C,EAAE,CAAF,IAAO4C,SAAS,CAAT,KAAe5C,EAAE,CAAF,IAAO4C,SAAS,CAAT,GAAa;AAC1CxS,QAAM0S,gBAAgBD,YAAY;AAClCzR,QAAI2R,QAAS/C,EAAE,CAAF,IAAO4C,SAAS,CAAT,IAAcE,gBAAiB,CAACD,YAAaD,SAAS,CAAT,IAAc5C,EAAE,CAAF,IAAO8C,gBAAiBD,YAAY;AACnH,QAAIE,UAAU,GAAG;AACbA,cAAS/C,EAAE,CAAF,IAAO4C,SAAS,CAAT,IAAcE,gBAAiB,CAACD,YAAaD,SAAS,CAAT,IAAc5C,EAAE,CAAF,IAAO8C,gBAAiBD,YAAY;IADlG;AAGjB7C,MAAE,CAAF,KAAQ+C;EANkC;AAQ9C/D,aAAWC,OAAMe,CAAjB;AAT+C;AAYnD,SAASgD,UAAU/D,OAAM;AACrBA,EAAAA,MAAK,CAAL,IAAUA,MAAK,CAAL,IAAUgE;AACpBhE,EAAAA,MAAK,CAAL,IAAUA,MAAK,CAAL,IAAU;AAFC;AAKzB,SAASiE,cAAcvG,WAAUwG,WAAWP,UAAUtG,WAA4B;AAC9ElM,MAAMyS,YAAYnV,KAAKwS,IAAI,GAAG5D,UAAUnJ,CAAtB,IAA2B4L;AAC7C3O,MAAMgT,SAAS;IAAC9G,UAAUU,IAAI+B;IAAQzC,UAAUW,IAAI8B;EAArC;AACf3O,MAAMiT,aAAa,CAAA;AACnB,MAAI,CAAC1G,WAAU;AAAA,WAAO0G;EAJwD;AAK9E,WAAA,MAAA,GAAA,SAAqB1G,WAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAU;AAApB2G,QAAAA,SAAAA,OAAAA,GAAAA;AACP,aAAA,IAAA,GAAA,OAAoBA,QAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAQ;AAAjB1C,UAAAA,QAAAA,KAAAA,CAAAA;AACPxQ,UAAM4P,IAAI;QAACY,MAAM5D,IAAIoG,OAAO,CAAP;QAAWxC,MAAM3D,IAAImG,OAAO,CAAP;MAAhC;AACVT,kBAAY3C,GAAGmD,WAAWP,UAAUC,SAApC;AACAQ,iBAAWrQ,KAAKgN,CAAhB;IAHwB;EADD;AAO/B,SAAOqD;AAZuE;AAelF,SAASE,aAAa5G,WAAU6G,UAAUZ,UAAUtG,WAA4B;AAC5ElM,MAAMyS,YAAYnV,KAAKwS,IAAI,GAAG5D,UAAUnJ,CAAtB,IAA2B4L;AAC7C3O,MAAMgT,SAAS;IAAC9G,UAAUU,IAAI+B;IAAQzC,UAAUW,IAAI8B;EAArC;AACf3O,MAAMqT,YAAY,CAAA;AAClB,MAAI,CAAC9G,WAAU;AAAA,WAAO8G;EAJsD;AAK5E,WAAA,MAAA,GAAA,SAAmB9G,WAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAU;AAAlB2F,QAAAA,OAAAA,OAAAA,GAAAA;AACPlS,QAAMsT,WAAW,CAAA;AACjB,aAAA,IAAA,GAAA,OAAoBpB,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAf1B,UAAAA,QAAAA,KAAAA,CAAAA;AACPxQ,UAAM4P,IAAI;QAACY,MAAM5D,IAAIoG,OAAO,CAAP;QAAWxC,MAAM3D,IAAImG,OAAO,CAAP;MAAhC;AACVpE,iBAAWwE,UAAUxD,CAArB;AACA0D,eAAS1Q,KAAKgN,CAAd;IAHsB;AAK1ByD,cAAUzQ,KAAK0Q,QAAf;EAPyB;AAS7B,MAAIF,SAAS,CAAT,IAAcA,SAAS,CAAT,KAAeX,YAAY,GAAG;AAC5CG,cAAUQ,QAAV;AACA,aAAA,MAAA,GAAA,SAAmBC,WAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAW;AAAnBnB,UAAAA,SAAAA,OAAAA,GAAAA;AACP,eAAA,MAAA,GAAA,SAAgBA,QAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAM;AAAXtC,YAAAA,MAAAA,OAAAA,GAAAA;AACP2C,oBAAY3C,KAAGwD,UAAUZ,UAAUC,SAAnC;MADkB;IADI;EAFc;AAQhD,SAAOY;AAtBqE;AAyBhF,SAASE,qBAAqBrJ,KAAwBsJ,iBAAkC;AACpFxT,MAAM+S,YAAY;IAACF;IAAUA;IAAU;IAAW;EAAhC;AAClB7S,MAAMwS,WAAW;IAACK;IAAUA;IAAU;IAAW;EAAhC;AAEjB7S,MAAMkM,YAAYhC,IAAIsC,YAAJ;AAClB,MAAI,CAACN,WAAW;AACZ,WAAO;EADK;AAIhB,MAAIsH,gBAAgBxR,SAAS,WAAW;AACpChC,QAAMyT,cAAcrB,eAAeoB,gBAAgBnB,aAAaG,UAAUtG,SAAtD;AACpBlM,QAAMiT,aAAaH,cAAc5I,IAAIqC,SAAJ,GAAgBwG,WAAWP,UAAUtG,SAAnD;AACnB,QAAI,CAACsD,aAAauD,WAAWP,QAAxB,GAAmC;AAAA,aAAO;IAHX;AAKpC,aAAA,IAAA,GAAA,OAAoBS,YAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAY;AAArBzC,UAAAA,QAAAA,KAAAA,CAAAA;AACP,UAAI,CAACD,mBAAmBC,OAAOiD,WAA1B,GAAwC;AAAA,eAAO;MADxB;IAAA;EALI;AASxC,MAAID,gBAAgBxR,SAAS,gBAAgB;AACzChC,QAAM0T,eAAepB,gBAAgBkB,gBAAgBnB,aAAaG,UAAUtG,SAAvD;AACrBlM,QAAMiT,eAAaH,cAAc5I,IAAIqC,SAAJ,GAAgBwG,WAAWP,UAAUtG,SAAnD;AACnB,QAAI,CAACsD,aAAauD,WAAWP,QAAxB,GAAmC;AAAA,aAAO;IAHN;AAKzC,aAAA,MAAA,GAAA,SAAoBS,cAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAY;AAArBzC,UAAAA,UAAAA,OAAAA,GAAAA;AACP,UAAI,CAACO,oBAAoBP,SAAOkD,YAA3B,GAA0C;AAAA,eAAO;MAD1B;IAAA;EALS;AAU7C,SAAO;AA5B6E;AA+BxF,SAASC,oBAAoBzJ,KAAwBsJ,iBAAkC;AACnFxT,MAAMoT,WAAW;IAACP;IAAUA;IAAU;IAAW;EAAhC;AACjB7S,MAAMwS,WAAW;IAACK;IAAUA;IAAU;IAAW;EAAhC;AAEjB7S,MAAMkM,YAAYhC,IAAIsC,YAAJ;AAClB,MAAI,CAACN,WAAW;AACZ,WAAO;EADK;AAIhB,MAAIsH,gBAAgBxR,SAAS,WAAW;AACpChC,QAAMyT,cAAcrB,eAAeoB,gBAAgBnB,aAAaG,UAAUtG,SAAtD;AACpBlM,QAAMqT,YAAYF,aAAajJ,IAAIqC,SAAJ,GAAgB6G,UAAUZ,UAAUtG,SAAjD;AAClB,QAAI,CAACsD,aAAa4D,UAAUZ,QAAvB,GAAkC;AAAA,aAAO;IAHV;AAKpC,aAAA,IAAA,GAAA,OAAmBa,WAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAW;AAAnBnB,UAAAA,OAAAA,KAAAA,CAAAA;AACP,UAAI,CAACD,wBAAwBC,MAAMuB,WAA9B,GAA4C;AAAA,eAAO;MAD9B;IAAA;EALM;AASxC,MAAID,gBAAgBxR,SAAS,gBAAgB;AACzChC,QAAM0T,eAAepB,gBAAgBkB,gBAAgBnB,aAAaG,UAAUtG,SAAvD;AACrBlM,QAAMqT,cAAYF,aAAajJ,IAAIqC,SAAJ,GAAgB6G,UAAUZ,UAAUtG,SAAjD;AAClB,QAAI,CAACsD,aAAa4D,UAAUZ,QAAvB,GAAkC;AAAA,aAAO;IAHL;AAKzC,aAAA,MAAA,GAAA,SAAmBa,aAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAW;AAAnBnB,UAAAA,SAAAA,OAAAA,GAAAA;AACP,UAAI,CAACC,yBAAyBD,QAAMwB,YAA/B,GAA8C;AAAA,eAAO;MADhC;IAAA;EALW;AAS7C,SAAO;AA3B4E;AA8BvF,IAAME,SAKFpU,SAAAA,QAAYqU,SAAkBC,YAA6B;AACvD,OAAK9R,OAAOgD;AACZ,OAAK6O,UAAUA;AACf,OAAKC,aAAaA;AARS;AAW/B,OAAOjU,QAAP,SAAAA,OAAaoJ,MAA6BC,SAAkC;AACxE,MAAID,KAAKrL,WAAW,GAApB;AACI,WAAOsL,QAAQC,MAAM,mEAAgEF,KAAKrL,SAAS,KAA9E,WAAA;EAF+C;AAGxE,MAAI6K,QAAQQ,KAAK,CAAL,CAAR,GAAkB;AAClBjJ,QAAM6T,UAAW5K,KAAK,CAAL;AACjB,QAAI4K,QAAQ7R,SAAS,qBAAqB;AACtC,eAAS3E,IAAI,GAAGA,IAAIwW,QAAQE,SAASnW,QAAQ,EAAEP,GAAG;AAC9C2C,YAAMgC,OAAO6R,QAAQE,SAAS1W,CAAjB,EAAoBkP,SAASvK;AAC1C,YAAIA,SAAS,aAAaA,SAAS,gBAAgB;AAC/C,iBAAO,IAAI4R,OAAOC,SAASA,QAAQE,SAAS1W,CAAjB,EAAoBkP,QAAxC;QADwC;MAFL;IADZ,WAO/BsH,QAAQ7R,SAAS,WAAW;AACnChC,UAAMgC,SAAO6R,QAAQtH,SAASvK;AAC9B,UAAIA,WAAS,aAAaA,WAAS,gBAAgB;AAC/C,eAAO,IAAI4R,OAAOC,SAASA,QAAQtH,QAA5B;MADwC;IAFhB,WAK5BsH,QAAQ7R,SAAU,aAAa6R,QAAQ7R,SAAS,gBAAgB;AACvE,aAAO,IAAI4R,OAAOC,SAASA,OAApB;IADgE;EAdzD;AAkBtB,SAAO3K,QAAQC,MAAM,wFAAd;AAhCoB;iBAmC/BE,WAAA,SAAAA,UAASa,KAAiC;AACtC,MAAIA,IAAIqC,SAAJ,KAAkB,QAAQrC,IAAIsC,YAAJ,KAAqB,MAAM;AACrD,QAAItC,IAAIoC,aAAJ,MAAuB,SAAS;AAChC,aAAOiH,qBAAqBrJ,KAAK,KAAK4J,UAA/B;IADyB,WAEzB5J,IAAIoC,aAAJ,MAAuB,cAAc;AAC5C,aAAOqH,oBAAoBzJ,KAAK,KAAK4J,UAA9B;IADqC;EAHK;AAOzD,SAAO;AA3CoB;AA8C/BxK,OAAAA,UAAAA,YAAAA,SAAAA,aAAY;AA9CmB;AAgD/BC,OAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AACrB,SAAO;AAjDoB;AAoD/BpB,OAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9B,SAAO;IAAC;IAAU,KAAK0L;EAAhB;AArDoB;AA0DnC,IAAA,WAAA;ACtVA,SAASG,kBAAkB1U,GAAwB;AAC/C,MAAIA,aAAa+N,sBAAoB;AACjC,QAAI/N,EAAEmF,SAAS,SAASnF,EAAE2J,KAAKrL,WAAW,GAAG;AACzC,aAAO;IADkC,WAElC0B,EAAEmF,SAAS,iBAAiB;AACnC,aAAO;IAD4B,WAE5BnF,EAAEmF,SAAS,SAASnF,EAAE2J,KAAKrL,WAAW,GAAG;AAChD,aAAO;IADyC,WAGhD0B,EAAEmF,SAAS,gBACXnF,EAAEmF,SAAS,mBACXnF,EAAEmF,SAAS,MACb;AACE,aAAO;IADT,WAES,WAAWwP,KAAK3U,EAAEmF,IAAlB,GAAyB;AAChC,aAAO;IADyB;EAbH;AAkBrC,MAAInF,aAAasU,UAAQ;AACrB,WAAO;EADc;AAIzB5S,MAAI2C,SAAS;AACbrE,IAAEgK,UAAF,SAAYgB,KAAO;AACf,QAAI3G,UAAU,CAACqQ,kBAAkB1J,GAAlB,GAAwB;AAAE3G,eAAS;IAAX;EADxB,CAAnB;AAGA,SAAOA;AA3BwC;AA8BnD,SAASuQ,gBAAgB5U,GAAwB;AAC7C,MAAIA,aAAa+N,sBAAoB;AACjC,QAAI/N,EAAEmF,SAAS,iBAAiB;AAC5B,aAAO;IADqB;EADC;AAKrCzD,MAAI2C,SAAS;AACbrE,IAAEgK,UAAF,SAAYgB,KAAO;AACf,QAAI3G,UAAU,CAACuQ,gBAAgB5J,GAAhB,GAAsB;AAAE3G,eAAS;IAAX;EADtB,CAAnB;AAGA,SAAOA;AAVsC;AAajD,SAASwQ,yBAAyB7U,GAAemN,aAAoC;AACjF,MAAInN,aAAa+N,wBAAsBZ,YAAW7N,QAAQU,EAAEmF,IAArB,KAA8B,GAAG;AAAE,WAAO;EAAT;AACxEzD,MAAI2C,SAAS;AACbrE,IAAEgK,UAAF,SAAagB,KAAQ;AACjB,QAAI3G,UAAU,CAACwQ,yBAAyB7J,KAAKmC,WAA9B,GAA2C;AAAE9I,eAAS;IAAX;EADzC,CAArB;AAGA,SAAOA;AAN0E;AC1CrF,IAAMyQ,MAKF5U,SAAAA,KAAYiF,MAAc4P,iBAA6B;AACnD,OAAKrS,OAAOqS,gBAAgBrS;AAC5B,OAAKyC,OAAOA;AACZ,OAAK4P,kBAAkBA;AARC;AAW5B,IAAOxU,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAqC;AAC3E,MAAID,KAAKrL,WAAW,KAAK,OAAOqL,KAAK,CAAL,MAAY,UAA5C;AACI,WAAOC,QAAQC,MAAM,gEAAd;EAFgE;AAI3EnJ,MAAMyE,OAAOwE,KAAK,CAAL;AACb,MAAI,CAACC,QAAQgF,MAAMvJ,IAAIF,IAAlB,GAAyB;AAC1B,WAAOyE,QAAQC,MAAM,uBAAqB1E,OAArB,mBAA0CA,OAA1C,sEAAoH,CAAlI;EADmB;AAI9B,SAAO,IAAI2P,IAAI3P,MAAMyE,QAAQgF,MAAMpM,IAAI2C,IAAlB,CAAd;AApBiB;cAuB5B4E,WAAA,SAAAA,UAASa,KAA6B;AAClC,SAAO,KAAKmK,gBAAgBhL,SAASa,GAA9B;AAxBiB;AA2B5BZ,IAAAA,UAAAA,YAAAA,SAAAA,aAAY;AA3BgB;AA6B5BC,IAAAA,UAAAA,gBAAAA,SAAAA,iBAAyB;AACrB,SAAO;AA9BiB;AAiC5BpB,IAAAA,UAAAA,YAAAA,SAAAA,cAA2B;AACvB,SAAO;IAAC;IAAO,KAAK1D;EAAb;AAlCiB;AAsChC,IAAA,QAAA;ACvBA,IAAMsJ,iBAaFvO,SAAAuO,gBACIC,UACAC,MACA7E,cACA8E,OACAG,QACF;;WAJwB,CAAA;AAEtB,MAAA,UAAA;AAAA,YAAe,IAAI/J,QAAJ;;aACe,CAAA;AAE9B,OAAK0J,WAAWA;AAChB,OAAKC,OAAOA;AACZ,OAAK9J,MAAM8J,KAAK1M,IAAI+S,SAAAA,MAAAA;AAAAA,WAAYA,MAAAA,OAAJ;EAAA,CAAjB,EAA8BpM,KAAK,EAAnC;AACX,OAAKgG,QAAQA;AACb,OAAKG,SAASA;AACd,OAAKjF,eAAeA;AAzBP;yBAmCjBvJ,QAAA,SAAAA,QACI0U,MACAC,OACApL,cACA5E,UACA6D,SACW;;cADgD,CAAA;AAE3D,MAAImM,OAAO;AACP,WAAO,KAAK9P,OAAO8P,OAAOpL,cAAc5E,QAAjC,EAA2CiQ,OAAOF,MAAMlM,OAAxD;EADA;AAGX,SAAO,KAAKoM,OAAOF,MAAMlM,OAAlB;AA7CM;AAgDjBoM,eAAAA,UAAAA,SAAAA,SAAAA,OAAOF,MAAalM,SAAuE;AACvF,MAAIkM,SAAS,QAAQ,OAAOA,SAAS,YAAY,OAAOA,SAAS,aAAa,OAAOA,SAAS,UAAU;AACpGA,WAAO;MAAC;MAAWA;IAAZ;EAD6F;AAIxG,WAASG,SAASzK,SAAQjI,MAAM2S,gBAA8C;AAC1E,QAAIA,mBAAmB,UAAU;AAC7B,aAAO,IAAI5K,YAAU/H,MAAM,CAACiI,OAAD,CAApB;IADsB,WAEtB0K,mBAAmB,UAAU;AACpC,aAAO,IAAIzJ,WAASlJ,MAAM,CAACiI,OAAD,CAAnB;IAD6B,OAEjC;AACH,aAAOA;IADJ;EALmE;AAU9E,MAAI5D,MAAMC,QAAQiO,IAAd,GAAqB;AACrB,QAAIA,KAAK3W,WAAW,GAAG;AACnB,aAAO,KAAKuL,MAAM,kGAAX;IADY;AAIvBnJ,QAAMrB,KAAK4V,KAAK,CAAL;AACX,QAAI,OAAO5V,OAAO,UAAU;AACxB,WAAKwK,MAAM,iDAA+C,OAAOxK,KAAjE,oEAAuI,CAAvI;AACA,aAAO;IAFiB;AAK5BqB,QAAM4U,OAAO,KAAK5G,SAASrP,EAAd;AACb,QAAIiW,MAAM;AACN5T,UAAIiJ,SAAS2K,KAAK/U,MAAM0U,MAAM,IAAjB;AACb,UAAI,CAACtK,QAAQ;AAAA,eAAO;MAFd;AAIN,UAAI,KAAKb,cAAc;AACnBpJ,YAAM6F,WAAW,KAAKuD;AACtBpJ,YAAM6U,SAAS5K,OAAOjI;AAUtB,aAAK6D,SAAShB,SAAS,YAAYgB,SAAShB,SAAS,YAAYgB,SAAShB,SAAS,aAAagB,SAAShB,SAAS,YAAYgB,SAAShB,SAAS,YAAYgQ,OAAOhQ,SAAS,SAAS;AACjLoF,mBAASyK,SAASzK,QAAQpE,UAAUwC,QAAQsM,kBAAkB,QAArD;QADwK,YAEzK9O,SAAShB,SAAS,WAAWgB,SAAShB,SAAS,eAAegB,SAAShB,SAAS,qBAAqBgQ,OAAOhQ,SAAS,WAAWgQ,OAAOhQ,SAAS,WAAW;AACnKoF,mBAASyK,SAASzK,QAAQpE,UAAUwC,QAAQsM,kBAAkB,QAArD;QAD0J,WAE5J,KAAK/O,aAAaC,UAAUgP,MAA5B,GAAqC;AAC5C,iBAAO;QADqC;MAhB7B;AAyBvB,UAAI,EAAE5K,kBAAkBjB,cAAaiB,OAAOjI,KAAK6C,SAAS,mBAAoBiQ,WAAW7K,MAAX,GAAoB;AAC9FjK,YAAM+U,KAAK,IAAInJ,oBAAJ;AACX,YAAI;AACA3B,mBAAS,IAAIjB,UAAQiB,OAAOjI,MAAMiI,OAAOZ,SAAS0L,EAAhB,CAAzB;QADT,SAEKzV,GAAP;AACE,eAAK6J,MAAM7J,EAAE8E,OAAb;AACA,iBAAO;QAFC;MAJkF;AAUlG,aAAO6F;IAvCD;AA0CV,WAAO,KAAKd,MAA6BxK,yBAAAA,KAAlC,6DAAiG,CAAjG;EAtDc,WAuDd,OAAO4V,SAAS,aAAa;AACpC,WAAO,KAAKpL,MAAM,8CAAX;EAD6B,WAE7B,OAAOoL,SAAS,UAAU;AACjC,WAAO,KAAKpL,MAAM,uDAAX;EAD0B,OAE9B;AACH,WAAO,KAAKA,MAAL,kCAA2C,OAAOoL,OAAlD,WAAA;EADJ;AA1HM;AAuIjB7P,eAAAA,UAAAA,SAAAA,SAAAA,QAAO8P,OAAepL,cAAsB5E,UAAwD;AAChGxE,MAAMiO,OAAO,OAAOuG,UAAU,WAAW,KAAKvG,KAAKvJ,OAAO8P,KAAjB,IAA0B,KAAKvG;AACxEjO,MAAMkO,QAAQ1J,WAAW,KAAK0J,MAAMxJ,OAAOF,QAAlB,IAA8B,KAAK0J;AAC5D,SAAO,IAAIH,eACP,KAAKC,UACLC,MACA7E,gBAAgB,MAChB8E,OACA,KAAKG,MALF;AA1IM;yBA0JjBlF,QAAA,SAAA,MAAMA,SAAuC;;;;AACzCnJ,MAAMmE,MAAM,KAAG,KAAKA,MAAMjC,KAAKX,IAAL,SAASyT,GAAA;AAAA,WAASA,MAAAA,IAAlB;EAAA,CAAA,EAAwB9M,KAAK,EAA7B;AAC1B,OAAKmG,OAAOzL,KAAK,IAAIsB,eAAaC,KAAKgF,OAAtB,CAAjB;AA5Ja;AAmKjBvD,eAAAA,UAAAA,eAAAA,SAAAA,eAAaC,UAAgBC,GAAkB;AAC3C9F,MAAMmJ,SAAQvD,aAAaC,UAAUC,CAAvB;AACd,MAAIqD,QAAJ;AAAW,SAAKA,MAAMA,MAAX;EAFgC;AAG3C,SAAOA;AAtKM;AA0KrB,IAAA,mBAhMA;AAkMA,SAAS2L,WAAW1S,YAAwB;AACxC,MAAIA,sBAAsBgS,OAAK;AAC3B,WAAOU,WAAW1S,WAAWiS,eAAtB;EADoB,WAEpBjS,sBAAsBiL,wBAAsBjL,WAAWqC,SAAS,SAAS;AAChF,WAAO;EADyE,WAEzErC,sBAAsBsM,sBAAoB;AAIjD,WAAO;EAJ0C,WAK1CtM,sBAAsBwR,UAAQ;AACrC,WAAO;EAD8B;AAIzC5T,MAAMiV,mBAAmB7S,sBAAsB8I,cAC3C9I,sBAAsB2H;AAE1B/I,MAAIkU,mBAAmB;AACvB9S,aAAWkH,UAAX,SAAqBoC,OAAS;AAQ1B,QAAIuJ,kBAAkB;AAClBC,yBAAmBA,oBAAoBJ,WAAWpJ,KAAX;IADrB,OAEf;AACHwJ,yBAAmBA,oBAAoBxJ,iBAAiB1C;IADrD;EAVmB,CAA9B;AAcA,MAAI,CAACkM,kBAAkB;AACnB,WAAO;EADY;AAIvB,SAAOlB,kBAAkB5R,UAAlB,KACH+R,yBAAyB/R,YAAY;IAAC;IAAQ;IAAmB;IAAiB;IAAuB;IAAe;IAAuB;IAAS;EAAnH,CAArC;AArCoC;ACtLrC,SAAS+S,0BAA0BlU,OAAsBnB,OAAuB;AACnFE,MAAMiE,YAAYhD,MAAMrD,SAAS;AACjCoD,MAAIoU,aAAa;AACjBpU,MAAIqU,aAAapR;AACjBjD,MAAIsU,eAAe;AACnBtU,MAAIuU,cAAcC;AAElB,SAAOJ,cAAcC,YAAY;AAC7BC,mBAAehY,KAAK0M,OAAOoL,aAAaC,cAAc,CAAvC;AACfE,mBAAetU,MAAMqU,YAAN;AACfE,gBAAYvU,MAAMqU,eAAe,CAArB;AAEZ,QAAIC,gBAAgBzV,OAAO;AACvB,UAAIwV,iBAAiBrR,aAAanE,QAAQ0V,WAAW;AACjD,eAAOF;MAD0C;AAIrDF,mBAAaE,eAAe;IALL,WAMhBC,eAAezV,OAAO;AAC7BuV,mBAAaC,eAAe;IADC,OAE1B;AACH,YAAM,IAAI9L,eAAa,wBAAjB;IADH;EAbsB;AAkBjC,SAAO;AAzB4E;ACAvF,IAAMiM,OAOFjW,SAAAiW,MAAYzT,MAAYlC,OAAmBmB,OAAc;AACrD,OAAKe,OAAOA;AACZ,OAAKlC,QAAQA;AAEb,OAAK4V,SAAS,CAAA;AACd,OAAKC,UAAU,CAAA;AACf,WAAA,IAAA,GAAA,OAAkC1U,OAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAO;AAAzCjB,QAAA,MAAA,KAAA,CAAA;AAAY4V,QAAAA,QAAAA,IAAAA,CAAAA;AAAOxT,QAAAA,aAAAA,IAAAA,CAAAA;AACf,SAAKsT,OAAO9S,KAAKgT,KAAjB;AACA,SAAKD,QAAQ/S,KAAKR,UAAlB;EAFqC;AAbhB;AAmB7B,KAAOvC,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAgC;AACtE,MAAID,KAAKrL,SAAS,IAAI,GAAG;AACrB,WAAOsL,QAAQC,MAAM,oDAAiDF,KAAKrL,SAAS,KAA/D,GAAA;EADA;AAIzB,OAAKqL,KAAKrL,SAAS,KAAK,MAAM,GAAG;AAC7B,WAAOsL,QAAQC,MAAM,uCAAd;EADsB;AAIjCnJ,MAAMF,QAAQoJ,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGnE,UAA1B;AACd,MAAI,CAAChF,OAAO;AAAA,WAAO;EAVmD;AAYtEE,MAAMiB,QAAe,CAAA;AAErBD,MAAI6U,aAAoB;AACxB,MAAI3M,QAAQE,gBAAgBF,QAAQE,aAAavE,SAAS,SAAS;AAC/DgR,iBAAa3M,QAAQE;EAD0C;AAInE,WAAS/L,IAAI,GAAGA,IAAI4L,KAAKrL,QAAQP,KAAK,GAAG;AACrC2C,QAAM4V,QAAQvY,MAAM,IAAI,YAAY4L,KAAK5L,CAAL;AACpC2C,QAAMY,QAAQqI,KAAK5L,IAAI,CAAT;AAEd2C,QAAM8V,WAAWzY;AACjB2C,QAAM+V,WAAW1Y,IAAI;AAErB,QAAI,OAAOuY,UAAU,UAAU;AAC3B,aAAO1M,QAAQC,MAAM,2IAA2I2M,QAAzJ;IADoB;AAI/B,QAAI7U,MAAMrD,UAAUqD,MAAMA,MAAMrD,SAAS,CAArB,EAAwB,CAAxB,KAA8BgY,OAAO;AACrD,aAAO1M,QAAQC,MAAM,6GAA6G2M,QAA3H;IAD8C;AAIzD9V,QAAMiK,SAASf,QAAQrJ,MAAMe,OAAOmV,UAAUF,UAA/B;AACf,QAAI,CAAC5L,QAAQ;AAAA,aAAO;IAhBiB;AAiBrC4L,iBAAaA,cAAc5L,OAAOjI;AAClCf,UAAM2B,KAAK;MAACgT;MAAO3L;IAAR,CAAX;EAlBqC;AAqBzC,SAAO,IAAIwL,KAAKI,YAAY/V,OAAOmB,KAA5B;AA3DkB;eA8D7BoI,WAAA,SAAAA,WAASa,KAA6B;AAClClK,MAAM0V,SAAS,KAAKA;AACpB1V,MAAM2V,UAAU,KAAKA;AAErB,MAAID,OAAO9X,WAAW,GAAG;AACrB,WAAO+X,QAAQ,CAAR,EAAWtM,SAASa,GAApB;EADc;AAIzBlK,MAAMY,QAAU,KAAKd,MAAMuJ,SAASa,GAApB;AAChB,MAAItJ,SAAS8U,OAAO,CAAP,GAAW;AACpB,WAAOC,QAAQ,CAAR,EAAWtM,SAASa,GAApB;EADa;AAIxBlK,MAAMgW,YAAYN,OAAO9X;AACzB,MAAIgD,SAAS8U,OAAOM,YAAY,CAAnB,GAAuB;AAChC,WAAOL,QAAQK,YAAY,CAApB,EAAuB3M,SAASa,GAAhC;EADyB;AAIpClK,MAAMwU,QAAQW,0BAA0BO,QAAQ9U,KAAlC;AACd,SAAO+U,QAAQnB,KAAR,EAAenL,SAASa,GAAxB;AAjFkB;eAoF7BZ,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKrK,KAAR;AACA,WAAyB,IAAA,GAAA,OAAA,KAAK6V,SAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAS;AAA5BvT,QAAAA,aAAAA,KAAAA,CAAAA;AACP+H,OAAG/H,UAAH;EADmC;AAtFd;AA2F7BmH,KAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO,KAAKoM,QAAQtL,MAAb,SAAmB4L,KAAA;AAAA,WAAOA,IAAI1M,cAAJ;EAAA,CAA1B;AA5FkB;AA+F7BpB,KAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9BnI,MAAMoI,aAAa;IAAC;IAAQ,KAAKtI,MAAMqI,UAAX;EAAT;AACnB,WAAS9K,IAAI,GAAGA,IAAI,KAAKqY,OAAO9X,QAAQP,KAAK;AACzC,QAAIA,IAAI,GAAG;AACP+K,iBAAWxF,KAAK,KAAK8S,OAAOrY,CAAZ,CAAhB;IADO;AAGX+K,eAAWxF,KAAK,KAAK+S,QAAQtY,CAAb,EAAgB8K,UAAhB,CAAhB;EAJyC;AAM7C,SAAOC;AAvGkB;AA2GjC,IAAA,SAAA;IC3FA8N,aAAiBC;AAEjB,SAASA,WAAWC,KAAKC,KAAKC,KAAKC,KAAK;AAEpC,OAAKC,KAAK,IAAMJ;AAChB,OAAKK,KAAK,KAAOH,MAAMF,OAAO,KAAKI;AACnC,OAAKE,KAAK,IAAM,KAAKF,KAAK,KAAKC;AAE/B,OAAKE,KAAK,IAAMN;AAChB,OAAKO,KAAK,KAAOL,MAAMF,OAAO,KAAKM;AACnC,OAAKE,KAAK,IAAM,KAAKF,KAAK,KAAKC;AAE/B,OAAKR,MAAMA;AACX,OAAKC,MAAME;AACX,OAAKD,MAAMA;AACX,OAAKC,MAAMA;AAbyB;AAgBxCJ,WAAWW,UAAUC,eAAe,SAASjR,GAAG;AAE5C,WAAc4Q,KAAAA,KAAK5Q,IAAI,KAAK2Q,MAAM3Q,IAAI,KAAK0Q,MAAM1Q;AAFL;AAKhDqQ,WAAWW,UAAUE,eAAe,SAASlR,GAAG;AAC5C,WAAS,KAAK+Q,KAAK/Q,IAAI,KAAK8Q,MAAM9Q,IAAI,KAAK6Q,MAAM7Q;AADL;AAIhDqQ,WAAWW,UAAUG,yBAAyB,SAASnR,GAAG;AACtD,UAAc,IAAA,KAAK4Q,KAAK5Q,IAAI,IAAM,KAAK2Q,MAAM3Q,IAAI,KAAK0Q;AADA;AAI1DL,WAAWW,UAAUI,cAAc,SAAStK,GAAGuK,SAAS;AACpD,MAAI,OAAOA,YAAY,aAAaA;AAAAA,cAAU;EADM;AAGpD,MAAIC,KAAIC,KAAIC,KAAIlH,IAAI/S;AAGpB,OAAKia,MAAK1K,GAAGvP,IAAI,GAAGA,IAAI,GAAGA,KAAK;AAE5B+S,SAAK,KAAK2G,aAAaO,GAAlB,IAAwB1K;AAC7B,QAAItP,KAAKia,IAAInH,EAAT,IAAe+G,SAAS;AAAA,aAAOG;IAHP;AAK5B,QAAIE,KAAK,KAAKP,uBAAuBK,GAA5B;AACT,QAAIha,KAAKia,IAAIC,EAAT,IAAe,MAAnB;AAAyB;IANG;AAQ5BF,IAAAA,MAAKA,MAAKlH,KAAKoH;EARa;AAYhCJ,EAAAA,MAAK;AACLC,EAAAA,MAAK;AACLC,EAAAA,MAAK1K;AAEL,MAAI0K,MAAKF,KAAI;AAAA,WAAOA;EAtBgC;AAuBpD,MAAIE,MAAKD,KAAI;AAAA,WAAOA;EAvBgC;AAyBpD,SAAOD,MAAKC,KAAI;AAEZjH,SAAK,KAAK2G,aAAaO,GAAlB;AACL,QAAIha,KAAKia,IAAInH,KAAKxD,CAAd,IAAmBuK,SAAS;AAAA,aAAOG;IAH3B;AAKZ,QAAI1K,IAAIwD,IAAI;AACRgH,MAAAA,MAAKE;IADG,OAEL;AACHD,MAAAA,MAAKC;IADF;AAIPA,IAAAA,OAAMD,MAAKD,OAAM,MAAMA;EAXX;AAehB,SAAOE;AAxC6C;AA2CxDnB,WAAWW,UAAUW,QAAQ,SAAS7K,GAAGuK,SAAS;AAC9C,SAAO,KAAKH,aAAa,KAAKE,YAAYtK,GAAGuK,OAApB,CAAlB;AADuC;AClG3C,SAASvN,OAAOhK,GAAWD,GAAWmG,GAAmB;AAC5D,SAAQlG,KAASkG,IAAAA,KAAOnG,IAAImG;AADgC;AAIzD,SAAS4R,MAAMC,MAAaC,IAAW9R,GAAkB;AAC5D,SAAO,IAAIvG,QACPqK,OAAO+N,KAAKlY,GAAGmY,GAAGnY,GAAGqG,CAArB,GACA8D,OAAO+N,KAAKjY,GAAGkY,GAAGlY,GAAGoG,CAArB,GACA8D,OAAO+N,KAAKhY,GAAGiY,GAAGjY,GAAGmG,CAArB,GACA8D,OAAO+N,KAAK/X,GAAGgY,GAAGhY,GAAGkG,CAArB,CAJG;AADqD;AASzD,SAASN,MAAMmS,MAAqBC,IAAmB9R,GAA0B;AACpF,SAAO6R,KAAKpW,IAAL,SAAUqQ,GAAGvU,GAAM;AACtB,WAAOuM,OAAOgI,GAAGgG,GAAGva,CAAH,GAAOyI,CAAjB;EADe,CAAnB;AAD6E;;;;;;;ACIxF9F,IAAM6X,KAAK;AAAX7X,IACI8X,KAAK;AADT9X,IAEI+X,KAAK;AAFT/X,IAGIoX,KAAK,IAAI;AAHbpX,IAIIqX,KAAK,IAAI;AAJbrX,IAKIsX,KAAK,IAAID,KAAKA;AALlBrX,IAMIgY,KAAKX,KAAKA,KAAKA;AANnBrX,IAOIiY,YAAU3a,KAAK+R,KAAK;AAPxBrP,IAQIkY,UAAU,MAAM5a,KAAK+R;AAGzB,SAAS8I,QAAQrS,GAAW;AACxB,SAAOA,IAAIkS,KAAK1a,KAAKwS,IAAIhK,GAAG,IAAI,CAAhB,IAAqBA,IAAIwR,KAAKF;AADtB;AAI5B,SAASgB,QAAQtS,GAAW;AACxB,SAAOA,IAAIuR,KAAKvR,IAAIA,IAAIA,IAAIwR,MAAMxR,IAAIsR;AADd;AAI5B,SAASiB,QAAQzL,GAAW;AACxB,SAAO,OAAOA,KAAK,WAAY,QAAQA,IAAI,QAAQtP,KAAKwS,IAAIlD,GAAG,IAAI,GAAhB,IAAuB;AADlD;AAI5B,SAAS0L,QAAQ1L,GAAW;AACxBA,OAAK;AACL,SAAOA,KAAK,UAAUA,IAAI,QAAQtP,KAAKwS,KAAKlD,IAAI,SAAS,OAAO,GAA9B;AAFV;AAM5B,SAAS2L,SAASC,UAA2B;AACzCxY,MAAML,IAAI2Y,QAAQE,SAAS/Y,CAAjB,GACNG,IAAI0Y,QAAQE,SAAS9Y,CAAjB,GACJN,IAAIkZ,QAAQE,SAAS7Y,CAAjB,GACJiN,IAAIuL,SAAS,YAAYxY,IAAI,YAAYC,IAAI,YAAYR,KAAKyY,EAA1D,GACJhL,IAAIsL,SAAqBxY,YAAAA,IAAI,YAAYC,IAAI,WAAYR,KAAK0Y,EAA1D,GACJ/U,IAAIoV,SAAS,YAAYxY,IAAI,WAAYC,IAAI,YAAYR,KAAK2Y,EAA1D;AAER,SAAO;IACH3Y,GAAG,MAAMyN,IAAI;IACbjN,GAAG,OAAOgN,IAAIC;IACdlN,GAAG,OAAOkN,IAAI9J;IACd9D,OAAOuZ,SAAS5Y;EAJb;AARkC;AAgB7C,SAAS6Y,SAASC,UAA2B;AACzC1X,MAAI6L,KAAK6L,SAAStZ,IAAI,MAAM,KACxBwN,IAAIpB,MAAMkN,SAAS9Y,CAAf,IAAoBiN,IAAIA,IAAI6L,SAAS9Y,IAAI,KAC7CmD,IAAIyI,MAAMkN,SAAS/Y,CAAf,IAAoBkN,IAAIA,IAAI6L,SAAS/Y,IAAI;AACjDkN,MAAIiL,KAAKM,QAAQvL,CAAR;AACTD,MAAIiL,KAAKO,QAAQxL,CAAR;AACT7J,MAAIgV,KAAKK,QAAQrV,CAAR;AACT,SAAO,IAAIxD;IACP8Y,QAAQ,YAAYzL,IAAI,YAAYC,IAAI,YAAY9J,CAApD;;IACAsV,QAAQ,YAAazL,IAAI,YAAYC,IAAI,WAAY9J,CAArD;IACAsV,QAAQ,YAAYzL,IAAI,YAAYC,IAAI,YAAY9J,CAApD;IACA2V,SAASzZ;EAJN;AAPkC;AAe7C,SAAS0Z,eAAehB,MAAgBC,IAAc9R,GAAqB;AACvE,SAAO;IACH1G,GAAGwZ,OAAkBjB,KAAKvY,GAAGwY,GAAGxY,GAAG0G,CAAhC;IACHlG,GAAGgZ,OAAkBjB,KAAK/X,GAAGgY,GAAGhY,GAAGkG,CAAhC;IACHnG,GAAGiZ,OAAkBjB,KAAKhY,GAAGiY,GAAGjY,GAAGmG,CAAhC;IACH7G,OAAO2Z,OAAkBjB,KAAK1Y,OAAO2Y,GAAG3Y,OAAO6G,CAAxC;EAJJ;AADgE;AAU3E,SAAS+S,SAASL,UAA2B;AACnC,MAAA,MAAYD,SAASC,QAAT;AAAXpZ,MAAAA,IAAAA,IAAAA;AAAGQ,MAAAA,IAAAA,IAAAA;AAAGD,MAD4B,IAAA,IAAA;AAEzCK,MAAM7B,IAAIb,KAAKwb,MAAMnZ,GAAGC,CAAd,IAAmBsY;AAC7B,SAAO;IACH/Z,GAAGA,IAAI,IAAIA,IAAI,MAAMA;IACrBiN,GAAG9N,KAAKyb,KAAKnZ,IAAIA,IAAID,IAAIA,CAAtB;IAFA;IAIHV,OAAOuZ,SAAS5Y;EAJb;AAHkC;AAW7C,SAASoZ,SAASC,UAA2B;AACzCjZ,MAAM7B,IAAI8a,SAAS9a,IAAI8Z,WACnB7M,IAAI6N,SAAS7N,GACbhM,IAAI6Z,SAAS7Z;AACjB,SAAOqZ,SAAS;IAAA;IAEZ7Y,GAAGtC,KAAK4b,IAAI/a,CAAT,IAAciN;IACjBzL,GAAGrC,KAAK6b,IAAIhb,CAAT,IAAciN;IACjBnM,OAAOga,SAASha;EAJJ,CAAT;AAJkC;AAY7C,SAASma,eAAexZ,GAAWD,GAAWmG,GAAW;AACrD9F,MAAM4R,IAAIjS,IAAIC;AACd,SAAOA,IAAIkG,KAAK8L,IAAI,OAAOA,IAAI,OAAOA,IAAI,MAAMtU,KAAKC,MAAMqU,IAAI,GAAf,IAAsBA;AAFjB;AAKzD,SAASyH,eAAe1B,MAAgBC,IAAc9R,GAAqB;AACvE,SAAO;IACH3H,GAAGib,eAAezB,KAAKxZ,GAAGyZ,GAAGzZ,GAAG2H,CAA7B;IACHsF,GAAGwN,OAAkBjB,KAAKvM,GAAGwM,GAAGxM,GAAGtF,CAAhC;IACH1G,GAAGwZ,OAAkBjB,KAAKvY,GAAGwY,GAAGxY,GAAG0G,CAAhC;IACH7G,OAAO2Z,OAAkBjB,KAAK1Y,OAAO2Y,GAAG3Y,OAAO6G,CAAxC;EAJJ;AADgE;AASpE9F,IAAMsZ,MAAM;EACfC,SAAShB;EACTiB,SAASf;EACTgB,aAAad;AAHE;AAMZ3Y,IAAM0Z,MAAM;EACfH,SAASV;EACTW,SAASR;EACTS,aAAaJ;AAHE;ACjHnB,IAAMM,cASFna,SAAAma,aAAY3X,MAAY4X,UAAiEC,eAAkC/Z,OAAmBmB,OAAc;AACxJ,OAAKe,OAAOA;AACZ,OAAK4X,WAAWA;AAChB,OAAKC,gBAAgBA;AACrB,OAAK/Z,QAAQA;AAEb,OAAK4V,SAAS,CAAA;AACd,OAAKC,UAAU,CAAA;AACf,WAAA,IAAA,GAAA,OAAkC1U,OAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAO;AAAzCjB,QAAA,MAAA,KAAA,CAAA;AAAY4V,QAAAA,QAAAA,IAAAA,CAAAA;AAAOxT,QAAAA,aAAAA,IAAAA,CAAAA;AACf,SAAKsT,OAAO9S,KAAKgT,KAAjB;AACA,SAAKD,QAAQ/S,KAAKR,UAAlB;EAFqC;AAjBT;AAuBpC,YAAO0X,sBAAAA,SAAAA,oBAAoBD,eAAkC/Z,OAAeia,OAAeC,OAAuB;AAC9GhZ,MAAI8E,IAAI;AACR,MAAI+T,cAAcpV,SAAS,eAAe;AACtCqB,QAAImU,yBAAyBna,OAAO+Z,cAAcvW,MAAMyW,OAAOC,KAA3D;EADkC,WAE/BH,cAAcpV,SAAS,UAAU;AACxCqB,QAAImU,yBAAyBna,OAAO,GAAGia,OAAOC,KAA1C;EADoC,WAEjCH,cAAcpV,SAAS,gBAAgB;AAC9CzE,QAAMoL,IAAIyO,cAAcK;AACxBla,QAAMma,KAAK,IAAIhE,WAAW/K,EAAE,CAAF,GAAMA,EAAE,CAAF,GAAMA,EAAE,CAAF,GAAMA,EAAE,CAAF,CAAjC;AACXtF,QAAIqU,GAAG1C,MAAMwC,yBAAyBna,OAAO,GAAGia,OAAOC,KAA1C,CAAT;EAH0C;AAKlD,SAAOlU;AAlCyB;AAqCpC,YAAOjG,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAuC;AACxE0Q,MAAAA,WAAAA,KAAAA,CAAAA;AAAUC,MAAAA,gBAAAA,KAAAA,CAAAA;AAAe/Z,MAAAA,QAAAA,KAAAA,CAAAA;AAAO,MADwC,OAAA,KAAA,MAAA,CAAA;AAG7E,MAAI,CAACuG,MAAMC,QAAQuT,aAAd,KAAgCA,cAAcjc,WAAW,GAAG;AAC7D,WAAOsL,QAAQC,MAAM,8CAA8C,CAA5D;EADsD;AAIjE,MAAI0Q,cAAc,CAAd,MAAqB,UAAU;AAC/BA,oBAAgB,EAACpV,MAAM,SAAP;EADe,WAExBoV,cAAc,CAAd,MAAqB,eAAe;AAC3C7Z,QAAMsD,OAAOuW,cAAc,CAAd;AACb,QAAI,OAAOvW,SAAS,UAChB;AAAA,aAAO4F,QAAQC,MAAM,sDAAsD,GAAG,CAAvE;IAHgC;AAI3C0Q,oBAAgB;MACZpV,MAAM;MADM;IAAA;EAJ2B,WAQpCoV,cAAc,CAAd,MAAqB,gBAAgB;AAC5C7Z,QAAMka,gBAAgBL,cAAcrb,MAAM,CAApB;AACtB,QACI0b,cAActc,WAAW,KACzBsc,cAAc/T,KAAd,SAAmBL,GAAA;AAAA,aAAK,OAAOA,MAAM,YAAYA,IAAI,KAAKA,IAAI;IAA9D,CAAA,GACF;AACE,aAAOoD,QAAQC,MAAM,2FAA2F,CAAzG;IADT;AAIF0Q,oBAAgB;MACZpV,MAAM;MACNyV;IAFY;EAT4B,OAazC;AACH,WAAOhR,QAAQC,MAAM,gCAA8BN,OAAOgR,cAAc,CAAd,CAAP,GAA4B,GAAG,CAA3E;EADJ;AAIP,MAAI5Q,KAAKrL,SAAS,IAAI,GAAG;AACrB,WAAOsL,QAAQC,MAAM,oDAAiDF,KAAKrL,SAAS,KAA/D,GAAA;EADA;AAIzB,OAAKqL,KAAKrL,SAAS,KAAK,MAAM,GAAG;AAC7B,WAAOsL,QAAQC,MAAM,uCAAd;EADsB;AAIjCrJ,UAAQoJ,QAAQrJ,MAAMC,OAAO,GAAGgF,UAAxB;AACR,MAAI,CAAChF,OAAO;AAAA,WAAO;EA3C0D;AA6C7EE,MAAMiB,QAAe,CAAA;AAErBD,MAAI6U,aAAoB;AACxB,MAAI+D,aAAa,qBAAqBA,aAAa,mBAAmB;AAClE/D,iBAAa5Q;EADqD,WAE3DiE,QAAQE,gBAAgBF,QAAQE,aAAavE,SAAS,SAAS;AACtEgR,iBAAa3M,QAAQE;EADiD;AAI1E,WAAS/L,IAAI,GAAGA,IAAI+c,KAAKxc,QAAQP,KAAK,GAAG;AACrC2C,QAAM4V,QAAQwE,KAAK/c,CAAL;AACd2C,QAAMY,QAAQwZ,KAAK/c,IAAI,CAAT;AAEd2C,QAAM8V,WAAWzY,IAAI;AACrB2C,QAAM+V,WAAW1Y,IAAI;AAErB,QAAI,OAAOuY,UAAU,UAAU;AAC3B,aAAO1M,QAAQC,MAAM,kJAAkJ2M,QAAhK;IADoB;AAI/B,QAAI7U,MAAMrD,UAAUqD,MAAMA,MAAMrD,SAAS,CAArB,EAAwB,CAAxB,KAA8BgY,OAAO;AACrD,aAAO1M,QAAQC,MAAM,oHAAoH2M,QAAlI;IAD8C;AAIzD9V,QAAMiK,SAASf,QAAQrJ,MAAMe,OAAOmV,UAAUF,UAA/B;AACf,QAAI,CAAC5L,QAAQ;AAAA,aAAO;IAhBiB;AAiBrC4L,iBAAaA,cAAc5L,OAAOjI;AAClCf,UAAM2B,KAAK;MAACgT;MAAO3L;IAAR,CAAX;EAlBqC;AAqBzC,MAAI4L,WAAWhR,SAAS,YACpBgR,WAAWhR,SAAS,WACpB,EACIgR,WAAWhR,SAAS,WACpBgR,WAAWpQ,SAASZ,SAAS,YAC7B,OAAOgR,WAAWnQ,MAAM,WAE9B;AACE,WAAOwD,QAAQC,MAAM,UAAQjJ,WAAS2V,UAAT,IAAtB,yBAAA;EADT;AAIF,SAAO,IAAI8D,YAAY9D,YAAa+D,UAAgBC,eAAe/Z,OAAOmB,KAAnE;AA3HyB;sBA8HpCoI,WAAA,SAAAA,WAASa,KAA+B;AACpClK,MAAM0V,SAAS,KAAKA;AACpB1V,MAAM2V,UAAU,KAAKA;AAErB,MAAID,OAAO9X,WAAW,GAAG;AACrB,WAAO+X,QAAQ,CAAR,EAAWtM,SAASa,GAApB;EADc;AAIzBlK,MAAMY,QAAU,KAAKd,MAAMuJ,SAASa,GAApB;AAChB,MAAItJ,SAAS8U,OAAO,CAAP,GAAW;AACpB,WAAOC,QAAQ,CAAR,EAAWtM,SAASa,GAApB;EADa;AAIxBlK,MAAMgW,YAAYN,OAAO9X;AACzB,MAAIgD,SAAS8U,OAAOM,YAAY,CAAnB,GAAuB;AAChC,WAAOL,QAAQK,YAAY,CAApB,EAAuB3M,SAASa,GAAhC;EADyB;AAIpClK,MAAMwU,QAAQW,0BAA0BO,QAAQ9U,KAAlC;AACdZ,MAAM+Z,QAAQrE,OAAOlB,KAAP;AACdxU,MAAMga,QAAQtE,OAAOlB,QAAQ,CAAf;AACdxU,MAAM8F,IAAI6T,YAAYG,oBAAoB,KAAKD,eAAejZ,OAAOmZ,OAAOC,KAAlE;AAEVha,MAAMqa,cAAc1E,QAAQnB,KAAR,EAAenL,SAASa,GAAxB;AACpBlK,MAAMsa,cAAc3E,QAAQnB,QAAQ,CAAhB,EAAmBnL,SAASa,GAA5B;AAEpB,MAAI,KAAK0P,aAAa,eAAe;AACjC,WAAQH,YAAY,KAAKzX,KAAK6C,KAAKtG,YAAf,CAAZ,EAAgD8b,aAAaC,aAAaxU,CAA3E;EAD0B,WAE1B,KAAK8T,aAAa,mBAAmB;AAC5C,WAAOF,IAAIF,QAAQE,IAAID,YAAYC,IAAIH,QAAQc,WAAZ,GAA0BX,IAAIH,QAAQe,WAAZ,GAA0BxU,CAApE,CAAZ;EADqC,OAEzC;AACH,WAAOwT,IAAIE,QAAQF,IAAIG,YAAYH,IAAIC,QAAQc,WAAZ,GAA0Bf,IAAIC,QAAQe,WAAZ,GAA0BxU,CAApE,CAAZ;EADJ;AA5JyB;sBAiKpCwD,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKrK,KAAR;AACA,WAAyB,IAAA,GAAA,OAAA,KAAK6V,SAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAS;AAA5BvT,QAAAA,aAAAA,KAAAA,CAAAA;AACP+H,OAAG/H,UAAH;EADmC;AAnKP;AAwKpCmH,YAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO,KAAKoM,QAAQtL,MAAb,SAAmB4L,KAAA;AAAA,WAAOA,IAAI1M,cAAJ;EAAA,CAA1B;AAzKyB;AA4KpCpB,YAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9BnH,MAAI6Y;AACJ,MAAI,KAAKA,cAAcpV,SAAS,UAAU;AACtCoV,oBAAgB,CAAC,QAAD;EADsB,WAE/B,KAAKA,cAAcpV,SAAS,eAAe;AAClD,QAAK,KAAKoV,cAAcvW,SAAS,GAAG;AAChCuW,sBAAgB,CAAC,QAAD;IADgB,OAE7B;AACHA,sBAAgB;QAAC;QAAe,KAAKA,cAAcvW;MAAnC;IADb;EAH2C,OAM/C;AACHuW,oBAAgB,CAAC,cAAD,EAAkBnV,OAAO,KAAKmV,cAAcK,aAA5C;EADb;AAIPla,MAAMoI,aAAa;IAAC,KAAKwR;IAAUC;IAAe,KAAK/Z,MAAMqI,UAAX;EAA/B;AAEnB,WAAS9K,IAAI,GAAGA,IAAI,KAAKqY,OAAO9X,QAAQP,KAAK;AACzC+K,eAAWxF,KACP,KAAK8S,OAAOrY,CAAZ,GACA,KAAKsY,QAAQtY,CAAb,EAAgB8K,UAAhB,CAFJ;EADyC;AAM7C,SAAOC;AAlMyB;AAyOxC,SAAS6R,yBAAyBna,OAAOwD,MAAMiX,YAAYC,YAAY;AACnExa,MAAMya,aAAaD,aAAaD;AAChCva,MAAM0a,WAAW5a,QAAQya;AAEzB,MAAIE,eAAe,GAAG;AAClB,WAAO;EADW,WAEXnX,SAAS,GAAG;AACnB,WAAOoX,WAAWD;EADC,OAEhB;AACH,YAAQnd,KAAKwS,IAAIxM,MAAMoX,QAAf,IAA2B,MAAMpd,KAAKwS,IAAIxM,MAAMmX,UAAf,IAA6B;EADnE;AAR4D;AAavE,IAAA,gBAAA;AC/PA,IAAME,WAIFnb,SAAAA,UAAYwC,MAAYiH,MAAyB;AAC7C,OAAKjH,OAAOA;AACZ,OAAKiH,OAAOA;AANiB;AASjC,SAAOpJ,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAoC;AAC1E,MAAID,KAAKrL,SAAS,GAAG;AACjB,WAAOsL,QAAQC,MAAM,oCAAd;EADU;AAGrBnI,MAAI6U,aAAoB;AACxB7V,MAAMoJ,eAAeF,QAAQE;AAC7B,MAAIA,gBAAgBA,aAAavE,SAAS,SAAS;AAC/CgR,iBAAazM;EADkC;AAGnDpJ,MAAMmO,aAAa,CAAA;AAEnB,WAAA,IAAA,GAAA,OAAkBlF,KAAKzK,MAAM,CAAX,GAAA,IAAA,KAAA,QAAA,KAAA,GAAe;AAAjCwB,QAAWsK,MAAAA,KAAAA,CAAAA;AACPtK,QAAMiK,SAASf,QAAQrJ,MAAMyK,KAAK,IAAI6D,WAAWvQ,QAAQiY,YAAY9V,QAAW,EAAC4U,gBAAgB,OAAjB,CAAjE;AACf,QAAI,CAAC1K,QAAQ;AAAA,aAAO;IAFS;AAG7B4L,iBAAaA,cAAc5L,OAAOjI;AAClCmM,eAAWvL,KAAKqH,MAAhB;EAJ6B;AAajCjK,MAAM4a,kBAAkBxR,gBACpB+E,WAAWhI,KAAX,SAAgBmE,MAAO1E;AAAAA,WAAAA,aAAawD,cAAckB,KAAItI,IAA/B;EAAvB,CAAA;AAEJ,SAAO4Y,kBACH,IAAID,SAASxV,WAAWgJ,UAAxB,IACA,IAAIwM,SAAU9E,YAAkB1H,UAAhC;AAtCyB;mBAyCjC9E,WAAA,SAAAA,WAASa,KAAoC;AACzClJ,MAAI2C,SAAS;AACb3C,MAAI6Z,WAAW;AACf7Z,MAAI8Z;AACJ,WAAkB,IAAA,GAAA,OAAA,KAAK7R,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAlBqB,QAAAA,MAAAA,KAAAA,CAAAA;AACPuQ;AACAlX,aAAS2G,IAAIjB,SAASa,GAAb;AAGLvG,QAAAA,UAAUA,kBAAkB2E,mBAAiB,CAAC3E,OAAO4E,WAAW;AAE5D,UAAA,CAACuS,YAAY;AACbA,qBAAanX;MADA;AAGjBA,eAAS;AAET,UAAIkX,aAAa,KAAK5R,KAAKrL,QAAQ;AAC/B,eAAOkd;MADwB;IAP6B;AAYpE,QAAInX,WAAW,MAAf;AAAqB;IAjBI;EAAA;AAmB7B,SAAOA;AAhEsB;mBAmEjC2F,YAAA,SAAAA,YAAUa,IAA6B;AACnC,OAAKlB,KAAKmB,QAAQD,EAAlB;AApE6B;AAuEjCZ,SAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO,KAAKN,KAAKoB,MAAV,SAAgBC,KAAA;AAAA,WAAOA,IAAIf,cAAJ;EAAA,CAAvB;AAxEsB;AA2EjCpB,SAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9BnI,MAAMoI,aAAa,CAAC,UAAD;AACnB,OAAKkB,UAAL,SAAeoC,OAAS;AAAEtD,eAAWxF,KAAK8I,MAAMvD,UAAN,CAAhB;EAAF,CAAxB;AACA,SAAOC;AA9EsB;AAkFrC,IAAA,aAAA;ACvFA,IAAM2S,MAKFvb,SAAAA,KAAYgF,UAAuCb,QAAoB;AACnE,OAAK3B,OAAO2B,OAAO3B;AACnB,OAAKwC,WAAW,CAAA,EAAGE,OAAOF,QAAV;AAChB,OAAKb,SAASA;AARU;cAW5B0F,WAAA,SAAAA,WAASa,KAA6B;AAClC,SAAO,KAAKvG,OAAO0F,SAASa,GAArB;AAZiB;cAe5BZ,YAAA,SAAAA,YAAUa,IAA6B;AACnC,WAAsB,IAAA,GAAA,OAAA,KAAK3F,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAA1BwW,QAAAA,UAAAA,KAAAA,CAAAA;AACP7Q,OAAG6Q,QAAQ,CAAR,CAAH;EADiC;AAGrC7Q,KAAG,KAAKxG,MAAR;AAnBwB;AAsB5B,IAAO9D,QAAP,SAAAA,QAAaoJ,MAA6BC,SAA+B;AACrE,MAAID,KAAKrL,SAAS,GAAlB;AACI,WAAOsL,QAAQC,MAAM,+CAA4CF,KAAKrL,SAAS,KAA1D,WAAA;EAF4C;AAIrEoC,MAAMwE,WAAwC,CAAA;AAC9C,WAASnH,IAAI,GAAGA,IAAI4L,KAAKrL,SAAS,GAAGP,KAAK,GAAG;AACzC2C,QAAMyE,OAAOwE,KAAK5L,CAAL;AAEb,QAAI,OAAOoH,SAAS,UAAU;AAC1B,aAAOyE,QAAQC,MAAM,gCAA8B,OAAO1E,OAAnD,aAAoEpH,CAApE;IADmB;AAI9B,QAAI,gBAAgB4W,KAAKxP,IAArB,GAA4B;AAC5B,aAAOyE,QAAQC,MAAM,oEAAoE9L,CAAlF;IADqB;AAIhC2C,QAAMY,QAAQsI,QAAQrJ,MAAMoJ,KAAK5L,IAAI,CAAT,GAAaA,IAAI,CAA/B;AACd,QAAI,CAACuD,OAAO;AAAA,aAAO;IAZsB;AAczC4D,aAAS5B,KAAK;MAAC6B;MAAM7D;IAAP,CAAd;EAdyC;AAiB7CZ,MAAM2D,SAASuF,QAAQrJ,MAAMoJ,KAAKA,KAAKrL,SAAS,CAAnB,GAAuBqL,KAAKrL,SAAS,GAAGsL,QAAQE,cAAc5E,QAA5E;AACf,MAAI,CAACb,QAAQ;AAAA,WAAO;EAvBiD;AAyBrE,SAAO,IAAIoX,IAAIvW,UAAUb,MAAlB;AA/CiB;AAkD5B4F,IAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO,KAAK5F,OAAO4F,cAAZ;AAnDiB;AAsD5BpB,IAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9BnI,MAAMoI,aAAa,CAAC,KAAD;AACnB,WAA2B,IAAA,GAAA,OAAA,KAAK5D,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAA1CxE,QAAA,MAAA,KAAA,CAAA;AAAYyE,QAAAA,OAAAA,IAAAA,CAAAA;AAAM8P,QAAAA,OAAAA,IAAAA,CAAAA;AACdnM,eAAWxF,KAAK6B,MAAM8P,KAAKpM,UAAL,CAAtB;EADsC;AAG1CC,aAAWxF,KAAK,KAAKe,OAAOwE,UAAZ,CAAhB;AACA,SAAOC;AA5DiB;AAgEhC,IAAA,QAAA;AC3DA,IAAM6S,KAKFzb,SAAAyb,IAAYjZ,MAAYwS,OAAmB1U,OAAmB;AAC1D,OAAKkC,OAAOA;AACZ,OAAKwS,QAAQA;AACb,OAAK1U,QAAQA;AARU;AAW3B,GAAOD,QAAP,SAAAA,QAAaoJ,MAA6BC,SAA8B;AACpE,MAAID,KAAKrL,WAAW,GAApB;AACI,WAAOsL,QAAQC,MAAM,sCAAmCF,KAAKrL,SAAS,KAAjD,WAAA;EAF2C;AAIpEoC,MAAMwU,QAAQtL,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGnE,UAA1B;AACd9E,MAAMF,QAAQoJ,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGzD,QAAM0D,QAAQE,gBAAgBjE,SAA9B,CAA1B;AAEd,MAAI,CAACqP,SAAS,CAAC1U,OAAO;AAAA,WAAO;EAPuC;AASpEE,MAAM8F,IAAgBhG,MAAMkC;AAC5B,SAAO,IAAIiZ,GAAGnV,EAAEL,UAAU+O,OAAO1U,KAA1B;AArBgB;aAwB3BuJ,WAAA,SAAAA,WAASa,KAA+B;AACpClK,MAAMwU,QAAU,KAAKA,MAAMnL,SAASa,GAApB;AAChBlK,MAAMwF,SAAU,KAAK1F,MAAMuJ,SAASa,GAApB;AAEhB,MAAIsK,QAAQ,GAAG;AACX,UAAM,IAAIhL,eAAJ,gCAA+CgL,QAA9B,OAAA;EADZ;AAIf,MAAIA,SAAShP,OAAM5H,QAAQ;AACvB,UAAM,IAAI4L,eAAJ,gCAA+CgL,QAA9B,SAAyChP,OAAM5H,SAAS,KAAxD,GAAA;EADA;AAI3B,MAAI4W,UAAUlX,KAAK0M,MAAMwK,KAAX,GAAmB;AAC7B,UAAM,IAAIhL,eAAJ,+CAA8DgL,QAA7C,WAAA;EADM;AAIjC,SAAOhP,OAAMgP,KAAN;AAxCgB;aA2C3BlL,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKqK,KAAR;AACArK,KAAG,KAAKrK,KAAR;AA7CuB;AAgD3ByJ,GAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO;AAjDgB;AAoD3BpB,GAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9B,SAAO;IAAC;IAAM,KAAKqM,MAAMrM,UAAX;IAAwB,KAAKrI,MAAMqI,UAAX;EAA/B;AArDgB;AAyD/B,IAAA,OAAA;AC1DA,IAAM+S,KAKF1b,SAAAA,IAAY2b,QAAoBC,UAAsB;AAClD,OAAKpZ,OAAOgD;AACZ,OAAKmW,SAASA;AACd,OAAKC,WAAWA;AARO;AAW3B,GAAOvb,QAAP,SAAAA,QAAaoJ,MAA6BC,SAA8B;AACpE,MAAID,KAAKrL,WAAW,GAAG;AACnB,WAAOsL,QAAQC,MAAM,sCAAmCF,KAAKrL,SAAS,KAAjD,WAAA;EADF;AAIvBoC,MAAMmb,SAASjS,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AAEfnF,MAAMob,WAAWlS,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AAEjB,MAAI,CAACgW,UAAU,CAACC,UAAU;AAAA,WAAO;EATmC;AAWpE,MAAI,CAACpV,YAAYmV,OAAOnZ,MAAM;IAACgD;IAAaD;IAAYD;IAAYF;IAAUO;EAAhD,CAAzB,GAAsF;AACvF,WAAO+D,QAAQC,MAA0FjJ,sFAAAA,WAASib,OAAOnZ,IAAhB,IAApF,UAAA;EADkE;AAI3F,SAAO,IAAIkZ,GAAGC,QAAQC,QAAf;AA1BgB;aA6B3B/R,WAAA,SAAAA,WAASa,KAAiC;AACtClK,MAAMmb,SAAU,KAAKA,OAAO9R,SAASa,GAArB;AAChBlK,MAAMob,WAAY,KAAKA,SAAS/R,SAASa,GAAvB;AAElB,MAAIkR,YAAY,MAAM;AAAA,WAAO;EAJS;AAMtC,MAAI,CAAChV,kBAAkB+U,QAAQ;IAAC;IAAW;IAAU;IAAU;EAAhC,CAA1B,GAAoE;AACrE,UAAM,IAAI3R,eAAJ,sFAAqGtJ,WAAS0I,OAAOuS,MAAP,CAAT,IAApF,WAAA;EAD8C;AAIzE,MAAI,CAAC/U,kBAAkBgV,UAAU;IAAC;IAAU;EAAX,CAA5B,GAAkD;AACnD,UAAM,IAAI5R,eAAJ,uEAAsFtJ,WAAS0I,OAAOwS,QAAP,CAAT,IAArE,WAAA;EAD4B;AAIvD,SAAOA,SAASxc,QAAQuc,MAAjB,KAA4B;AA3CZ;aA8C3B7R,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKgR,MAAR;AACAhR,KAAG,KAAKiR,QAAR;AAhDuB;AAmD3B7R,GAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO;AApDgB;AAuD3BpB,GAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9B,SAAO;IAAC;IAAM,KAAKgT,OAAOhT,UAAZ;IAAyB,KAAKiT,SAASjT,UAAd;EAAhC;AAxDgB;AA4D/B,IAAA,OAAA;AC5DA,IAAMkT,UAMF7b,SAAA6b,SAAYF,QAAoBC,UAAsBE,WAAwB;AAC1E,OAAKtZ,OAAO8C;AACZ,OAAKqW,SAASA;AACd,OAAKC,WAAWA;AAChB,OAAKE,YAAYA;AAVW;AAahC,QAAOzb,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAmC;AACzE,MAAID,KAAKrL,UAAU,KAAMqL,KAAKrL,UAAU,GAAG;AACvC,WAAOsL,QAAQC,MAAM,2CAAwCF,KAAKrL,SAAS,KAAtD,WAAA;EADkB;AAI3CoC,MAAMmb,SAASjS,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AAEfnF,MAAMob,WAAWlS,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AAEjB,MAAI,CAACgW,UAAU,CAACC,UAAU;AAAA,WAAO;EATwC;AAUzE,MAAI,CAACpV,YAAYmV,OAAOnZ,MAAM;IAACgD;IAAaD;IAAYD;IAAYF;IAAUO;EAAhD,CAAzB,GAAsF;AACvF,WAAO+D,QAAQC,MAA0FjJ,sFAAAA,WAASib,OAAOnZ,IAAhB,IAApF,UAAA;EADkE;AAI3F,MAAIiH,KAAKrL,WAAW,GAAG;AACnBoC,QAAMsb,YAAYpS,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGnE,UAA1B;AAClB,QAAI,CAACwW,WAAW;AAAA,aAAO;IAFJ;AAGnB,WAAO,IAAID,QAAQF,QAAQC,UAAUE,SAA9B;EAHY,OAIhB;AACH,WAAO,IAAID,QAAQF,QAAQC,QAApB;EADJ;AA/BqB;kBAoChC/R,WAAA,SAAAA,WAASa,KAA6B;AAClClK,MAAMmb,SAAU,KAAKA,OAAO9R,SAASa,GAArB;AAChBlK,MAAMob,WAAY,KAAKA,SAAS/R,SAASa,GAAvB;AAElB,MAAI,CAAC9D,kBAAkB+U,QAAQ;IAAC;IAAW;IAAU;IAAU;EAAhC,CAA1B,GAAoE;AACrE,UAAM,IAAI3R,eAAJ,sFAAqGtJ,WAAS0I,OAAOuS,MAAP,CAAT,IAApF,WAAA;EAD8C;AAIzE,MAAI,CAAC/U,kBAAkBgV,UAAU;IAAC;IAAU;EAAX,CAA5B,GAAkD;AACnD,UAAM,IAAI5R,eAAJ,uEAAsFtJ,WAAS0I,OAAOwS,QAAP,CAAT,IAArE,WAAA;EAD4B;AAIvD,MAAI,KAAKE,WAAW;AAChBtb,QAAMsb,YAAa,KAAKA,UAAUjS,SAASa,GAAxB;AACnB,WAAOkR,SAASxc,QAAQuc,QAAQG,SAAzB;EAFS;AAKpB,SAAOF,SAASxc,QAAQuc,MAAjB;AArDqB;kBAwDhC7R,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKgR,MAAR;AACAhR,KAAG,KAAKiR,QAAR;AACA,MAAI,KAAKE,WAAW;AAChBnR,OAAG,KAAKmR,SAAR;EADgB;AA3DQ;AAgEhC/R,QAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO;AAjEqB;AAoEhCpB,QAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9B,MAAI,KAAKmT,aAAa,QAAQ,KAAKA,cAAcvb,QAAW;AACxDC,QAAMsb,YAAY,KAAKA,UAAUnT,UAAf;AAClB,WAAO;MAAC;MAAY,KAAKgT,OAAOhT,UAAZ;MAAyB,KAAKiT,SAASjT,UAAd;MAA2BmT;IAAjE;EAFiD;AAI5D,SAAO;IAAC;IAAY,KAAKH,OAAOhT,UAAZ;IAAyB,KAAKiT,SAASjT,UAAd;EAAtC;AAzEqB;AA6EpC,IAAA,YAAA;AC1EA,IAAMoT,QASF/b,SAAA+b,OAAYC,WAAiB3F,YAAkB/V,OAAmB2b,OAAc9F,SAA4B+F,WAAuB;AAC/H,OAAKF,YAAYA;AACjB,OAAKxZ,OAAO6T;AACZ,OAAK/V,QAAQA;AACb,OAAK2b,QAAQA;AACb,OAAK9F,UAAUA;AACf,OAAK+F,YAAYA;AAfS;AAkB9B,MAAO7b,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAiC;AACvE,MAAID,KAAKrL,SAAS,GAAlB;AACI,WAAOsL,QAAQC,MAAM,oDAAiDF,KAAKrL,SAAS,KAA/D,GAAA;EAF8C;AAGvE,MAAIqL,KAAKrL,SAAS,MAAM,GAAxB;AACI,WAAOsL,QAAQC,MAAM,uCAAd;EAJ4D;AAMvEnI,MAAIwa;AACJxa,MAAI6U;AACJ,MAAI3M,QAAQE,gBAAgBF,QAAQE,aAAavE,SAAS,SAAS;AAC/DgR,iBAAa3M,QAAQE;EAD0C;AAGnEpJ,MAAMyb,QAAQ,CAAA;AACdzb,MAAM2V,UAAU,CAAA;AAChB,WAAStY,IAAI,GAAGA,IAAI4L,KAAKrL,SAAS,GAAGP,KAAK,GAAG;AACzC2D,QAAI0U,SAASzM,KAAK5L,CAAL;AACb2C,QAAMY,QAAQqI,KAAK5L,IAAI,CAAT;AAEd,QAAI,CAACgJ,MAAMC,QAAQoP,MAAd,GAAuB;AACxBA,eAAS,CAACA,MAAD;IADe;AAI5B1V,QAAM2b,eAAezS,QAAQxE,OAAOrH,CAAf;AACrB,QAAIqY,OAAO9X,WAAW,GAAG;AACrB,aAAO+d,aAAaxS,MAAM,qCAAnB;IADc;AAIzB,aAAA,MAAA,GAAA,OAAoBuM,QAAAA,MAAAA,KAAAA,QAAAA,OAAAA,GAAQ;AAAjBE,UAAAA,QAAAA,KAAAA,GAAAA;AACP,UAAI,OAAOA,UAAU,YAAY,OAAOA,UAAU,UAAU;AACxD,eAAO+F,aAAaxS,MAAM,2CAAnB;MADiD,WAEjD,OAAOyM,UAAU,YAAYtY,KAAKia,IAAI3B,KAAT,IAAkBrK,OAAOqQ,kBAAkB;AAC/E,eAAOD,aAAaxS,MAAuDoC,mDAAAA,OAAOqQ,mBAA3E,GAAA;MADwE,WAGxE,OAAOhG,UAAU,YAAYtY,KAAK0M,MAAM4L,KAAX,MAAsBA,OAAO;AACjE,eAAO+F,aAAaxS,MAAM,+CAAnB;MAD0D,WAG1D,CAACqS,WAAW;AACnBA,oBAAY5S,OAAOgN,KAAP;MADO,WAEZ+F,aAAa/V,aAAa4V,WAAW5S,OAAOgN,KAAP,CAArC,GAAqD;AAC5D,eAAO;MADqD;AAIhE,UAAI,OAAO6F,MAAM5S,OAAO+M,KAAP,CAAN,MAAyB,aAAa;AAC7C,eAAO+F,aAAaxS,MAAM,+BAAnB;MADsC;AAIjDsS,YAAM5S,OAAO+M,KAAP,CAAN,IAAuBD,QAAQ/X;IAnBP;AAsB5BoC,QAAM2D,SAASuF,QAAQrJ,MAAMe,OAAOvD,GAAGwY,UAAxB;AACf,QAAI,CAAClS,QAAQ;AAAA,aAAO;IApCqB;AAqCzCkS,iBAAaA,cAAclS,OAAO3B;AAClC2T,YAAQ/S,KAAKe,MAAb;EAtCyC;AAyC7C3D,MAAMF,QAAQoJ,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AACd,MAAI,CAACrF,OAAO;AAAA,WAAO;EAvDoD;AAyDvEE,MAAM0b,YAAYxS,QAAQrJ,MAAMoJ,KAAKA,KAAKrL,SAAS,CAAnB,GAAuBqL,KAAKrL,SAAS,GAAGiY,UAAtD;AAClB,MAAI,CAAC6F,WAAW;AAAA,WAAO;EA1DgD;AA8DvE,MAAI5b,MAAMkC,KAAK6C,SAAS,WAAWqE,QAAQxE,OAAO,CAAf,EAAkBkB,aAAc4V,WAAiB1b,MAAMkC,IAAvD,GAA8D;AAC7F,WAAO;EADsF;AAIjG,SAAO,IAAIuZ,MAAOC,WAAkB3F,YAAkB/V,OAAO2b,OAAO9F,SAAS+F,SAAtE;AApFmB;gBAuF9BrS,WAAA,SAAAA,WAASa,KAA6B;AAClClK,MAAMF,QAAS,KAAKA,MAAMuJ,SAASa,GAApB;AACflK,MAAMgD,SAAU4F,OAAO9I,KAAP,MAAkB,KAAK0b,aAAa,KAAK7F,QAAQ,KAAK8F,MAAM3b,KAAX,CAAb,KAAoC,KAAK4b;AAC7F,SAAO1Y,OAAOqG,SAASa,GAAhB;AA1FmB;gBA6F9BZ,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKrK,KAAR;AACA,OAAK6V,QAAQvL,QAAQD,EAArB;AACAA,KAAG,KAAKuR,SAAR;AAhG0B;AAmG9BnS,MAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO,KAAKoM,QAAQtL,MAAb,SAAmB4L,KAAOA;AAAAA,WAAAA,IAAI1M,cAAJ;EAAA,CAA1B,KAAkD,KAAKmS,UAAUnS,cAAf;AApG/B;AAuG9BpB,MAAAA,UAAAA,YAAAA,SAAAA,cAAkC;;AAC9BnI,MAAMoI,aAAa;IAAC;IAAS,KAAKtI,MAAMqI,UAAX;EAAV;AAIb0T,MAAAA,eAAe5Z,OAAOC,KAAK,KAAKuZ,KAAjB,EAAwBK,KAAxB;AAIfC,MAAAA,kBAA2D,CAAA;AACjE/b,MAAMgc,eAA0C,CAAA;AACrCpG,WAAAA,IAAAA,GAAAA,OAASiG,cAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAc;AAAvBjG,QAAAA,QAAAA,KAAAA,CAAAA;AACP5V,QAAMic,cAAcD,aAAa,KAAKP,MAAM7F,KAAX,CAAb;AACpB,QAAIqG,gBAAgBlc,QAAW;AAE3Bic,mBAAa,KAAKP,MAAM7F,KAAX,CAAb,IAAkCmG,gBAAgBne;AAClDme,sBAAgBnZ,KAAK;QAAC,KAAK6Y,MAAM7F,KAAX;QAAmB,CAACA,KAAD;MAApB,CAArB;IAH2B,OAIxB;AAEHmG,sBAAgBE,WAAhB,EAA6B,CAA7B,EAAgCrZ,KAAKgT,KAArC;IAFG;EANuB;AAYlC5V,MAAMkc,cAAA,SAAetG,QAAUuG;AAAAA,WAAAA,SAAKX,UAAU3W,SAAS,WAAW0G,OAAOqK,MAAP,IAAgBA;EAAAA;AAElF,WAAA,MAAA,GAAA,SAAoCmG,iBAAAA,MAAAA,OAAAA,QAAAA,OAAAA,GAAiB;AAArD/b,QAAA,MAAA,OAAA,GAAA;AAAYic,QAAAA,cAAAA,IAAAA,CAAAA;AAAavG,QAAAA,SAAAA,IAAAA,CAAAA;AACrB,QAAIA,OAAO9X,WAAW,GAAG;AAErBwK,iBAAWxF,KAAKsZ,YAAYxG,OAAO,CAAP,CAAZ,CAAhB;IAFqB,OAGlB;AAEHtN,iBAAWxF,KAAK8S,OAAOnU,IAAI2a,WAAX,CAAhB;IAFG;AAIP9T,eAAWxF,KAAK,KAAK+S,QAAQsG,aAAb,EAA0B9T,UAA1B,CAAhB;EARiD;AAUrDC,aAAWxF,KAAK,KAAK8Y,UAAUvT,UAAf,CAAhB;AACA,SAAOC;AA3ImB;AA+IlC,IAAA,UAAA;AChJA,IAAMgU,OAMF5c,SAAA4c,MAAYpa,MAAYqa,UAAoBX,WAAuB;AAC/D,OAAK1Z,OAAOA;AACZ,OAAKqa,WAAWA;AAChB,OAAKX,YAAYA;AATQ;AAY7B,KAAO7b,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAgC;AACtE,MAAID,KAAKrL,SAAS,GAAlB;AACI,WAAOsL,QAAQC,MAAM,oDAAiDF,KAAKrL,SAAS,KAA/D,GAAA;EAF6C;AAGtE,MAAIqL,KAAKrL,SAAS,MAAM,GAAxB;AACI,WAAOsL,QAAQC,MAAM,sCAAd;EAJ2D;AAMtEnI,MAAI6U;AACJ,MAAI3M,QAAQE,gBAAgBF,QAAQE,aAAavE,SAAS,SAAS;AAC/DgR,iBAAa3M,QAAQE;EAD0C;AAInEpJ,MAAMqc,WAAW,CAAA;AACjB,WAAShf,IAAI,GAAGA,IAAI4L,KAAKrL,SAAS,GAAGP,KAAK,GAAG;AACzC2C,QAAMiU,OAAO/K,QAAQrJ,MAAMoJ,KAAK5L,CAAL,GAASA,GAAG2H,WAA1B;AACb,QAAI,CAACiP,MAAM;AAAA,aAAO;IAFuB;AAIzCjU,QAAM2D,SAASuF,QAAQrJ,MAAMoJ,KAAK5L,IAAI,CAAT,GAAaA,IAAI,GAAGwY,UAAlC;AACf,QAAI,CAAClS,QAAQ;AAAA,aAAO;IALqB;AAOzC0Y,aAASzZ,KAAK;MAACqR;MAAMtQ;IAAP,CAAd;AAEAkS,iBAAaA,cAAclS,OAAO3B;EATO;AAY7ChC,MAAM0b,YAAYxS,QAAQrJ,MAAMoJ,KAAKA,KAAKrL,SAAS,CAAnB,GAAuBqL,KAAKrL,SAAS,GAAGiY,UAAtD;AAClB,MAAI,CAAC6F,WAAW;AAAA,WAAO;EAzB+C;AA4BtE,SAAO,IAAIU,KAAMvG,YAAkBwG,UAAUX,SAAtC;AAxCkB;eA2C7BrS,WAAA,SAAAA,WAASa,KAA6B;AAClC,WAAiC,IAAA,GAAA,OAAA,KAAKmS,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAAhDrc,QAAA,MAAA,KAAA,CAAA;AAAYiU,QAAAA,OAAAA,IAAAA,CAAAA;AAAM7R,QAAAA,aAAAA,IAAAA,CAAAA;AACd,QAAI6R,KAAK5K,SAASa,GAAd,GAAoB;AACpB,aAAO9H,WAAWiH,SAASa,GAApB;IADa;EADoB;AAKhD,SAAO,KAAKwR,UAAUrS,SAASa,GAAxB;AAjDkB;eAoD7BZ,YAAA,SAAAA,YAAUa,IAA6B;AACnC,WAAiC,IAAA,GAAA,OAAA,KAAKkS,UAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAU;AAAhDrc,QAAA,MAAA,KAAA,CAAA;AAAYiU,QAAAA,OAAAA,IAAAA,CAAAA;AAAM7R,QAAAA,aAAAA,IAAAA,CAAAA;AACd+H,OAAG8J,IAAH;AACA9J,OAAG/H,UAAH;EAF4C;AAIhD+H,KAAG,KAAKuR,SAAR;AAzDyB;AA4D7BnS,KAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO,KAAK8S,SAAShS,MAAd,SAAA,KAAsBiS;AAAGrG,QAAAA,CAAAA;;AAASA,WAAAA,IAAI1M,cAAJ;EAAlC,CAAA,KAA0D,KAAKmS,UAAUnS,cAAf;AA7DxC;AAgE7BpB,KAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9BnI,MAAMoI,aAAa,CAAC,MAAD;AACnB,OAAKkB,UAAL,SAAeoC,OAAS;AAAEtD,eAAWxF,KAAK8I,MAAMvD,UAAN,CAAhB;EAAF,CAAxB;AACA,SAAOC;AAnEkB;AAuEjC,IAAA,SAAA;ACzEA,IAAMmU,QAMF/c,SAAAA,OAAYwC,MAAYlC,OAAmB0c,YAAwBC,UAAuB;AACtF,OAAKza,OAAOA;AACZ,OAAKlC,QAAQA;AACb,OAAK0c,aAAaA;AAClB,OAAKC,WAAWA;AAVU;AAc9B,MAAO5c,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAiC;AACvE,MAAID,KAAKrL,UAAU,KAAMqL,KAAKrL,UAAU,GAAG;AACvC,WAAOsL,QAAQC,MAAM,2CAAwCF,KAAKrL,SAAS,KAAtD,WAAA;EADkB;AAI3CoC,MAAMF,QAAQoJ,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AACdnF,MAAMwc,aAAatT,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGnE,UAA1B;AAEnB,MAAI,CAAChF,SAAS,CAAC0c,YAAY;AAAA,WAAO;EARqC;AAUvE,MAAI,CAACxW,YAAYlG,MAAMkC,MAAM;IAACwD,QAAML,SAAN;IAAkBJ;IAAYI;EAA/B,CAAxB,GAAoE;AACrE,WAAO+D,QAAQC,MAA0EjJ,sEAAAA,WAASJ,MAAMkC,IAAf,IAApE,UAAA;EADgD;AAIzE,MAAIiH,KAAKrL,WAAW,GAAG;AACnBoC,QAAMyc,WAAWvT,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGnE,UAA1B;AACjB,QAAI,CAAC2X,UAAU;AAAA,aAAO;IAFH;AAGnB,WAAO,IAAIF,MAAMzc,MAAMkC,MAAMlC,OAAO0c,YAAYC,QAAzC;EAHY,OAIhB;AACH,WAAO,IAAIF,MAAMzc,MAAMkC,MAAMlC,OAAO0c,UAA7B;EADJ;AAhCmB;gBAqC9BnT,WAAA,SAAAA,WAASa,KAA6B;AAClClK,MAAMF,QAAS,KAAKA,MAAMuJ,SAASa,GAApB;AACflK,MAAMwc,aAAc,KAAKA,WAAWnT,SAASa,GAAzB;AAEpB,MAAI,CAAC9D,kBAAkBtG,OAAO;IAAC;IAAU;EAAX,CAAzB,GAA+C;AAChD,UAAM,IAAI0J,eAAJ,sEAAqFtJ,WAAS0I,OAAO9I,KAAP,CAAT,IAApE,WAAA;EADyB;AAIpD,MAAI,KAAK2c,UAAU;AACfzc,QAAMyc,WAAY,KAAKA,SAASpT,SAASa,GAAvB;AAClB,WAAOpK,MAAMtB,MAAMge,YAAYC,QAAxB;EAFQ;AAKnB,SAAO3c,MAAMtB,MAAMge,UAAZ;AAlDmB;gBAqD9BlT,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKrK,KAAR;AACAqK,KAAG,KAAKqS,UAAR;AACA,MAAI,KAAKC,UAAU;AACftS,OAAG,KAAKsS,QAAR;EADe;AAxDO;AA6D9BlT,MAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO;AA9DmB;AAiE9BpB,MAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9B,MAAI,KAAKsU,YAAY,QAAQ,KAAKA,aAAa1c,QAAW;AACtDC,QAAMyc,WAAW,KAAKA,SAAStU,UAAd;AACjB,WAAO;MAAC;MAAS,KAAKrI,MAAMqI,UAAX;MAAwB,KAAKqU,WAAWrU,UAAhB;MAA6BsU;IAA/D;EAF+C;AAI1D,SAAO;IAAC;IAAS,KAAK3c,MAAMqI,UAAX;IAAwB,KAAKqU,WAAWrU,UAAhB;EAAlC;AAtEmB;AA0ElC,IAAA,UAAA;ACvEA,SAASuU,iBAAiB/d,IAAwBqD,MAAY;AAC1D,MAAIrD,OAAO,QAAQA,OAAO,MAAM;AAE5B,WAAOqD,KAAK6C,SAAS,aACjB7C,KAAK6C,SAAS,YACd7C,KAAK6C,SAAS,YACd7C,KAAK6C,SAAS,UACd7C,KAAK6C,SAAS;EANU,OAOzB;AAEH,WAAO7C,KAAK6C,SAAS,YACjB7C,KAAK6C,SAAS,YACd7C,KAAK6C,SAAS;EAJf;AARmD;AAgB9D,SAAS8X,GAAGzS,KAAwBtK,GAAQD,GAAiB;AAAE,SAAOC,MAAMD;AAAf;AAC7D,SAASid,IAAI1S,KAAwBtK,GAAQD,GAAiB;AAAE,SAAOC,MAAMD;AAAf;AAC9D,SAASkd,GAAG3S,KAAwBtK,GAAQD,GAAiB;AAAE,SAAOC,IAAID;AAAb;AAC7D,SAASmd,GAAG5S,KAAwBtK,GAAQD,GAAiB;AAAE,SAAOC,IAAID;AAAb;AAC7D,SAASod,KAAK7S,KAAwBtK,GAAQD,GAAiB;AAAE,SAAOC,KAAKD;AAAd;AAC/D,SAASqd,KAAK9S,KAAwBtK,GAAQD,GAAiB;AAAE,SAAOC,KAAKD;AAAd;AAE/D,SAASsd,UAAU/S,KAAwBtK,GAAQD,GAAQyL,GAAiB;AAAE,SAAOA,EAAErE,QAAQnH,GAAGD,CAAb,MAAoB;AAA7B;AAC5E,SAASud,WAAWhT,KAAwBtK,GAAQD,GAAQyL,GAAiB;AAAE,SAAO,CAAC6R,UAAU/S,KAAKtK,GAAGD,GAAGyL,CAArB;AAAV;AAC7E,SAAS+R,UAAUjT,KAAwBtK,GAAQD,GAAQyL,GAAiB;AAAE,SAAOA,EAAErE,QAAQnH,GAAGD,CAAb,IAAkB;AAA3B;AAC5E,SAASyd,UAAUlT,KAAwBtK,GAAQD,GAAQyL,GAAiB;AAAE,SAAOA,EAAErE,QAAQnH,GAAGD,CAAb,IAAkB;AAA3B;AAC5E,SAAS0d,YAAYnT,KAAwBtK,GAAQD,GAAQyL,GAAiB;AAAE,SAAOA,EAAErE,QAAQnH,GAAGD,CAAb,KAAmB;AAA5B;AAC9E,SAAS2d,YAAYpT,KAAwBtK,GAAQD,GAAQyL,GAAiB;AAAE,SAAOA,EAAErE,QAAQnH,GAAGD,CAAb,KAAmB;AAA5B;AAmB9E,SAAS4d,eAAe5e,IAAwB6e,cAAwDC,qBAA4F;AAChMzd,MAAM0d,oBAAoB/e,OAAO,QAAQA,OAAO;AAEhD,SAAO,WAAA;AAOHa,aAAAA,WAAYwH,KAAiBC,KAAiBL,UAAuB;AACjE,WAAK5E,OAAOgD;AACZ,WAAKgC,MAAMA;AACX,WAAKC,MAAMA;AACX,WAAKL,WAAWA;AAChB,WAAK+W,qBAAqB3W,IAAIhF,KAAK6C,SAAS,WAAWoC,IAAIjF,KAAK6C,SAAS;IALR;AAQrE,eAAOhF,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAsC;AAC5E,UAAID,KAAKrL,WAAW,KAAKqL,KAAKrL,WAAW,GAAzC;AACI,eAAOsL,QAAQC,MAAM,kCAAd;MAFiE;AAI5EnJ,UAAMrB,MAA0BsK,KAAK,CAAL;AAEhCjI,UAAIgG,MAAMkC,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AACV,UAAI,CAAC6B,KAAK;AAAA,eAAO;MAP2D;AAQ5E,UAAI,CAAC0V,iBAAiB/d,KAAIqI,IAAIhF,IAAzB,GAAgC;AACjC,eAAOkH,QAAQxE,OAAO,CAAf,EAAkByE,MAAlB,MAA4BxK,MAAJ,+CAAmDuB,WAAS8G,IAAIhF,IAAb,IAA3E,IAAA;MAD0B;AAGrChB,UAAIiG,MAAMiC,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG9D,SAA1B;AACV,UAAI,CAAC8B,KAAK;AAAA,eAAO;MAZ2D;AAa5E,UAAI,CAACyV,iBAAiB/d,KAAIsI,IAAIjF,IAAzB,GAAgC;AACjC,eAAOkH,QAAQxE,OAAO,CAAf,EAAkByE,MAAlB,MAA4BxK,MAAJ,+CAAmDuB,WAAS+G,IAAIjF,IAAb,IAA3E,IAAA;MAD0B;AAIrC,UACIgF,IAAIhF,KAAK6C,SAASoC,IAAIjF,KAAK6C,QAC3BmC,IAAIhF,KAAK6C,SAAS,WAClBoC,IAAIjF,KAAK6C,SAAS,SACpB;AACE,eAAOqE,QAAQC,MAA+BjJ,2BAAAA,WAAS8G,IAAIhF,IAAb,IAAzB,YAAqD9B,WAAS+G,IAAIjF,IAAb,IAAnE,IAAA;MADT;AAIF,UAAI0b,mBAAmB;AAEnB,YAAI1W,IAAIhF,KAAK6C,SAAS,WAAWoC,IAAIjF,KAAK6C,SAAS,SAAS;AAExDmC,gBAAM,IAAI+C,YAAU9C,IAAIjF,MAAM,CAACgF,GAAD,CAAxB;QAFkD,WAGjDA,IAAIhF,KAAK6C,SAAS,WAAWoC,IAAIjF,KAAK6C,SAAS,SAAS;AAE/DoC,gBAAM,IAAI8C,YAAU/C,IAAIhF,MAAM,CAACiF,GAAD,CAAxB;QAFyD;MALhD;AAWvBjG,UAAI4F,WAAW;AACf,UAAIqC,KAAKrL,WAAW,GAAG;AACnB,YACIoJ,IAAIhF,KAAK6C,SAAS,YAClBoC,IAAIjF,KAAK6C,SAAS,YAClBmC,IAAIhF,KAAK6C,SAAS,WAClBoC,IAAIjF,KAAK6C,SAAS,SACpB;AACE,iBAAOqE,QAAQC,MAAM,kDAAd;QADT;AAGFvC,mBAAWsC,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAG5D,YAA1B;AACX,YAAI,CAACuB,UAAU;AAAA,iBAAO;QAVH;MAAA;AAavB,aAAO,IAAIgX,WAAW5W,KAAKC,KAAKL,QAAzB;IAlDqE;AAqDhFyC,eAAAA,UAAAA,WAAAA,SAAAA,WAASa,KAAiC;AACtClK,UAAMgH,MAAM,KAAKA,IAAIqC,SAASa,GAAlB;AACZlK,UAAMiH,MAAM,KAAKA,IAAIoC,SAASa,GAAlB;AAEZ,UAAIwT,qBAAqB,KAAKC,oBAAoB;AAC9C3d,YAAM6c,MAAKjU,OAAO5B,GAAP;AACXhH,YAAM6d,KAAKjV,OAAO3B,GAAP;AAEP4V,YAAAA,IAAGhY,SAASgZ,GAAGhZ,QAAQ,EAAEgY,IAAGhY,SAAS,YAAYgY,IAAGhY,SAAS,WAAW;AACxE,gBAAM,IAAI2E,eAAa,6BAA2B7K,KAA8Dke,8DAAAA,IAAGhY,OAA5F,OAAqGgZ,GAAGhZ,OAAxG,YAAA;QADiD;MAJ9B;AASlD,UAAI,KAAK+B,YAAY,CAAC8W,qBAAqB,KAAKC,oBAAoB;AAChE3d,YAAM6c,OAAKjU,OAAO5B,GAAP;AACXhH,YAAM6d,OAAKjV,OAAO3B,GAAP;AACX,YAAI4V,KAAGhY,SAAS,YAAYgZ,KAAGhZ,SAAS,UAAU;AAC9C,iBAAO2Y,aAAatT,KAAKlD,KAAKC,GAAvB;QADuC;MAHc;AAQpE,aAAO,KAAKL,WACR6W,oBAAoBvT,KAAKlD,KAAKC,KAAK,KAAKL,SAASyC,SAASa,GAAvB,CAAnC,IACAsT,aAAatT,KAAKlD,KAAKC,GAAvB;IAvBkC;AA0B1CqC,eAAAA,UAAAA,YAAAA,SAAAA,YAAUa,IAA6B;AACnCA,SAAG,KAAKnD,GAAR;AACAmD,SAAG,KAAKlD,GAAR;AACA,UAAI,KAAKL,UAAU;AACfuD,WAAG,KAAKvD,QAAR;MADe;IAHgB;AA9FG,eAAA,UAsG1C2C,gBAAAA,SAAAA,kBAAyB;AACrB,aAAO;IADc;AAtGiB,eAAA,UA0G1CpB,YAAAA,SAAAA,cAAkC;AAC9BnI,UAAMoI,aAAa,CAACzJ,EAAD;AACnB,WAAK2K,UAAL,SAAeoC,OAAS;AAAEtD,mBAAWxF,KAAK8I,MAAMvD,UAAN,CAAhB;MAAF,CAAxB;AACA,aAAOC;IAHuB;;;AA7G0J;AAqH7LpI,IAAM8d,SAA0EP,eAAe,MAAMZ,IAAIM,SAAzB;AAChFjd,IAAM+d,YAA+ER,eAAe,MAAMX,KAAKM,UAA1B;AACrFld,IAAMge,WAA2ET,eAAe,KAAKV,IAAIM,SAAxB;AACjFnd,IAAMie,cAA8EV,eAAe,KAAKT,IAAIM,SAAxB;AACpFpd,IAAMke,kBAAuFX,eAAe,MAAMR,MAAMM,WAA3B;AAC7Frd,IAAMme,qBAA0FZ,eAAe,MAAMP,MAAMM,WAA3B;AClJxF,IAAMc,eASjB5e,SAAA4e,cAAYxU,SACAlD,QACA2X,UACAC,MACAC,mBACAC,mBAAsC;AAC9C,OAAKxc,OAAO+C;AACZ,OAAK6E,SAASA;AACd,OAAKlD,SAASA;AACd,OAAK2X,WAAWA;AAChB,OAAKC,OAAOA;AACZ,OAAKC,oBAAoBA;AACzB,OAAKC,oBAAoBA;AArBuB;AAwBpD,aAAO3e,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAsC;AAC5E,MAAID,KAAKrL,WAAW,GAApB;AACI,WAAOsL,QAAQC,MAAM,yBAAd;EAFiE;AAI5EnJ,MAAM4J,UAASV,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,GAAGnE,UAA1B;AACf,MAAI,CAAC8E,SAAQ;AAAA,WAAO;EALwD;AAO5E5J,MAAMqI,UAAWY,KAAK,CAAL;AACjB,MAAI,OAAOZ,YAAY,YAAYhC,MAAMC,QAAQ+B,OAAd,GAAnC;AACI,WAAOa,QAAQC,MAAM,kDAAd;EATiE;AAW5EnI,MAAI0F,SAAS;AACb,MAAI2B,QAAQ,QAAR,GAAmB;AACnB3B,aAASwC,QAAQrJ,MAAMwI,QAAQ,QAAR,GAAmB,GAAGtD,UAApC;AACT,QAAI,CAAC2B,QAAQ;AAAA,aAAO;IAFD;EAAA;AAKvB1F,MAAIqd,WAAW;AACf,MAAIhW,QAAQ,UAAR,GAAqB;AACrBgW,eAAWnV,QAAQrJ,MAAMwI,QAAQ,UAAR,GAAqB,GAAGtD,UAAtC;AACX,QAAI,CAACsZ,UAAU;AAAA,aAAO;IAFD;EAAA;AAKzBrd,MAAIsd,OAAO;AACX,MAAIjW,QAAQ,MAAR,GAAiB;AACjBiW,WAAOpV,QAAQrJ,MAAMwI,QAAQ,MAAR,GAAiB,GAAGtD,UAAlC;AACP,QAAI,CAACuZ,MAAM;AAAA,aAAO;IAFD;EAAA;AAKrBtd,MAAIud,oBAAoB;AACxB,MAAIlW,QAAQ,qBAAR,GAAgC;AAChCkW,wBAAoBrV,QAAQrJ,MAAMwI,QAAQ,qBAAR,GAAgC,GAAGvD,UAAjD;AACpB,QAAI,CAACyZ,mBAAmB;AAAA,aAAO;IAFC;EAAA;AAKpCvd,MAAIwd,oBAAoB;AACxB,MAAInW,QAAQ,qBAAR,GAAgC;AAChCmW,wBAAoBtV,QAAQrJ,MAAMwI,QAAQ,qBAAR,GAAgC,GAAGvD,UAAjD;AACpB,QAAI,CAAC0Z,mBAAmB;AAAA,aAAO;IAFC;EAAA;AAKpC,SAAO,IAAIJ,aAAaxU,SAAQlD,QAAQ2X,UAAUC,MAAMC,mBAAmBC,iBAApE;AAjEyC;uBAoEpDnV,WAAA,SAAAA,WAASa,KAAgC;AACrC,SAAO,IAAIrD,KAAKuX,aAAa,KAAK1X,SAAS,KAAKA,OAAO2C,SAASa,GAArB,IAA4B,CAAA,GACnE;IACIuU,OACK,KAAKJ,YAAY,cACjB,KAAKC,QAAQ,UACd;IACJD,UAAU,KAAKA,WAAW,KAAKA,SAAShV,SAASa,GAAvB,IAA8BnK;IACxDue,MAAM,KAAKA,OAAO,KAAKA,KAAKjV,SAASa,GAAnB,IAA0BnK;IAC5C2e,uBAAuB,KAAKH,oBAAoB,KAAKA,kBAAkBlV,SAASa,GAAhC,IAAuCnK;IACvF4e,uBAAuB,KAAKH,oBAAoB,KAAKA,kBAAkBnV,SAASa,GAAhC,IAAuCnK;EAR3F,CADG,EAUA6e,OAAO,KAAKhV,OAAOP,SAASa,GAArB,CAVP;AArEyC;uBAkFpDZ,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKP,MAAR;AACA,MAAI,KAAKlD,QAAQ;AACbyD,OAAG,KAAKzD,MAAR;EADa;AAGjB,MAAI,KAAK2X,UAAU;AACflU,OAAG,KAAKkU,QAAR;EADe;AAGnB,MAAI,KAAKC,MAAM;AACXnU,OAAG,KAAKmU,IAAR;EADW;AAGf,MAAI,KAAKC,mBAAmB;AACxBpU,OAAG,KAAKoU,iBAAR;EADwB;AAG5B,MAAI,KAAKC,mBAAmB;AACxBrU,OAAG,KAAKqU,iBAAR;EADwB;AAhGoB;AAqGpDjV,aAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO;AAtGyC;AAyGpDpB,aAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9BnI,MAAMqI,UAAU,CAAA;AAChB,MAAI,KAAK3B,QAAQ;AACb2B,YAAQ,QAAR,IAAoB,KAAK3B,OAAOyB,UAAZ;EADP;AAGjB,MAAI,KAAKkW,UAAU;AACfhW,YAAQ,UAAR,IAAsB,KAAKgW,SAASlW,UAAd;EADP;AAGnB,MAAI,KAAKmW,MAAM;AACXjW,YAAQ,MAAR,IAAkB,KAAKiW,KAAKnW,UAAV;EADP;AAGf,MAAI,KAAKoW,mBAAmB;AACxBlW,YAAQ,qBAAR,IAAiC,KAAKkW,kBAAkBpW,UAAvB;EADT;AAG5B,MAAI,KAAKqW,mBAAmB;AACxBnW,YAAQ,qBAAR,IAAiC,KAAKmW,kBAAkBrW,UAAvB;EADT;AAG5B,SAAO;IAAC;IAAiB,KAAKyB,OAAOzB,UAAZ;IAAyBE;EAA3C;AA1HyC;;ACzBxD,IAAMwW,SAIFrf,SAAAqf,QAAY/e,OAAmB;AAC3B,OAAKkC,OAAO8C;AACZ,OAAKhF,QAAQA;AANc;AAS/B,OAAOD,QAAP,SAAAA,QAAaoJ,MAA6BC,SAAkC;AACxE,MAAID,KAAKrL,WAAW,GAApB;AACI,WAAOsL,QAAQC,MAAM,qCAAkCF,KAAKrL,SAAS,KAAhD,WAAA;EAF+C;AAIxEoC,MAAMF,QAAQoJ,QAAQrJ,MAAMoJ,KAAK,CAAL,GAAS,CAAvB;AACd,MAAI,CAACnJ,OAAO;AAAA,WAAO;EALqD;AAOxE,MAAIA,MAAMkC,KAAK6C,SAAS,WAAW/E,MAAMkC,KAAK6C,SAAS,YAAY/E,MAAMkC,KAAK6C,SAAS,SAAvF;AACI,WAAOqE,QAAQC,MAA8DjJ,0DAAAA,WAASJ,MAAMkC,IAAf,IAAxD,WAAA;EAR+C;AAUxE,SAAO,IAAI6c,OAAO/e,KAAX;AAnBoB;iBAsB/BuJ,WAAA,SAAAA,WAASa,KAAsC;AAC3ClK,MAAMF,QAAQ,KAAKA,MAAMuJ,SAASa,GAApB;AACd,MAAI,OAAOpK,UAAU,UAAU;AAC3B,WAAOA,MAAMlC;EADc,WAEpByI,MAAMC,QAAQxG,KAAd,GAAsB;AAC7B,WAAOA,MAAMlC;EADgB,OAE1B;AACH,UAAM,IAAI4L,eAAJ,6DAA4EtJ,WAAS0I,OAAO9I,KAAP,CAAT,IAA3D,WAAA;EADpB;AA5BoB;iBAiC/BwJ,YAAA,SAAAA,YAAUa,IAA6B;AACnCA,KAAG,KAAKrK,KAAR;AAlC2B;AAqC/ByJ,OAAAA,UAAAA,gBAAAA,SAAAA,kBAAyB;AACrB,SAAO;AAtCoB;AAyC/BpB,OAAAA,UAAAA,YAAAA,SAAAA,cAAkC;AAC9BnI,MAAMoI,aAAa,CAAC,QAAD;AACnB,OAAKkB,UAAL,SAAeoC,OAAS;AAAEtD,eAAWxF,KAAK8I,MAAMvD,UAAN,CAAhB;EAAF,CAAxB;AACA,SAAOC;AA5CoB;AAgDnC,IAAA,WAAA;ACTApI,IAAM8e,cAAkC;;EAEpC,MAAMhB;EACN,MAAMC;EACN,KAAKE;EACL,KAAKD;EACL,MAAMG;EACN,MAAMD;EACN,SAASnU;EACT,MAAMkR;EACN,WAAWlR;EACX,QAAQqS;EACR,YAAYzB;EACZ,YAAYjM;EACZ,UAAUnE;EACV,SAASQ;EACT,MAAMmQ;EACN,YAAYG;EACZ,eAAe1B;EACf,mBAAmBA;EACnB,mBAAmBA;EACnB,UAAUkF;EACV,OAAO9D;EACP,WAAW/R;EACX,SAASuS;EACT,UAAUxR;EACV,iBAAiBqU;EACjB,UAAUrU;EACV,SAASwS;EACT,QAAQ9G;EACR,UAAU1L;EACV,cAAcmB;EACd,YAAYA;EACZ,aAAaA;EACb,aAAaA;EACb,OAAOkJ;EACP,UAAUR;AApC0B;AAuCxC,SAAS3T,KAAKiK,KAAd,KAAiC;AAAVxK,MAAAA,IAAAA,IAAAA,CAAAA;AAAGC,MAAAA,IAAAA,IAAAA,CAAAA;AAAGC,MAAAA,IAAAA,IAAAA,CAAAA;;AACzBH,MAAIA,EAAE4J,SAASa,GAAX;AACJxK,MAAIA,EAAE2J,SAASa,GAAX;AACJvK,MAAIA,EAAE0J,SAASa,GAAX;AACJlK,MAAMf,QAAQW,IAAIA,EAAEyJ,SAASa,GAAX,IAAkB;AACpClK,MAAMmJ,SAAQX,aAAa/I,GAAGC,GAAGC,GAAGV,KAAtB;AACd,MAAIkK,QAAJ;AAAW,UAAM,IAAIK,eAAaL,MAAjB;EANY;AAO7B,SAAO,IAAI5J,QAAME,IAAI,MAAMR,OAAOS,IAAI,MAAMT,OAAOU,IAAI,MAAMV,OAAOA,KAA7D;AAPsB;AAUjC,SAAS0F,KAAIR,KAAK4a,KAAK;AACnB,SAAO5a,OAAO4a;AADK;AAIvB,SAASjd,KAAIqC,KAAK4a,KAAK;AACnB/e,MAAMgf,IAAID,IAAI5a,GAAJ;AACV,SAAO,OAAO6a,MAAM,cAAc,OAAOA;AAFtB;AAKvB,SAASC,aAAaD,GAAGpf,GAAGvC,GAAGwT,GAAG;AAC9B,SAAOxT,KAAKwT,GAAG;AACX7Q,QAAMkf,IAAK7hB,IAAIwT,KAAM;AACrB,QAAIjR,EAAEsf,CAAF,MAASF,GACT;AAAA,aAAO;IAHA;AAIX,QAAIpf,EAAEsf,CAAF,IAAOF,GAAX;AACInO,UAAIqO,IAAI;IADZ,OAAA;AAGI7hB,UAAI6hB,IAAI;IAPD;EAAA;AASf,SAAO;AAVuB;AAalC,SAASC,QAAQnd,MAAqB;AAClC,SAAO,EAAA,KAAA;AAD2B;AAItCqL,qBAAmBoB,SAASqQ,aAAa;EACrC,SAAS;IACL1Z;IACA,CAACL,UAAD;IAFK,SAGJmF,KAAD,KAAc;;AAAE,YAAM,IAAIV,eAAawV,EAAE3V,SAASa,GAAX,CAAjB;IAAR;EAHT;EAKT,UAAU;IACNnF;IACA,CAACI,SAAD;IACA,SAAC+E,KAAD,KAAO8U;;aAAOI,WAAaxW,OAAOoW,EAAE3V,SAASa,GAAX,CAAP,CAAb;IAHR;EAAA;EAKV,WAAW;IACP1E,QAAMV,YAAY,CAAlB;IACA,CAACG,SAAD;IAFO,SAGNiF,KAAD,KAAc;;AACV,aAAO8U,EAAE3V,SAASa,GAAX,EAAgB/J,QAAhB;IADG;EAHP;EAOX,OAAO;IACH8E;IACA;MAACH;MAAYA;MAAYA;IAAzB;IACA7E;EAHG;EAKP,QAAQ;IACJgF;IACA;MAACH;MAAYA;MAAYA;MAAYA;IAArC;IACA7E;EAHI;EAKR,OAAO;IACH+B,MAAMgD;IACN0I,WAAW;MACP;QACI,CAAC3I,UAAD;QACA,SAACmF,KAAD,KAAO/F;;iBAASQ,KAAIR,IAAIkF,SAASa,GAAb,GAAmBA,IAAIuC,WAAJ,CAAvB;QAFpB;MAAA;MAGG;QACC;UAAC1H;UAAYG;QAAb;QACA,SAACgF,KAAD,KAAO/F;AAAK4a,cAAAA,MAAAA,IAAAA,CAAAA;;AAASpa,iBAAAA,KAAIR,IAAIkF,SAASa,GAAb,GAAmB6U,IAAI1V,SAASa,GAAb,CAAvB;QAFtB;MAAA;IAJI;EAFR;EAYP,OAAO;IACHlI,MAAMmD;IACNuI,WAAW;MACP;QACI,CAAC3I,UAAD;QACA,SAACmF,KAAD,KAAO/F;;iBAASrC,KAAIqC,IAAIkF,SAASa,GAAb,GAAmBA,IAAIuC,WAAJ,CAAvB;QAFpB;MAAA;MAGG;QACC;UAAC1H;UAAYG;QAAb;QACA,SAACgF,KAAD,KAAO/F;AAAK4a,cAAAA,MAAAA,IAAAA,CAAAA;;AAASjd,iBAAAA,KAAIqC,IAAIkF,SAASa,GAAb,GAAmB6U,IAAI1V,SAASa,GAAb,CAAvB;QAFtB;MAAA;IAJI;EAFR;EAYP,iBAAiB;IACb/E;IACA,CAACJ,UAAD;IACA,SAACmF,KAAD,KAAO/F;;AAASrC,aAAAA,KAAIqC,IAAIkF,SAASa,GAAb,GAAmBA,IAAI6B,gBAAgB,CAAA,CAA3C;IAHH;EAAA;EAKjB,cAAc;IACV7G;IACA,CAAA;IAFU,SAGTgF,KAAD;AAAA,aAASA,IAAIuC,WAAJ;IAHC;EAAA;EAKd,iBAAiB;IACb1H;IACA,CAAA;IAFa,SAGZmF,KAAD;AAAA,aAASA,IAAIoC,aAAJ;IAHI;EAAA;EAKjB,MAAM;IACFnH;IACA,CAAA;IAFE,SAGD+E,KAAD;AAAA,aAASA,IAAImC,GAAJ;IAHP;EAAA;EAKN,QAAQ;IACJvH;IACA,CAAA;IAFI,SAGHoF,KAAQA;AAAAA,aAAAA,IAAI2B,QAAQlJ;IAHjB;EAAA;EAKR,SAAS;IACLmC;IACA,CAAA;IACCoF,SAAAA,KAAAA;AAAAA,aAAQA,IAAI2B,QAAQwT,SAAS;IAHzB;EAAA;EAKT,wBAAwB;IACpBva;IACA,CAAA;IAFoB,SAGnBoF,KAAD;AAAA,aAASA,IAAIwC,mBAAJ;IAHW;EAAA;EAKxB,mBAAmB;IACf5H;IACA,CAAA;IACCoF,SAAAA,KAAAA;AAAAA,aAAQA,IAAI2B,QAAQyT,kBAAkB;IAHxB;EAAA;EAKnB,iBAAiB;IACbxa;IACA,CAAA;IACCoF,SAAAA,KAAAA;AAAAA,aAAQA,IAAI2B,QAAQ0T,gBAAgB;IAHxB;EAAA;EAKjB,uBAAuB;IACnBza;IACA,CAAA;IACCoF,SAAAA,KAAAA;AAAAA,aAAQA,IAAI2B,QAAQ2T,qBAAqB;IAHvB;EAAA;EAKvB,eAAe;IACXra;IACA,CAAA;IAFW,SAGV+E,KAAQA;AAAAA,aAAAA,IAAI2B,QAAQ4T,gBAAgB1f,SAAY,OAAOmK,IAAI2B,QAAQ4T;IAHzD;EAAA;EAKf,KAAK;IACD3a;IACAqa,QAAQra,UAAR;IAFC,SAGAoF,KAAKjB,MAAS;AACXjI,UAAI2C,SAAS;AACb,eAAA,IAAA,GAAA,OAAkBsF,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAbqB,YAAAA,MAAAA,KAAAA,CAAAA;AACP3G,kBAAU2G,IAAIjB,SAASa,GAAb;MADU;AAGxB,aAAOvG;IALI;EAHd;EAWL,KAAK;IACDmB;IACAqa,QAAQra,UAAR;IAFC,SAGAoF,KAAKjB,MAAS;AACXjI,UAAI2C,SAAS;AACb,eAAA,IAAA,GAAA,OAAkBsF,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAbqB,YAAAA,MAAAA,KAAAA,CAAAA;AACP3G,kBAAU2G,IAAIjB,SAASa,GAAb;MADU;AAGxB,aAAOvG;IALI;EAHd;EAWL,KAAK;IACD3B,MAAM8C;IACN4I,WAAW;MACP;QACI;UAAC5I;UAAYA;QAAb;QACA,SAACoF,KAAD,KAAOtK;AAAGD,cAAAA,IAAAA,IAAAA,CAAAA;;iBAAOC,EAAEyJ,SAASa,GAAX,IAAkBvK,EAAE0J,SAASa,GAAX;QAFvC;MAAA;MAGG;QACC,CAACpF,UAAD;QACA,SAACoF,KAAD,KAAOtK;;AAAO,iBAAA,CAACA,EAAEyJ,SAASa,GAAX;QAFhB;MAAA;IAJI;EAFV;EAYL,KAAK;IACDpF;IACA;MAACA;MAAYA;IAAb;IACA,SAACoF,KAAD,KAAOtK;AAAGD,UAAAA,IAAAA,IAAAA,CAAAA;;aAAOC,EAAEyJ,SAASa,GAAX,IAAkBvK,EAAE0J,SAASa,GAAX;IAHlC;EAAA;EAKL,KAAK;IACDpF;IACA;MAACA;MAAYA;IAAb;IACA,SAACoF,KAAD,KAAOtK;AAAGD,UAAAA,IAAAA,IAAAA,CAAAA;;aAAOC,EAAEyJ,SAASa,GAAX,IAAkBvK,EAAE0J,SAASa,GAAX;IAHlC;EAAA;EAKL,OAAO;IACHpF;IACA,CAAA;IACA,WAAA;AAAA,aAAMxH,KAAKoiB;IAHR;EAAA;EAKP,MAAM;IACF5a;IACA,CAAA;IACA,WAAA;AAAA,aAAMxH,KAAK+R;IAHT;EAAA;EAKN,KAAK;IACDvK;IACA,CAAA;IACA,WAAA;AAAA,aAAMxH,KAAKqiB;IAHV;EAAA;EAKL,KAAK;IACD7a;IACA;MAACA;MAAYA;IAAb;IACA,SAACoF,KAAD,KAAOvK;AAAGL,UAAAA,IAAAA,IAAAA,CAAAA;;AAAOhC,aAAAA,KAAKwS,IAAInQ,EAAE0J,SAASa,GAAX,GAAiB5K,EAAE+J,SAASa,GAAX,CAA1B;IAHhB;EAAA;EAKL,QAAQ;IACJpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0C;;aAAOtP,KAAKyb,KAAKnM,EAAEvD,SAASa,GAAX,CAAV;IAHV;EAAA;EAKR,SAAS;IACLpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;AAAOtiB,aAAAA,KAAKgS,IAAIsQ,EAAEvW,SAASa,GAAX,CAAT,IAA4B5M,KAAKuiB;IAH1C;EAAA;EAKT,MAAM;IACF/a;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAKgS,IAAIsQ,EAAEvW,SAASa,GAAX,CAAT;IAHZ;EAAA;EAKN,QAAQ;IACJpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;AAAOtiB,aAAAA,KAAKgS,IAAIsQ,EAAEvW,SAASa,GAAX,CAAT,IAA4B5M,KAAKoiB;IAH3C;EAAA;EAKR,OAAO;IACH5a;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAK6b,IAAIyG,EAAEvW,SAASa,GAAX,CAAT;IAHX;EAAA;EAKP,OAAO;IACHpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAK4b,IAAI0G,EAAEvW,SAASa,GAAX,CAAT;IAHX;EAAA;EAKP,OAAO;IACHpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAKiS,IAAIqQ,EAAEvW,SAASa,GAAX,CAAT;IAHX;EAAA;EAKP,QAAQ;IACJpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAKwiB,KAAKF,EAAEvW,SAASa,GAAX,CAAV;IAHV;EAAA;EAKR,QAAQ;IACJpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAKyiB,KAAKH,EAAEvW,SAASa,GAAX,CAAV;IAHV;EAAA;EAKR,QAAQ;IACJpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAK0iB,KAAKJ,EAAEvW,SAASa,GAAX,CAAV;IAHV;EAAA;EAKR,OAAO;IACHpF;IACAqa,QAAQra,UAAR;IACA,SAACoF,KAAKjB,MAAN;AAAA,aAAe3L,KAAKyR,IAAL,MAAA,MAAY9F,KAAK1H,IAAI+I,SAAAA,KAAAA;AAAAA,eAAOA,IAAIjB,SAASa,GAAb;MAAhB,CAAA,CAAZ;IAHZ;EAAA;EAKP,OAAO;IACHpF;IACAqa,QAAQra,UAAR;IACA,SAACoF,KAAKjB,MAAN;AAAA,aAAe3L,KAAK0R,IAAL,MAAA,MAAY/F,KAAK1H,IAAI+I,SAAAA,KAAAA;AAAAA,eAAOA,IAAIjB,SAASa,GAAb;MAAhB,CAAA,CAAZ;IAHZ;EAAA;EAKP,OAAO;IACHpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAKia,IAAIqI,EAAEvW,SAASa,GAAX,CAAT;IAHX;EAAA;EAKP,SAAS;IACLpF;IACA,CAACA,UAAD;IAFK,SAGJoF,KAAD,KAAc;;AACVlK,UAAMgf,IAAIY,EAAEvW,SAASa,GAAX;AAIV,aAAO8U,IAAI,IAAI,CAAC1hB,KAAKC,MAAM,CAACyhB,CAAZ,IAAiB1hB,KAAKC,MAAMyhB,CAAX;IALvB;EAHT;EAWT,SAAS;IACLla;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAK0M,MAAM4V,EAAEvW,SAASa,GAAX,CAAX;IAHT;EAAA;EAKT,QAAQ;IACJpF;IACA,CAACA,UAAD;IACA,SAACoF,KAAD,KAAO0V;;aAAOtiB,KAAK2iB,KAAKL,EAAEvW,SAASa,GAAX,CAAV;IAHV;EAAA;EAKR,aAAa;IACTlF;IACA;MAACD;MAAYI;IAAb;IACA,SAAC+E,KAAD,KAAO8K;AAAGgK,UAAAA,IAAAA,IAAAA,CAAAA;;aAAO9U,IAAIuC,WAAJ,EAAkBuI,EAAQpU,KAA1B,MAAsCoe,EAAQpe;IAHtD;EAAA;EAKb,gBAAgB;IACZoE;IACA,CAACG,SAAD;IACA,SAAC+E,KAAD,KAAO8U;;AAAO9U,aAAAA,IAAImC,GAAJ,MAAc2S,EAAQpe;IAHxB;EAAA;EAKhB,kBAAkB;IACdoE;IACA,CAACD,UAAD;IACA,SAACmF,KAAD,KAAO8U;;AAAO9U,aAAAA,IAAIoC,aAAJ,MAAwB0S,EAAQpe;IAHhC;EAAA;EAKlB,YAAY;IACRoE;IACA;MAACD;MAAYI;IAAb;IAFQ,SAGP+E,KAAD,KAAiB;AAAP8U,UAAAA,IAAAA,IAAAA,CAAAA;;AACNhf,UAAMJ,IAAIsK,IAAIuC,WAAJ,EAAkBuI,EAAQpU,KAA1B;AACVZ,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,IAAID;IAHvB;EAHT;EASZ,eAAe;IACXqF;IACA,CAACG,SAAD;IAFW,SAGV+E,KAAD,KAAc;;AACVlK,UAAMJ,IAAIsK,IAAImC,GAAJ;AACVrM,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,IAAID;IAH1B;EAHH;EASf,YAAY;IACRqF;IACA;MAACD;MAAYI;IAAb;IAFQ,SAGP+E,KAAD,KAAiB;AAAP8U,UAAAA,IAAAA,IAAAA,CAAAA;;AACNhf,UAAMJ,IAAIsK,IAAIuC,WAAJ,EAAkBuI,EAAQpU,KAA1B;AACVZ,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,IAAID;IAHvB;EAHT;EASZ,eAAe;IACXqF;IACA,CAACG,SAAD;IAFW,SAGV+E,KAAD,KAAc;;AACVlK,UAAMJ,IAAIsK,IAAImC,GAAJ;AACVrM,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,IAAID;IAH1B;EAHH;EASf,aAAa;IACTqF;IACA;MAACD;MAAYI;IAAb;IAFS,SAGR+E,KAAD,KAAiB;AAAP8U,UAAAA,IAAAA,IAAAA,CAAAA;;AACNhf,UAAMJ,IAAIsK,IAAIuC,WAAJ,EAAkBuI,EAAQpU,KAA1B;AACVZ,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,KAAKD;IAHxB;EAHR;EASb,gBAAgB;IACZqF;IACA,CAACG,SAAD;IAFY,SAGX+E,KAAD,KAAc;;AACVlK,UAAMJ,IAAIsK,IAAImC,GAAJ;AACVrM,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,KAAKD;IAH3B;EAHF;EAShB,aAAa;IACTqF;IACA;MAACD;MAAYI;IAAb;IAFS,SAGR+E,KAAD,KAAiB;AAAP8U,UAAAA,IAAAA,IAAAA,CAAAA;;AACNhf,UAAMJ,IAAIsK,IAAIuC,WAAJ,EAAkBuI,EAAQpU,KAA1B;AACVZ,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,KAAKD;IAHxB;EAHR;EASb,gBAAgB;IACZqF;IACA,CAACG,SAAD;IAFY,SAGX+E,KAAD,KAAc;;AACVlK,UAAMJ,IAAIsK,IAAImC,GAAJ;AACVrM,UAAML,IAAKqf,EAAQpe;AACnB,aAAO,OAAOhB,MAAM,OAAOD,KAAKC,KAAKD;IAH3B;EAHF;EAShB,cAAc;IACVqF;IACA,CAACG,SAAD;IACA,SAAC+E,KAAD,KAAO8K;;AAAQA,aAAAA,EAAQpU,SAASsJ,IAAIuC,WAAJ;IAHtB;EAAA;EAKd,iBAAiB;IACbzH;IACA,CAAA;IAFa,SAGZkF,KAAD;AAAA,aAAUA,IAAImC,GAAJ,MAAa,QAAQnC,IAAImC,GAAJ,MAAatM;IAH/B;EAAA;EAKjB,kBAAkB;IACdiF;IACA,CAACQ,QAAMT,UAAN,CAAD;IACA,SAACmF,KAAD,KAAO8U;;aAAQA,EAAQpe,MAAMhC,QAAQsL,IAAIoC,aAAJ,CAAvB,KAA8C;IAH9C;EAAA;EAKlB,gBAAgB;IACZtH;IACA,CAACQ,QAAML,SAAN,CAAD;IACA,SAAC+E,KAAD,KAAO8U;;aAAQA,EAAQpe,MAAMhC,QAAQsL,IAAImC,GAAJ,CAAvB,KAAoC;IAHtC;EAAA;EAKhB,mBAAmB;IACfrH;IACA;MAACD;MAAYS,QAAML,SAAN;IAAb;;IAEC+E,SAAAA,KAAD,KAAO8K;AAAGgK,UAAAA,IAAAA,IAAAA,CAAAA;;AAAQA,aAAAA,EAAQpe,MAAMhC,QAAQsL,IAAIuC,WAAJ,EAAkBuI,EAAQpU,KAA1B,CAAvB,KAA4D;IAJ9D;EAAA;EAMnB,mBAAmB;IACfoE;IACA;MAACD;MAAYS,QAAML,SAAN;IAAb;;IAEA,SAAC+E,KAAD,KAAO8K;AAAGgK,UAAAA,IAAAA,IAAAA,CAAAA;;aAAOC,aAAa/U,IAAIuC,WAAJ,EAAkBuI,EAAQpU,KAA1B,GAAmCoe,EAAQpe,OAAO,GAAIoe,EAAQpe,MAAMhD,SAAS,CAA1F;IAJF;EAAA;EAMnB,OAAO;IACHoE,MAAMgD;IACN0I,WAAW;MACP;QACI;UAAC1I;UAAaA;QAAd;QACA,SAACkF,KAAD,KAAOtK;AAAGD,cAAAA,IAAAA,IAAAA,CAAAA;;iBAAOC,EAAEyJ,SAASa,GAAX,KAAmBvK,EAAE0J,SAASa,GAAX;QAFxC;MAAA;MAIA;QACIiV,QAAQna,WAAR;QADJ,SAEKkF,KAAKjB,MAAS;AACX,mBAAA,IAAA,GAAA,OAAkBA,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAbqB,gBAAAA,MAAAA,KAAAA,CAAAA;AACP,gBAAI,CAACA,IAAIjB,SAASa,GAAb,GACD;AAAA,qBAAO;YAFS;UAAA;AAIxB,iBAAO;QALI;MAFnB;IALO;EAFR;EAmBP,OAAO;IACHlI,MAAMgD;IACN0I,WAAW;MACP;QACI;UAAC1I;UAAaA;QAAd;QACA,SAACkF,KAAD,KAAOtK;AAAGD,cAAAA,IAAAA,IAAAA,CAAAA;;iBAAOC,EAAEyJ,SAASa,GAAX,KAAmBvK,EAAE0J,SAASa,GAAX;QAFxC;MAAA;MAIA;QACIiV,QAAQna,WAAR;QADJ,SAEKkF,KAAKjB,MAAS;AACX,mBAAA,IAAA,GAAA,OAAkBA,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAbqB,gBAAAA,MAAAA,KAAAA,CAAAA;AACP,gBAAIA,IAAIjB,SAASa,GAAb,GACA;AAAA,qBAAO;YAFS;UAAA;AAIxB,iBAAO;QALI;MAFnB;IALO;EAFR;EAmBP,KAAK;IACDlF;IACA,CAACA,WAAD;IACA,SAACkF,KAAD,KAAOvK;;AAAO,aAAA,CAACA,EAAE0J,SAASa,GAAX;IAHd;EAAA;EAKL,uBAAuB;IACnBlF;IACA,CAACD,UAAD;;IAEA,SAACmF,KAAD,KAAc;;AACVlK,UAAMkgB,oBAAoBhW,IAAI2B,WAAW3B,IAAI2B,QAAQqU;AACrD,UAAIA,mBAAmB;AACnB,eAAOA,kBAAkB/gB,EAAEkK,SAASa,GAAX,CAAlB;MADY;AAGvB,aAAO;IALG;EAJK;EAYvB,UAAU;IACNnF;IACA,CAACA,UAAD;IACA,SAACmF,KAAD,KAAO/K;;AAAOA,aAAAA,EAAEkK,SAASa,GAAX,EAAgBiW,YAAhB;IAHR;EAAA;EAKV,YAAY;IACRpb;IACA,CAACA,UAAD;IACA,SAACmF,KAAD,KAAO/K;;AAAOA,aAAAA,EAAEkK,SAASa,GAAX,EAAgB3L,YAAhB;IAHN;EAAA;EAKZ,UAAU;IACNwG;IACAoa,QAAQha,SAAR;IACA,SAAC+E,KAAKjB,MAAN;AAAA,aAAeA,KAAK1H,IAAI+I,SAAAA,KAAOmB;AAAAA,eAAAA,UAAcnB,IAAIjB,SAASa,GAAb,CAAd;MAAhB,CAAA,EAAkDhC,KAAK,EAAvD;IAHT;EAAA;EAKV,mBAAmB;IACfnD;IACA,CAACM,YAAD;IACA,SAAC6E,KAAD,KAAOtD;;AAAcA,aAAAA,SAASyC,SAASa,GAAlB,EAAuBhD,eAAvB;IAHN;EAAA;AA9bkB,CAAzC;AAqcA,IAAA,cAAA;ACvjBO,SAASkZ,QAAcxf,OAAwB;AAClD,SAAO;IAAC+C,QAAQ;IAAT;EAAA;AAD2C;AAI/C,SAASwF,OAAYvI,OAAwB;AAChD,SAAO;IAAC+C,QAAQ;IAAT;EAAA;AADyC;ACZ7C,SAAS0c,2BAA2BC,OAA2C;AAClF,SAAOA,MAAK,eAAL,MAA0B;AADiD;AAI/E,SAASC,uBAAuBD,OAA2C;AAC9E,SAAO,CAAC,CAACA,MAAKle,cAAcke,MAAKle,WAAWtB,WAAWlC,QAAQ,MAAnC,IAA6C;AADK;AAI3E,SAAS4hB,sBAAsBF,OAA2C;AAC7E,SAAO,CAAC,CAACA,MAAKle,cAAcke,MAAKle,WAAWsB;AADiC;ACA1E,SAAS+c,WAAW7f,OAAO;AAC9B,SAAO,OAAOA,UAAU,YAAYA,UAAU,QAAQ,CAACyF,MAAMC,QAAQ1F,KAAd;AADzB;ACuC3B,IAAM8f,kBAQTlhB,SAAAA,iBAAY4C,YAAwBrB,cAA2C;AAC3E,OAAKqB,aAAaA;AAClB,OAAKue,kBAAkB,CAAA;AACvB,OAAKC,aAAa,IAAIhV,oBAAJ;AAClB,OAAKiV,gBAAgB9f,eAAe+f,gBAAgB/f,YAAhB,IAAgC;AACpE,OAAKggB,cAAchgB,gBAAgBA,aAAaiB,SAAS,SAASjB,aAAaoB,SAAS;AAbnE;AAgBzB6e,gBAAAA,UAAAA,+BAAAA,SAAAA,6BAA6BnV,SAA2BC,SAAmBC,cAA6BG,WAA6BjB,iBAAiCe,kBAAqCG,kBAA0BC,qBAAgD;AACjR,OAAKwU,WAAW/U,UAAUA;AAC1B,OAAK+U,WAAW9U,UAAUA;AAC1B,OAAK8U,WAAW7U,eAAeA;AAC/B,OAAK6U,WAAW1U,YAAYA,aAAa;AACzC,OAAK0U,WAAW3V,kBAAkBA,mBAAmB;AACrD,OAAK2V,WAAW5U,mBAAmBA;AACnC,OAAK4U,WAAWzU,mBAAmBA,oBAAoB;AACvD,OAAKyU,WAAWxU,sBAAsBA,uBAAuB;AAE7D,SAAO,KAAKhK,WAAWiH,SAAS,KAAKuX,UAA9B;AA1Bc;AA6BzBvX,gBAAAA,UAAAA,WAAAA,SAAAA,WAASwC,SAA2BC,SAAmBC,cAA6BG,WAA6BjB,iBAAiCe,kBAAqCG,kBAA0BC,qBAAgD;AAC7P,OAAKwU,WAAW/U,UAAUA;AAC1B,OAAK+U,WAAW9U,UAAUA,WAAW;AACrC,OAAK8U,WAAW7U,eAAeA,gBAAgB;AAC/C,OAAK6U,WAAW1U,YAAYA,aAAa;AACzC,OAAK0U,WAAW3V,kBAAkBA,mBAAmB;AACrD,OAAK2V,WAAW5U,mBAAmBA,oBAAoB;AACvD,OAAK4U,WAAWzU,mBAAmBA,oBAAoB;AACvD,OAAKyU,WAAWxU,sBAAsBA,uBAAuB;AAE7D,MAAI;AACApM,QAAMihB,MAAM,KAAK7e,WAAWiH,SAAS,KAAKuX,UAA9B;AAEZ,QAAIK,QAAQ,QAAQA,QAAQlhB,UAAc,OAAOkhB,QAAQ,YAAYA,QAAQA,KAAM;AAC/E,aAAO,KAAKJ;IADmE;AAGnF,QAAI,KAAKE,eAAe,EAAEE,OAAO,KAAKF,cAAc;AAChD,YAAM,IAAIvX,eAAa,iCAA+BvH,OAAOC,KAAK,KAAK6e,WAAjB,EAA8Bxf,IAA9B,SAAkCyd,GAAKlW;AAAAA,eAAAA,KAAKC,UAAUiW,CAAf;MAAA,CAAvC,EAA0D9W,KAAK,IAA/D,IAAmFY,iBAAAA,KAAKC,UAAUkY,GAAf,IAAlH,WAAA;IADyB;AAGpD,WAAOA;EATP,SAUK3hB,GAAP;AACE,QAAI,CAAC,KAAKqhB,gBAAgBrhB,EAAE8E,OAAvB,GAAiC;AAClC,WAAKuc,gBAAgBrhB,EAAE8E,OAAvB,IAAkC;AAClC,UAAI,OAAO8c,YAAY,aAAa;AAChCA,gBAAQC,KAAK7hB,EAAE8E,OAAf;MADgC;IAFF;AAMtC,WAAO,KAAKyc;EAPJ;AAjDS;AA6DtB,SAASO,aAAahf,YAA4B;AACrD,SAAOiE,MAAMC,QAAQlE,UAAd,KAA6BA,WAAWxE,SAAS,KACpD,OAAOwE,WAAW,CAAX,MAAkB,YAAYA,WAAW,CAAX,KAAiBoL;AAFL;AAclD,SAAS6T,iBAAiBjf,YAAmBrB,cAAyF;AACzIf,MAAMshB,SAAS,IAAIvT,iBAAeP,aAAa,CAAA,GAAIzM,eAAewgB,gBAAgBxgB,YAAhB,IAAgChB,MAAnF;AAGfC,MAAMiK,SAASqX,OAAOzhB,MAAMuC,YAAYrC,QAAWA,QAAWA,QAC1DgB,gBAAgBA,aAAaiB,SAAS,WAAW,EAAC2S,gBAAgB,SAAjB,IAA6B5U,MADnE;AAGf,MAAI,CAACkK,QAAQ;AAET,WAAOd,OAAMmY,OAAOjT,MAAb;EAFE;AAKb,SAAO+R,QAAQ,IAAIM,gBAAgBzW,QAAQlJ,YAA5B,CAAR;AAZkI;AAetI,IAAMygB,yBAKThiB,SAAAA,wBAAYqF,MAAYzC,YAA6B;AACjD,OAAKyC,OAAOA;AACZ,OAAK4c,mBAAmBrf;AACxB,OAAKsf,mBAAmB7c,SAAU,cAA+B,CAACiQ,gBAA2B1S,WAAWA,UAAtC;AARhB;AAWtD4e,uBAAAA,UAAAA,+BAAAA,SAAAA,8BAA6BnV,SAA2BC,SAAmBC,cAA6BG,WAA6BjB,iBAAiCe,kBAA0C;AAC5M,SAAO,KAAKyV,iBAAiBT,6BAA6BnV,SAASC,SAASC,cAAcG,WAAWjB,iBAAiBe,gBAA/G;AAZ2C;AAetD3C,uBAAAA,UAAAA,WAAAA,SAAAA,WAASwC,SAA2BC,SAAmBC,cAA6BG,WAA6BjB,iBAAiCe,kBAA0C;AACxL,SAAO,KAAKyV,iBAAiBpY,SAASwC,SAASC,SAASC,cAAcG,WAAWjB,iBAAiBe,gBAA3F;AAhB2C;AAoBnD,IAAM2V,0BAQTniB,SAAAA,yBAAYqF,MAAYzC,YAA6BM,WAA0Bkf,mBAAuC;AAClH,OAAK/c,OAAOA;AACZ,OAAKnC,YAAYA;AACjB,OAAK+e,mBAAmBrf;AACxB,OAAKsf,mBAAmB7c,SAAU,YAA6B,CAACiQ,gBAA2B1S,WAAWA,UAAtC;AAChE,OAAKwf,oBAAoBA;AAb0B;AAgBvDZ,wBAAAA,UAAAA,+BAAAA,SAAAA,8BAA6BnV,SAA2BC,SAAmBC,cAA6BG,WAA6BjB,iBAAiCe,kBAA0C;AAC5M,SAAO,KAAKyV,iBAAiBT,6BAA6BnV,SAASC,SAASC,cAAcG,WAAWjB,iBAAiBe,gBAA/G;AAjB4C;AAoBvD3C,wBAAAA,UAAAA,WAAAA,SAAAA,WAASwC,SAA2BC,SAAmBC,cAA6BG,WAA6BjB,iBAAiCe,kBAA0C;AACxL,SAAO,KAAKyV,iBAAiBpY,SAASwC,SAASC,SAASC,cAAcG,WAAWjB,iBAAiBe,gBAA3F;AArB4C;AAwBvD8N,wBAAAA,UAAAA,sBAAAA,SAAAA,qBAAoBha,OAAeia,OAAeC,OAAuB;AACrE,MAAI,KAAK4H,mBAAmB;AACxB,WAAOjI,cAAYG,oBAAoB,KAAK8H,mBAAmB9hB,OAAOia,OAAOC,KAAtE;EADiB,OAErB;AACH,WAAO;EADJ;AA3B4C;AAmEpD,SAAS6H,yBAAyBzf,YAAmBrB,cAAgG;AACxJqB,eAAaif,iBAAiBjf,YAAYrB,YAA7B;AACb,MAAIqB,WAAWuB,WAAW,SAAS;AAC/B,WAAOvB;EADwB;AAInCpC,MAAMiK,SAAS7H,WAAWxB,MAAMwB;AAEhCpC,MAAMgU,sBAAoBc,kBAA6B7K,MAA7B;AAC1B,MAAI,CAAC+J,uBAAqB,CAACqM,2BAA2Btf,YAA3B,GAA0C;AACjE,WAAOoI,OAAM,CAAC,IAAIjF,eAAa,IAAI,gCAArB,CAAD,CAAN;EAD0D;AAIrElE,MAAM8hB,iBAAiBhN,yBAAoC7K,QAAQ;IAAC;IAAQ;IAAS;EAAlB,CAA5C;AACvB,MAAI,CAAC6X,kBAAkB,CAACvB,uBAAuBxf,YAAvB,GAAsC;AAC1D,WAAOoI,OAAM,CAAC,IAAIjF,eAAa,IAAI,gCAArB,CAAD,CAAN;EADmD;AAI9DlE,MAAM+hB,YAAYC,cAAc/X,MAAd;AAClB,MAAI,CAAC8X,aAAa,CAACD,gBAAgB;AAC/B,WAAO3Y,OAAM,CAAC,IAAIjF,eAAa,IAAI,gGAArB,CAAD,CAAN;EADwB,WAExB6d,qBAAqB7d,gBAAc;AAC1C,WAAOiF,OAAM,CAAC4Y,SAAD,CAAN;EADmC,WAEnCA,qBAAqBpI,iBAAe,CAAC6G,sBAAsBzf,YAAtB,GAAqC;AACjF,WAAOoI,OAAM,CAAC,IAAIjF,eAAa,IAAI,6DAArB,CAAD,CAAN;EAD0E;AAIrF,MAAI,CAAC6d,WAAW;AACZ,WAAO3B,QAAQpM,sBACV,IAAIwN,uBAAuB,YAAYpf,WAAWxB,KAAlD,IACA,IAAI4gB,uBAAuB,UAAUpf,WAAWxB,KAAhD,CAFE;EADK;AAMhBZ,MAAM4hB,oBAAoBG,qBAAqBpI,gBAAcoI,UAAUlI,gBAAgB9Z;AAEvF,SAAOqgB,QAAQpM,sBACV,IAAI2N,wBAAwB,UAAUvf,WAAWxB,OAAOmhB,UAAUrM,QAAQkM,iBAA1E,IACA,IAAID,wBAAwB,aAAavf,WAAWxB,OAAOmhB,UAAUrM,QAAQkM,iBAA7E,CAFE;AAnCiJ;AAmG5J,SAASI,cAAc5f,YAAkE;AACrFpB,MAAI2C,SAAS;AACb,MAAIvB,sBAAsB2Y,OAAK;AAC3BpX,aAASqe,cAAc5f,WAAWuB,MAAzB;EADkB,WAGpBvB,sBAAsBuY,YAAU;AACvC,aAAkBvY,IAAAA,GAAAA,OAAAA,WAAW6G,MAAAA,IAAAA,KAAAA,QAAAA,KAAAA,GAAM;AAAA,UAAxBqB,MAAAA,KAAAA,CAAAA;AACP3G,eAASqe,cAAc1X,GAAd;AACT,UAAI3G,QAAQ;AACR;MADQ;IAFmB;EADI,YAQ/BvB,sBAAsBqT,UAAQrT,sBAAsBuX,kBAC5DvX,WAAWtC,iBAAiBuN,wBAC5BjL,WAAWtC,MAAM2E,SAAS,QAAQ;AAElCd,aAASvB;EAFyB;AAKtC,MAAIuB,kBAAkBO,gBAAc;AAChC,WAAOP;EADyB;AAIpCvB,aAAWkH,UAAX,SAAsBoC,OAAU;AAC5B1L,QAAMiiB,cAAcD,cAActW,KAAd;AACpB,QAAIuW,uBAAuB/d,gBAAc;AACrCP,eAASse;IAD4B,WAE9B,CAACte,UAAUse,aAAa;AAC/Bte,eAAS,IAAIO,eAAa,IAAI,gGAArB;IADsB,WAExBP,UAAUse,eAAete,WAAWse,aAAa;AACxDte,eAAS,IAAIO,eAAa,IAAI,yFAArB;IAD+C;EANhC,CAAhC;AAWA,SAAOP;AAnC8E;AAwCzF,SAAS4d,gBAAgBjB,OAAwC;AAC7DtgB,MAAM0J,SAAQ;IACVgO,OAAOzS;IACP0E,QAAQ5E;IACR6E,QAAQ9E;IACRod,MAAMnd;IACN8E,SAAS7E;IACTmd,WAAW7c;IACX8c,eAAe7c;EAPL;AAUd,MAAI+a,MAAKte,SAAS,SAAS;AACvB,WAAOwD,QAAMkE,OAAM4W,MAAK1f,KAAX,KAAqBuE,WAAWmb,MAAK1iB,MAA3C;EADgB;AAI3B,SAAO8L,OAAM4W,MAAKte,IAAX;AAfsD;AAkBjE,SAAS8e,gBAAgBR,OAAyC;AAC9D,MAAIA,MAAKte,SAAS,YAAYye,WAAWH,MAAKve,OAAhB,KAA4BsE,MAAMC,QAAQga,MAAKve,OAAnB,IAA8B;AAI7E,WAAA,IAAIxC,QAAM,GAAG,GAAG,GAAG,CAAnB;EAJ6E,WAK7E+gB,MAAKte,SAAS,SAAS;AAC9B,WAAOzC,QAAMM,MAAMygB,MAAKve,OAAjB,KAA6B;EADN,WAEvBue,MAAKve,YAAYhC,QAAW;AACnC,WAAO;EAD4B,OAEhC;AACH,WAAOugB,MAAKve;EADT;AAVuD;AC9X3D,SAASsgB,SAASzhB,OAAqB;AAC1C,MAAIA,iBAAiB2K,UAAU3K,iBAAiBiI,UAAUjI,iBAAiBuK,SAAS;AAChF,WAAOvK,MAAM0hB,QAAN;EADyE,OAE7E;AACH,WAAO1hB;EADJ;AAHmC;AAQvC,SAAS2hB,aAAa3hB,OAAqB;AAC9C,MAAIyF,MAAMC,QAAQ1F,KAAd,GAAsB;AACtB,WAAOA,MAAMW,IAAIghB,YAAV;EADe,WAEf3hB,iBAAiBqB,UAAU,EAAErB,iBAAiB2K,UAAU3K,iBAAiBiI,UAAUjI,iBAAiBuK,UAAU;AACrHnL,QAAMwiB,iBAA2C,CAAA;AACjD,aAAWre,OAAOvD,OAAO;AACrB4hB,qBAAere,GAAf,IAAsBoe,aAAa3hB,MAAMuD,GAAN,CAAb;IADD;AAGzB,WAAOqe;EAL8G;AAQzH,SAAOH,SAASzhB,KAAT;AAXuC;ACXlD,IAAA,OAAe,EAAC,YAAW,GAAE,SAAQ,EAAC,WAAU,EAAC,YAAW,MAAK,QAAO,QAAO,UAAS,CAAC,CAAC,EAAC,GAAE,QAAO,EAAC,QAAO,SAAQ,GAAE,YAAW,EAAC,QAAO,IAAG,GAAE,UAAS,EAAC,QAAO,SAAQ,SAAQ,SAAQ,GAAE,QAAO,EAAC,QAAO,SAAQ,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,GAAE,UAAS,KAAI,SAAQ,UAAS,GAAE,SAAQ,EAAC,QAAO,UAAS,WAAU,GAAE,SAAQ,UAAS,GAAE,SAAQ,EAAC,QAAO,QAAO,GAAE,WAAU,EAAC,QAAO,UAAS,GAAE,OAAM,EAAC,QAAO,MAAK,GAAE,WAAU,EAAC,YAAW,MAAK,QAAO,UAAS,GAAE,UAAS,EAAC,QAAO,SAAQ,GAAE,UAAS,EAAC,QAAO,SAAQ,GAAE,cAAa,EAAC,QAAO,aAAY,GAAE,cAAa,EAAC,QAAO,aAAY,GAAE,UAAS,EAAC,YAAW,MAAK,QAAO,SAAQ,SAAQ,QAAO,EAAC,GAAE,WAAU,EAAC,KAAI,EAAC,QAAO,SAAQ,EAAC,GAAE,UAAS,CAAC,iBAAgB,iBAAgB,qBAAoB,kBAAiB,gBAAe,cAAc,GAAE,iBAAgB,EAAC,QAAO,EAAC,YAAW,MAAK,QAAO,QAAO,UAAS,EAAC,UAAS,CAAA,EAAE,EAAC,GAAE,OAAM,EAAC,QAAO,SAAQ,GAAE,SAAQ,EAAC,QAAO,SAAQ,SAAQ,SAAQ,GAAE,UAAS,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,MAAK,YAAW,KAAI,SAAS,EAAC,GAAE,UAAS,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,OAAM,CAAA,EAAE,GAAE,WAAU,MAAK,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,EAAC,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,GAAE,GAAE,eAAc,EAAC,QAAO,SAAQ,GAAE,aAAY,EAAC,QAAO,YAAW,GAAE,YAAW,EAAC,QAAO,WAAU,WAAU,MAAK,GAAE,KAAI,EAAC,QAAO,IAAG,EAAC,GAAE,iBAAgB,EAAC,QAAO,EAAC,YAAW,MAAK,QAAO,QAAO,UAAS,EAAC,UAAS,CAAA,EAAE,EAAC,GAAE,OAAM,EAAC,QAAO,SAAQ,GAAE,SAAQ,EAAC,QAAO,SAAQ,SAAQ,SAAQ,GAAE,UAAS,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,MAAK,YAAW,KAAI,SAAS,EAAC,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,EAAC,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,GAAE,GAAE,YAAW,EAAC,QAAO,UAAS,WAAU,KAAI,SAAQ,SAAQ,GAAE,UAAS,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,OAAM,CAAA,EAAE,GAAE,WAAU,MAAK,GAAE,eAAc,EAAC,QAAO,SAAQ,GAAE,YAAW,EAAC,QAAO,WAAU,WAAU,MAAK,GAAE,KAAI,EAAC,QAAO,IAAG,EAAC,GAAE,qBAAoB,EAAC,QAAO,EAAC,YAAW,MAAK,QAAO,QAAO,UAAS,EAAC,cAAa,CAAA,EAAE,EAAC,GAAE,OAAM,EAAC,QAAO,SAAQ,GAAE,SAAQ,EAAC,QAAO,SAAQ,SAAQ,SAAQ,GAAE,UAAS,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,MAAK,YAAW,KAAI,SAAS,EAAC,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,EAAC,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,GAAE,GAAE,YAAW,EAAC,QAAO,UAAS,WAAU,KAAI,SAAQ,SAAQ,GAAE,eAAc,EAAC,QAAO,SAAQ,GAAE,YAAW,EAAC,QAAO,QAAO,UAAS,EAAC,aAAY,CAAA,GAAG,UAAS,CAAA,EAAE,GAAE,WAAU,SAAQ,GAAE,YAAW,EAAC,QAAO,WAAU,WAAU,MAAK,GAAE,KAAI,EAAC,QAAO,IAAG,EAAC,GAAE,kBAAiB,EAAC,QAAO,EAAC,YAAW,MAAK,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,EAAE,EAAC,GAAE,QAAO,EAAC,QAAO,IAAG,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,GAAE,GAAE,eAAc,EAAC,QAAO,SAAQ,GAAE,UAAS,EAAC,QAAO,UAAS,WAAU,KAAI,WAAU,KAAI,WAAU,EAAC,GAAE,UAAS,EAAC,QAAO,IAAG,GAAE,aAAY,EAAC,QAAO,UAAS,WAAU,MAAK,GAAE,WAAU,EAAC,QAAO,WAAU,WAAU,MAAK,GAAE,iBAAgB,EAAC,QAAO,UAAS,WAAU,IAAG,WAAU,EAAC,GAAE,kBAAiB,EAAC,QAAO,SAAQ,GAAE,oBAAmB,EAAC,QAAO,SAAQ,GAAE,qBAAoB,EAAC,QAAO,IAAG,GAAE,eAAc,EAAC,QAAO,WAAU,WAAU,MAAK,GAAE,cAAa,EAAC,QAAO,WAAU,WAAU,MAAK,GAAE,aAAY,EAAC,QAAO,YAAW,EAAC,GAAE,gBAAe,EAAC,QAAO,EAAC,YAAW,MAAK,QAAO,QAAO,UAAS,EAAC,SAAQ,CAAA,EAAE,EAAC,GAAE,QAAO,EAAC,YAAW,MAAK,QAAO,SAAQ,SAAQ,SAAQ,GAAE,eAAc,EAAC,YAAW,MAAK,QAAO,SAAQ,UAAS,GAAE,SAAQ,EAAC,QAAO,SAAQ,UAAS,GAAE,SAAQ,SAAQ,EAAC,EAAC,GAAE,gBAAe,EAAC,QAAO,EAAC,YAAW,MAAK,QAAO,QAAO,UAAS,EAAC,SAAQ,CAAA,EAAE,EAAC,GAAE,OAAM,EAAC,YAAW,MAAK,QAAO,SAAQ,GAAE,eAAc,EAAC,YAAW,MAAK,QAAO,SAAQ,UAAS,GAAE,SAAQ,EAAC,QAAO,SAAQ,UAAS,GAAE,SAAQ,SAAQ,EAAC,EAAC,GAAE,SAAQ,EAAC,MAAK,EAAC,QAAO,UAAS,YAAW,KAAI,GAAE,QAAO,EAAC,QAAO,QAAO,UAAS,EAAC,QAAO,CAAA,GAAG,QAAO,CAAA,GAAG,UAAS,CAAA,GAAG,UAAS,CAAA,GAAG,WAAU,CAAA,GAAG,kBAAiB,CAAA,GAAG,UAAS,CAAA,GAAG,aAAY,CAAA,GAAG,cAAa,CAAA,GAAG,OAAM,CAAA,EAAE,GAAE,YAAW,KAAI,GAAE,YAAW,EAAC,QAAO,IAAG,GAAE,UAAS,EAAC,QAAO,SAAQ,GAAE,gBAAe,EAAC,QAAO,SAAQ,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,GAAE,WAAU,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,GAAE,UAAS,EAAC,QAAO,SAAQ,GAAE,UAAS,EAAC,QAAO,SAAQ,GAAE,SAAQ,EAAC,QAAO,QAAO,EAAC,GAAE,UAAS,CAAC,eAAc,eAAc,iBAAgB,kBAAiB,yBAAwB,iBAAgB,iBAAgB,oBAAmB,qBAAoB,YAAY,GAAE,qBAAoB,EAAC,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,cAAa,EAAC,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,eAAc,EAAC,iBAAgB,EAAC,QAAO,UAAS,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,iBAAgB,EAAC,mBAAkB,EAAC,QAAO,UAAS,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,kBAAiB,EAAC,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,yBAAwB,EAAC,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,GAAE,8BAA6B,EAAC,QAAO,UAAS,WAAU,MAAK,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,iBAAgB,WAAU,EAAC,GAAE,eAAc,EAAC,YAAW,EAAC,QAAO,QAAO,UAAS,EAAC,QAAO,CAAA,GAAG,SAAQ,CAAA,GAAG,UAAS,CAAA,EAAE,GAAE,WAAU,QAAO,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,aAAY,EAAC,QAAO,QAAO,UAAS,EAAC,SAAQ,CAAA,GAAG,SAAQ,CAAA,GAAG,SAAQ,CAAA,EAAE,GAAE,WAAU,SAAQ,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,oBAAmB,EAAC,QAAO,UAAS,WAAU,GAAE,YAAW,CAAC,EAAC,aAAY,QAAO,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,oBAAmB,EAAC,QAAO,UAAS,WAAU,MAAK,YAAW,CAAC,EAAC,aAAY,QAAO,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,iBAAgB,EAAC,QAAO,UAAS,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,iBAAgB,EAAC,oBAAmB,EAAC,QAAO,QAAO,UAAS,EAAC,SAAQ,CAAA,GAAG,QAAO,CAAA,GAAG,eAAc,CAAA,EAAE,GAAE,WAAU,SAAQ,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,KAAI,WAAU,GAAE,SAAQ,UAAS,YAAW,CAAC,EAAC,oBAAmB,OAAM,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,sBAAqB,EAAC,QAAO,WAAU,WAAU,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,mBAAkB,EAAC,QAAO,UAAS,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,QAAO,UAAS,EAAC,QAAO,CAAA,GAAG,cAAa,CAAA,GAAG,UAAS,CAAA,EAAE,GAAE,WAAU,QAAO,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,sBAAqB,EAAC,QAAO,WAAU,WAAU,OAAM,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,WAAU,WAAU,OAAM,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,iBAAgB,EAAC,QAAO,WAAU,WAAU,OAAM,YAAW,CAAC,cAAa,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,2BAA0B,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,QAAO,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,aAAY,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,SAAQ,oCAAmC,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,iBAAgB,EAAC,QAAO,QAAO,UAAS,EAAC,QAAO,CAAA,GAAG,SAAQ,CAAA,GAAG,UAAS,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,QAAO,YAAW,CAAC,cAAa,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,GAAE,GAAE,CAAC,GAAE,SAAQ,UAAS,YAAW,CAAC,cAAa,cAAa,EAAC,iBAAgB,CAAC,QAAO,SAAQ,QAAQ,EAAC,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,cAAa,EAAC,QAAO,iBAAgB,UAAS,MAAK,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,eAAc,EAAC,QAAO,UAAS,WAAU,GAAE,UAAS,KAAI,SAAQ,WAAU,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,gBAAe,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,qBAAoB,EAAC,QAAO,WAAU,WAAU,OAAM,YAAW,CAAC,cAAa,EAAC,2BAA0B,MAAK,GAAE,EAAC,oBAAmB,CAAC,QAAO,aAAa,EAAC,CAAC,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,eAAc,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,eAAc,EAAC,QAAO,QAAO,UAAS,EAAC,UAAS,CAAA,GAAG,QAAO,CAAA,GAAG,SAAQ,CAAA,GAAG,OAAM,CAAA,GAAG,UAAS,CAAA,GAAG,YAAW,CAAA,GAAG,aAAY,CAAA,GAAG,eAAc,CAAA,GAAG,gBAAe,CAAA,EAAE,GAAE,WAAU,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,wBAAuB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,QAAO,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,wBAAuB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,QAAO,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,2BAA0B,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,QAAO,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,cAAa,EAAC,QAAO,aAAY,WAAU,IAAG,UAAS,MAAK,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,aAAY,EAAC,QAAO,SAAQ,SAAQ,UAAS,WAAU,CAAC,qBAAoB,0BAA0B,GAAE,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,aAAY,EAAC,QAAO,UAAS,WAAU,IAAG,WAAU,GAAE,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,IAAG,WAAU,GAAE,SAAQ,OAAM,YAAW,CAAC,cAAa,EAAC,oBAAmB,CAAC,OAAO,EAAC,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,oBAAmB,EAAC,QAAO,UAAS,WAAU,KAAI,SAAQ,OAAM,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,uBAAsB,EAAC,QAAO,UAAS,WAAU,GAAE,SAAQ,OAAM,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,gBAAe,EAAC,QAAO,QAAO,UAAS,EAAC,QAAO,CAAA,GAAG,QAAO,CAAA,GAAG,UAAS,CAAA,GAAG,SAAQ,CAAA,EAAE,GAAE,WAAU,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,sBAAqB,EAAC,QAAO,UAAS,SAAQ,OAAM,WAAU,GAAE,YAAW,CAAC,YAAY,GAAE,iBAAgB,eAAc,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,EAAC,GAAE,wBAAuB,EAAC,QAAO,SAAQ,SAAQ,QAAO,UAAS,EAAC,UAAS,CAAA,GAAG,QAAO,CAAA,GAAG,SAAQ,CAAA,GAAG,OAAM,CAAA,GAAG,UAAS,CAAA,GAAG,YAAW,CAAA,GAAG,aAAY,CAAA,GAAG,eAAc,CAAA,GAAG,gBAAe,CAAA,EAAE,GAAE,YAAW,CAAC,cAAa,EAAC,oBAAmB,CAAC,OAAO,EAAC,CAAC,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,eAAc,EAAC,QAAO,QAAO,UAAS,EAAC,UAAS,CAAA,GAAG,QAAO,CAAA,GAAG,SAAQ,CAAA,GAAG,OAAM,CAAA,GAAG,UAAS,CAAA,GAAG,YAAW,CAAA,GAAG,aAAY,CAAA,GAAG,eAAc,CAAA,GAAG,gBAAe,CAAA,EAAE,GAAE,WAAU,UAAS,YAAW,CAAC,cAAa,EAAC,KAAI,uBAAsB,CAAC,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,IAAG,SAAQ,WAAU,YAAW,CAAC,cAAa,EAAC,oBAAmB,CAAC,QAAO,aAAa,EAAC,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,qBAAoB,EAAC,QAAO,SAAQ,SAAQ,QAAO,UAAS,EAAC,cAAa,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,eAAc,EAAC,QAAO,UAAS,WAAU,GAAE,UAAS,KAAI,SAAQ,WAAU,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,gBAAe,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,qBAAoB,EAAC,QAAO,WAAU,WAAU,MAAK,YAAW,CAAC,cAAa,EAAC,2BAA0B,MAAK,GAAE,EAAC,oBAAmB,CAAC,QAAO,aAAa,EAAC,CAAC,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,kBAAiB,EAAC,QAAO,QAAO,UAAS,EAAC,QAAO,CAAA,GAAG,aAAY,CAAA,GAAG,aAAY,CAAA,EAAE,GAAE,WAAU,QAAO,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,eAAc,EAAC,QAAO,SAAQ,SAAQ,UAAS,SAAQ,OAAM,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,YAAW,CAAC,cAAa,EAAC,KAAI,qBAAoB,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,sBAAqB,EAAC,QAAO,WAAU,WAAU,OAAM,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,WAAU,WAAU,OAAM,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,iBAAgB,EAAC,QAAO,WAAU,WAAU,OAAM,YAAW,CAAC,cAAa,YAAY,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,iBAAgB,EAAC,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,oBAAmB,EAAC,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,WAAU,CAAA,GAAG,QAAO,CAAA,EAAE,GAAE,WAAU,WAAU,iBAAgB,WAAU,EAAC,GAAE,UAAS,EAAC,QAAO,SAAQ,SAAQ,IAAG,GAAE,iBAAgB,EAAC,QAAO,WAAU,WAAU,OAAM,cAAa,OAAM,iBAAgB,eAAc,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,WAAU,SAAQ,sBAAsB,EAAC,EAAC,GAAE,eAAc,EAAC,QAAO,WAAU,WAAU,OAAM,cAAa,OAAM,iBAAgB,eAAc,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,EAAC,GAAE,eAAc,EAAC,QAAO,WAAU,WAAU,OAAM,cAAa,OAAM,iBAAgB,eAAc,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,EAAC,GAAE,iBAAgB,EAAC,QAAO,WAAU,WAAU,OAAM,cAAa,OAAM,iBAAgB,eAAc,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,EAAC,GAAE,yBAAwB,EAAC,QAAO,WAAU,WAAU,OAAM,cAAa,OAAM,iBAAgB,eAAc,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,EAAC,GAAE,kBAAiB,EAAC,QAAO,WAAU,WAAU,OAAM,cAAa,OAAM,iBAAgB,eAAc,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,EAAC,GAAE,mBAAkB,EAAC,QAAO,QAAO,UAAS,EAAC,MAAK,CAAA,GAAG,MAAK,CAAA,GAAG,KAAI,CAAA,GAAG,MAAK,CAAA,GAAG,KAAI,CAAA,GAAG,MAAK,CAAA,GAAG,MAAK,CAAA,GAAG,OAAM,CAAA,GAAG,OAAM,CAAA,GAAG,OAAM,CAAA,GAAG,QAAO,CAAA,GAAG,OAAM,CAAA,GAAG,QAAO,CAAA,GAAG,UAAS,CAAA,EAAE,EAAC,GAAE,iBAAgB,EAAC,QAAO,QAAO,UAAS,EAAC,SAAQ,CAAA,GAAG,cAAa,CAAA,GAAG,WAAU,CAAA,EAAE,EAAC,GAAE,YAAW,EAAC,cAAa,EAAC,QAAO,aAAY,GAAE,SAAQ,EAAC,QAAO,SAAQ,SAAQ,gBAAe,GAAE,QAAO,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,EAAC,GAAE,YAAW,EAAC,QAAO,UAAS,WAAU,QAAO,GAAE,QAAO,EAAC,QAAO,QAAO,UAAS,EAAC,YAAW,CAAA,GAAG,eAAc,CAAA,GAAG,YAAW,CAAA,GAAG,eAAc,CAAA,EAAE,GAAE,WAAU,cAAa,GAAE,cAAa,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,OAAM,CAAA,GAAG,OAAM,CAAA,EAAE,GAAE,WAAU,MAAK,GAAE,WAAU,EAAC,QAAO,KAAI,YAAW,MAAK,EAAC,GAAE,iBAAgB,EAAC,QAAO,SAAQ,WAAU,GAAE,WAAU,IAAG,SAAQ,CAAC,UAAS,OAAO,GAAE,UAAS,EAAC,GAAE,cAAa,EAAC,QAAO,SAAQ,SAAQ,KAAI,WAAU,EAAC,GAAE,mBAAkB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,EAAC,SAAQ,mBAAkB,GAAE,OAAM,EAAC,SAAQ,mBAAkB,GAAE,WAAU,EAAC,SAAQ,QAAO,GAAE,SAAQ,EAAC,SAAQ,QAAO,GAAE,MAAK,EAAC,SAAQ,SAAQ,GAAE,MAAK,EAAC,SAAQ,SAAQ,GAAE,YAAW,EAAC,SAAQ,SAAQ,GAAE,SAAQ,EAAC,SAAQ,SAAQ,GAAE,QAAO,EAAC,SAAQ,WAAU,GAAE,SAAQ,EAAC,SAAQ,WAAU,GAAE,YAAW,EAAC,SAAQ,WAAU,GAAE,QAAO,EAAC,SAAQ,wBAAuB,GAAE,eAAc,EAAC,SAAQ,wBAAuB,GAAE,mBAAkB,EAAC,SAAQ,wBAAuB,GAAE,mBAAkB,EAAC,SAAQ,wBAAuB,GAAE,OAAM,EAAC,SAAQ,OAAM,GAAE,MAAK,EAAC,SAAQ,OAAM,GAAE,KAAI,EAAC,SAAQ,OAAM,GAAE,UAAS,EAAC,SAAQ,QAAO,GAAE,UAAS,EAAC,SAAQ,QAAO,GAAE,UAAS,EAAC,SAAQ,QAAO,GAAE,WAAU,EAAC,SAAQ,QAAO,GAAE,UAAS,EAAC,SAAQ,QAAO,GAAE,YAAW,EAAC,SAAQ,QAAO,GAAE,UAAS,EAAC,SAAQ,QAAO,GAAE,SAAQ,EAAC,SAAQ,QAAO,GAAE,iBAAgB,EAAC,SAAQ,QAAO,GAAE,aAAY,EAAC,SAAQ,QAAO,GAAE,aAAY,EAAC,SAAQ,QAAO,GAAE,cAAa,EAAC,SAAQ,QAAO,GAAE,WAAU,EAAC,SAAQ,QAAO,GAAE,YAAW,EAAC,SAAQ,QAAO,GAAE,OAAM,EAAC,SAAQ,QAAO,GAAE,QAAO,EAAC,SAAQ,QAAO,GAAE,OAAM,EAAC,SAAQ,SAAQ,GAAE,OAAM,EAAC,SAAQ,SAAQ,GAAE,UAAS,EAAC,SAAQ,SAAQ,GAAE,cAAa,EAAC,SAAQ,eAAc,GAAE,iBAAgB,EAAC,SAAQ,eAAc,GAAE,iBAAgB,EAAC,SAAQ,eAAc,GAAE,MAAK,EAAC,SAAQ,eAAc,GAAE,QAAO,EAAC,SAAQ,SAAQ,GAAE,SAAQ,EAAC,SAAQ,SAAQ,GAAE,wBAAuB,EAAC,SAAQ,SAAQ,GAAE,mBAAkB,EAAC,SAAQ,UAAS,GAAE,iBAAgB,EAAC,SAAQ,eAAc,GAAE,uBAAsB,EAAC,SAAQ,MAAK,GAAE,eAAc,EAAC,SAAQ,eAAc,GAAE,KAAI,EAAC,SAAQ,OAAM,GAAE,KAAI,EAAC,SAAQ,OAAM,GAAE,KAAI,EAAC,SAAQ,OAAM,GAAE,KAAI,EAAC,SAAQ,OAAM,GAAE,KAAI,EAAC,SAAQ,OAAM,GAAE,KAAI,EAAC,SAAQ,OAAM,GAAE,QAAO,EAAC,SAAQ,OAAM,GAAE,SAAQ,EAAC,SAAQ,OAAM,GAAE,MAAK,EAAC,SAAQ,OAAM,GAAE,QAAO,EAAC,SAAQ,OAAM,GAAE,OAAM,EAAC,SAAQ,OAAM,GAAE,OAAM,EAAC,SAAQ,OAAM,GAAE,OAAM,EAAC,SAAQ,OAAM,GAAE,QAAO,EAAC,SAAQ,OAAM,GAAE,QAAO,EAAC,SAAQ,OAAM,GAAE,QAAO,EAAC,SAAQ,OAAM,GAAE,OAAM,EAAC,SAAQ,OAAM,GAAE,OAAM,EAAC,SAAQ,OAAM,GAAE,SAAQ,EAAC,SAAQ,OAAM,GAAE,OAAM,EAAC,SAAQ,OAAM,GAAE,QAAO,EAAC,SAAQ,OAAM,GAAE,SAAQ,EAAC,SAAQ,OAAM,GAAE,YAAW,EAAC,SAAQ,OAAM,GAAE,MAAK,EAAC,SAAQ,WAAU,GAAE,MAAK,EAAC,SAAQ,WAAU,GAAE,KAAI,EAAC,SAAQ,WAAU,GAAE,KAAI,EAAC,SAAQ,WAAU,GAAE,MAAK,EAAC,SAAQ,WAAU,GAAE,MAAK,EAAC,SAAQ,WAAU,GAAE,OAAM,EAAC,SAAQ,WAAU,GAAE,OAAM,EAAC,SAAQ,WAAU,GAAE,KAAI,EAAC,SAAQ,WAAU,GAAE,UAAS,EAAC,SAAQ,WAAU,GAAE,uBAAsB,EAAC,SAAQ,SAAQ,GAAE,UAAS,EAAC,SAAQ,SAAQ,GAAE,YAAW,EAAC,SAAQ,SAAQ,GAAE,UAAS,EAAC,SAAQ,SAAQ,GAAE,mBAAkB,EAAC,SAAQ,SAAQ,EAAC,EAAC,GAAE,OAAM,EAAC,SAAQ,EAAC,QAAO,SAAQ,WAAU,CAAC,KAAI,EAAE,GAAE,WAAU,KAAI,WAAU,IAAG,UAAS,GAAE,SAAQ,UAAS,iBAAgB,iBAAgB,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,EAAC,GAAE,SAAQ,EAAC,QAAO,SAAQ,iBAAgB,iBAAgB,WAAU,WAAU,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,GAAE,cAAa,EAAC,QAAO,SAAQ,iBAAgB,iBAAgB,WAAU,WAAU,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,GAAE,eAAc,EAAC,QAAO,SAAQ,iBAAgB,iBAAgB,WAAU,CAAC,eAAc,CAAC,QAAQ,GAAE,CAAC,MAAM,GAAE,GAAE,WAAU,GAAE,SAAS,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,GAAE,iBAAgB,EAAC,QAAO,UAAS,iBAAgB,iBAAgB,WAAU,CAAC,eAAc,CAAC,QAAQ,GAAE,CAAC,MAAM,GAAE,GAAE,KAAI,GAAE,GAAG,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,GAAE,kBAAiB,EAAC,QAAO,UAAS,iBAAgB,iBAAgB,WAAU,CAAC,eAAc,CAAC,QAAQ,GAAE,CAAC,MAAM,GAAE,GAAE,MAAK,GAAE,CAAC,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,EAAC,GAAE,SAAQ,EAAC,UAAS,EAAC,QAAO,QAAO,WAAU,YAAW,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,iBAAgB,iBAAgB,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,EAAC,GAAE,YAAW,EAAC,QAAO,SAAQ,WAAU,CAAC,MAAK,KAAI,EAAE,GAAE,UAAS,GAAE,SAAQ,UAAS,iBAAgB,iBAAgB,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,EAAC,GAAE,SAAQ,EAAC,QAAO,SAAQ,iBAAgB,iBAAgB,WAAU,WAAU,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,GAAE,aAAY,EAAC,QAAO,UAAS,iBAAgB,iBAAgB,WAAU,KAAI,WAAU,GAAE,WAAU,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,EAAC,GAAE,cAAa,EAAC,QAAO,EAAC,QAAO,QAAO,UAAS,EAAC,UAAS,CAAA,GAAG,cAAa,CAAA,GAAG,mBAAkB,CAAA,GAAG,yBAAwB,CAAA,GAAG,YAAW,CAAA,GAAG,gBAAe,CAAA,GAAG,gBAAe,CAAA,GAAG,SAAQ,CAAA,EAAE,GAAE,WAAU,YAAW,YAAW,KAAI,GAAE,UAAS,EAAC,QAAO,SAAQ,UAAS,GAAE,SAAQ,UAAS,iBAAgB,iBAAgB,WAAU,CAAC,MAAK,GAAG,GAAE,WAAU,CAAC,KAAI,EAAE,GAAE,cAAa,OAAM,YAAW,CAAC,EAAC,QAAO,CAAC,UAAS,uBAAuB,EAAC,CAAC,EAAC,GAAE,aAAY,EAAC,QAAO,SAAQ,UAAS,GAAE,SAAQ,UAAS,iBAAgB,iBAAgB,WAAU,CAAC,KAAI,GAAG,GAAE,WAAU,CAAC,IAAG,EAAE,GAAE,cAAa,OAAM,YAAW,CAAC,EAAC,QAAO,CAAC,UAAS,uBAAuB,EAAC,CAAC,EAAC,EAAC,GAAE,WAAU,EAAC,UAAS,EAAC,QAAO,UAAS,YAAW,KAAI,GAAE,gBAAe,EAAC,QAAO,UAAS,iBAAgB,iBAAgB,WAAU,GAAE,WAAU,GAAE,WAAU,KAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,MAAK,YAAW,CAAC,QAAQ,EAAC,EAAC,GAAE,SAAQ,CAAC,cAAa,cAAa,gBAAe,iBAAgB,wBAAuB,gBAAe,gBAAe,mBAAkB,oBAAmB,WAAW,GAAE,cAAa,EAAC,kBAAiB,EAAC,QAAO,WAAU,WAAU,MAAK,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,gBAAe,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,cAAa,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,YAAW,CAAC,EAAC,KAAI,eAAc,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,sBAAqB,EAAC,QAAO,SAAQ,cAAa,MAAK,YAAW,CAAC,EAAC,KAAI,eAAc,GAAE,EAAC,kBAAiB,KAAI,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,OAAM,YAAW,CAAC,gBAAgB,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,gBAAe,EAAC,QAAO,iBAAgB,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,EAAC,GAAE,wBAAuB,EAAC,0BAAyB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,wBAAuB,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,YAAW,CAAC,EAAC,KAAI,yBAAwB,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,4BAA2B,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,mCAAkC,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,OAAM,YAAW,CAAC,0BAA0B,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,0BAAyB,EAAC,QAAO,iBAAgB,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,yBAAwB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,SAAQ,UAAS,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,uBAAsB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,SAAQ,UAAS,cAAa,MAAK,YAAW,CAAC,uBAAuB,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,oCAAmC,EAAC,QAAO,WAAU,WAAU,MAAK,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,8CAA6C,EAAC,iBAAgB,iBAAgB,QAAO,UAAS,WAAU,MAAK,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,KAAI,GAAE,2CAA0C,EAAC,iBAAgB,iBAAgB,QAAO,UAAS,WAAU,MAAK,WAAU,GAAE,WAAU,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,cAAa,MAAK,YAAW,CAAC,4BAA4B,EAAC,EAAC,GAAE,cAAa,EAAC,gBAAe,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,cAAa,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,YAAW,CAAC,EAAC,KAAI,eAAc,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,OAAM,YAAW,CAAC,gBAAgB,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,cAAa,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,eAAc,EAAC,QAAO,UAAS,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,aAAY,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,SAAQ,SAAQ,UAAS,WAAU,GAAE,cAAa,OAAM,SAAQ,eAAc,YAAW,CAAC,EAAC,KAAI,eAAc,CAAC,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,gBAAe,EAAC,QAAO,iBAAgB,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,QAAO,SAAS,EAAC,GAAE,iBAAgB,cAAa,GAAE,iBAAgB,EAAC,QAAO,SAAQ,cAAa,OAAM,YAAW,CAAC,EAAC,KAAI,eAAc,GAAE,EAAC,UAAS,WAAU,OAAM,EAAC,eAAc,KAAI,EAAC,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,eAAe,EAAC,GAAE,iBAAgB,aAAY,GAAE,oBAAmB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,cAAa,OAAM,YAAW,CAAC,EAAC,UAAS,WAAU,OAAM,EAAC,eAAc,KAAI,EAAC,CAAC,GAAE,iBAAgB,WAAU,EAAC,GAAE,gBAAe,EAAC,iBAAgB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,gBAAe,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,eAAc,EAAC,QAAO,UAAS,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,oBAAmB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,2BAA0B,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,OAAM,YAAW,CAAC,kBAAkB,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,sBAAqB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,0BAAyB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,YAAW,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,uBAAsB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,uBAAsB,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,yBAAwB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,EAAC,GAAE,iBAAgB,EAAC,kBAAiB,EAAC,QAAO,UAAS,WAAU,IAAG,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,OAAM,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,qBAAoB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,iBAAgB,EAAC,QAAO,SAAQ,WAAU,CAAC,eAAc,CAAC,QAAQ,GAAE,CAAC,iBAAiB,GAAE,GAAE,sBAAqB,KAAI,aAAY,KAAI,QAAO,KAAI,QAAO,KAAI,UAAS,GAAE,KAAK,GAAE,cAAa,OAAM,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,iBAAiB,EAAC,GAAE,iBAAgB,aAAY,GAAE,mBAAkB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,EAAC,GAAE,gBAAe,EAAC,gBAAe,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,cAAa,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,mBAAkB,EAAC,QAAO,SAAQ,WAAU,oBAAmB,cAAa,MAAK,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,mBAAkB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,cAAa,MAAK,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,OAAM,YAAW,CAAC,cAAa,gBAAgB,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,gBAAe,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,cAAa,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,eAAc,MAAK,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,mBAAkB,EAAC,QAAO,SAAQ,WAAU,oBAAmB,cAAa,MAAK,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,mBAAkB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,QAAO,WAAU,eAAe,EAAC,GAAE,iBAAgB,cAAa,GAAE,kBAAiB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,WAAU,CAAC,GAAE,CAAC,GAAE,cAAa,MAAK,SAAQ,UAAS,YAAW,CAAC,YAAY,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,OAAM,YAAW,CAAC,cAAa,gBAAgB,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,EAAC,GAAE,gBAAe,EAAC,kBAAiB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,qBAAoB,EAAC,QAAO,UAAS,WAAU,GAAE,UAAS,KAAI,cAAa,MAAK,SAAQ,WAAU,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,yBAAwB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,qBAAoB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,IAAG,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,mBAAkB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,IAAG,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,qBAAoB,EAAC,QAAO,QAAO,UAAS,EAAC,UAAS,CAAA,GAAG,WAAU,CAAA,EAAE,GAAE,WAAU,UAAS,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,wBAAuB,EAAC,QAAO,UAAS,WAAU,KAAI,WAAU,GAAE,cAAa,OAAM,SAAQ,gBAAe,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,EAAC,GAAE,mBAAkB,EAAC,oCAAmC,EAAC,QAAO,UAAS,WAAU,KAAI,WAAU,GAAE,WAAU,KAAI,cAAa,OAAM,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,iCAAgC,EAAC,QAAO,QAAO,UAAS,EAAC,OAAM,CAAA,GAAG,YAAW,CAAA,EAAE,GAAE,WAAU,YAAW,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,0BAAyB,EAAC,QAAO,UAAS,WAAU,KAAI,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,0BAAyB,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,6BAA4B,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,0BAAyB,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,EAAC,GAAE,oBAAmB,EAAC,oBAAmB,EAAC,QAAO,SAAQ,WAAU,WAAU,cAAa,MAAK,YAAW,CAAC,EAAC,KAAI,qBAAoB,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,sBAAqB,EAAC,QAAO,iBAAgB,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,sBAAqB,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,EAAC,GAAE,aAAY,EAAC,YAAW,EAAC,QAAO,QAAO,UAAS,EAAC,YAAW,CAAA,GAAG,cAAa,CAAA,EAAE,GAAE,WAAU,cAAa,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,sBAAqB,EAAC,QAAO,SAAQ,SAAQ,UAAS,UAAS,GAAE,SAAQ,WAAU,WAAU,CAAC,GAAE,CAAC,GAAE,WAAU,CAAC,KAAI,GAAG,GAAE,cAAa,OAAM,YAAW,CAAC,EAAC,YAAW,aAAY,CAAC,GAAE,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,gCAA+B,EAAC,QAAO,UAAS,YAAW,CAAC,EAAC,YAAW,aAAY,CAAC,GAAE,WAAU,IAAG,WAAU,GAAE,WAAU,KAAI,cAAa,OAAM,iBAAgB,gBAAe,GAAE,uBAAsB,EAAC,QAAO,SAAQ,YAAW,CAAC,EAAC,YAAW,WAAU,CAAC,GAAE,SAAQ,UAAS,WAAU,CAAC,GAAE,CAAC,GAAE,UAAS,GAAE,SAAQ,WAAU,WAAU,CAAC,GAAE,CAAC,GAAE,WAAU,CAAC,KAAI,GAAG,GAAE,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,uBAAsB,EAAC,QAAO,UAAS,YAAW,CAAC,EAAC,YAAW,WAAU,CAAC,GAAE,WAAU,IAAG,WAAU,GAAE,WAAU,KAAI,cAAa,OAAM,cAAa,EAAC,gBAAe,OAAM,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,GAAE,gBAAe,EAAC,QAAO,SAAQ,WAAU,CAAC,eAAc,CAAC,QAAQ,GAAE,CAAC,qBAAqB,GAAE,KAAI,WAAU,GAAE,OAAO,GAAE,cAAa,OAAM,YAAW,CAAC,EAAC,YAAW,WAAU,CAAC,GAAE,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,qBAAqB,EAAC,GAAE,iBAAgB,aAAY,GAAE,6BAA4B,EAAC,QAAO,SAAQ,WAAU,SAAQ,cAAa,OAAM,YAAW,CAAC,EAAC,YAAW,aAAY,CAAC,GAAE,iBAAgB,gBAAe,GAAE,wBAAuB,EAAC,QAAO,SAAQ,WAAU,SAAQ,cAAa,OAAM,YAAW,CAAC,EAAC,YAAW,aAAY,CAAC,GAAE,iBAAgB,gBAAe,GAAE,eAAc,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,WAAU,GAAE,cAAa,MAAK,cAAa,EAAC,gBAAe,MAAK,cAAa,CAAC,MAAM,EAAC,GAAE,iBAAgB,gBAAe,EAAC,GAAE,cAAa,EAAC,YAAW,EAAC,QAAO,UAAS,WAAU,KAAI,WAAU,GAAE,SAAQ,eAAc,GAAE,SAAQ,EAAC,QAAO,UAAS,WAAU,GAAE,WAAU,GAAE,SAAQ,eAAc,EAAC,GAAE,iBAAgB,EAAC,eAAc,EAAC,QAAO,gBAAe,GAAE,cAAa,EAAC,QAAO,gBAAe,GAAE,iBAAgB,EAAC,QAAO,gBAAe,GAAE,YAAW,EAAC,QAAO,gBAAe,EAAC,GAAE,aAAY,EAAC,KAAI,EAAC,QAAO,SAAQ,EAAC,EAAC;ACiB5pvC,SAAS6hB,mBAAmB9U,QAAsB;AAC9C,MAAIA,WAAW,QAAQA,WAAW,OAAO;AACrC,WAAO;EAD8B;AAIzC,MAAI,CAACtH,MAAMC,QAAQqH,MAAd,KAAyBA,OAAO/P,WAAW,GAAG;AAC/C,WAAO;EADwC;AAGnD,UAAQ+P,OAAO,CAAP,GAAR;IACA,KAAK;AACD,aAAOA,OAAO/P,UAAU,KAAK+P,OAAO,CAAP,MAAc,SAASA,OAAO,CAAP,MAAc;IAEtE,KAAK;AACD,aAAOA,OAAO/P,UAAU,MAAM,OAAO+P,OAAO,CAAP,MAAc,YAAYtH,MAAMC,QAAQqH,OAAO,CAAP,CAAd;IAEnE,KAAK;IACL,KAAK;IACL,KAAK;AACD,aAAO;IAEX,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACD,aAAOA,OAAO/P,WAAW,MAAMyI,MAAMC,QAAQqH,OAAO,CAAP,CAAd,KAA4BtH,MAAMC,QAAQqH,OAAO,CAAP,CAAd;IAE/D,KAAK;IACL,KAAK;AACD,eAAA,IAAA,GAAA,OAAgBA,OAAOnP,MAAM,CAAb,GAAA,IAAA,KAAA,QAAA,KAAA,GAAiB;AAAjCwB,YAAWvC,IAAAA,KAAAA,CAAAA;AACP,YAAI,CAACglB,mBAAmBhlB,CAAnB,KAAyB,OAAOA,MAAM,WAAW;AAClD,iBAAO;QAD2C;MADzB;AAKjC,aAAO;IAEX;AACI,aAAO;EA9BX;AAR8C;AAoDlD,SAASilB,aAAa/U,QAAagV,WAA4C;;gBAAvB;AACpD,MAAIhV,WAAW,QAAQA,WAAW5N,QAAW;AACzC,WAAO;MAAC4N,QAAQ,WAAA;AAAA,eAAM;MAAf;MAAqBiV,cAAc;MAAOC,aAAa;IAAvD;EADkC;AAI7C,MAAI,CAACJ,mBAAmB9U,MAAnB,GAA4B;AAC7BA,aAASmV,cAAcnV,MAAd;EADoB;AAGjC3N,MAAM+iB,YAAcpV;AAEpB3M,MAAIgiB,eAAe;AACnB,MAAI;AACAA,mBAAeC,oBAAoBF,SAApB;EADf,SAEKzjB,GAAP;AACE4hB,YAAQC,KAChB,4VAKErY,KAAKC,UAAUga,WAAW,MAAM,CAAhC,IALF,YAAA;EAFgB;AAYNG,MAAAA,aAAaC,KAAO,YAAUR,SAAjB;AACnB3iB,MAAMojB,uBAAuB/B,iBAAiB2B,cAAcE,UAA/B;AAE7BliB,MAAIqiB,aAAa;AACjB,MAAID,qBAAqBzf,WAAW,SAAS;AACzC,UAAM,IAAIJ,MAAM6f,qBAAqBxiB,MAAMW,IAAI+hB,SAAAA,KAAUA;AAAAA,aAAAA,IAAInf,MAAP,OAAemf,IAAIlf;IAAzD,CAAA,EAAoE8D,KAAK,IAAzE,CAAV;EADmC,OAEtC;AACHmb,iBAAA,SAAcE,kBAAoCzX,SAAkBI,WAAvD;AAAA,aAAuFkX,qBAAqBxiB,MAAMyI,SAASka,kBAAkBzX,SAAS,CAAA,GAAII,SAAnE;IAAA;EADjG;AAMHsX,MAAAA,oBAAoB;AACxBxiB,MAAI6hB,cAAc;AAClB,MAAIG,iBAAiBD,WAAW;AAC5B/iB,QAAMyjB,wBAAwBpC,iBAAiB0B,WAAWG,UAA5B;AAE9B,QAAIO,sBAAsB9f,WAAW,SAAS;AAC1C,YAAM,IAAIJ,MAAMkgB,sBAAsB7iB,MAAMW,IAAI+hB,SAAAA,KAAUA;AAAAA,eAAAA,IAAInf,MAAP,OAAemf,IAAIlf;MAA1D,CAAA,EAAqE8D,KAAK,IAA1E,CAAV;IADoC,OAEvC;AACHsb,0BAAA,SAAqBD,kBAAoCzX,SAAkBI,WAA6BC,kBAA0BC,qBAA8CqX;AAAAA,eAAAA,sBAAsB7iB,MAAMyI,SAASka,kBAAkBzX,SAAS,CAAA,GAAII,WAAWnM,QAAWA,QAAWoM,kBAAkBC,mBAAvH;MAAA;AAChLyW,oBAAc,CAAC7O,kBAAkByP,sBAAsB7iB,MAAMwB,UAA9C;IAFZ;EALqB;AAWhCihB,eAAeA;AACfrjB,MAAM4iB,eAAec,eAAeV,YAAf;AAErB,SAAO;IACHrV,QAAQ0V;IACRM,eAAeH,oBAAoBA,oBAAoBzjB;IAFpD;IAIH8iB,aAAa,CAAC,CAACA;EAJZ;AArDoE;AA6D/E,SAASI,oBAAoBtV,QAAkB;AAC3C,MAAI,CAACiW,gBAAgBjW,MAAhB,GAAyB;AAC1B,WAAOA;EADmB;AAK9B3M,MAAI2C,SAAS4e,aAAa5U,MAAb;AAGbkW,uBAAqBlgB,MAArB;AAGAA,WAASmgB,kCAAkCngB,MAAlC;AAET,SAAOA;AAdoC;AAiB/C,SAASmgB,kCAAkC1hB,YAAsB;AAC7D,MAAI,CAACiE,MAAMC,QAAQlE,UAAd,GAA2B;AAC5B,WAAOA;EADqB;AAIhCpC,MAAM+jB,YAAYC,oBAAoB5hB,UAApB;AAClB,MAAI2hB,cAAc,MAAM;AACpB,WAAOA;EADa,OAEjB;AACH,WAAOA,UAAUxiB,IAAK0iB,SAAAA,eAAkBH;AAAAA,aAAAA,kCAAkCG,aAAlC;IAAjC,CAAA;EADJ;AARsD;AAsBjE,SAASJ,qBAAqBlW,QAAa;AACvC3M,MAAIkjB,yBAAyB;AAC7BlkB,MAAMqc,WAAW,CAAA;AAEjB,MAAI1O,OAAO,CAAP,MAAc,QAAQ;AACtB,aAAStQ,IAAI,GAAGA,IAAIsQ,OAAO/P,SAAS,GAAGP,KAAK,GAAG;AAC3C6mB,+BAAyBA,0BAA0BN,gBAAgBjW,OAAOtQ,CAAP,CAAhB;AACnDgf,eAASzZ,KAAK+K,OAAOtQ,IAAI,CAAX,CAAd;IAF2C;AAK/Cgf,aAASzZ,KAAK+K,OAAOA,OAAO/P,SAAS,CAAvB,CAAd;EANsB,WAOf+P,OAAO,CAAP,MAAc,SAAS;AAC9BuW,6BAAyBA,0BAA0BN,gBAAgBjW,OAAO,CAAP,CAAhB;AAEnD,aAAStQ,MAAI,GAAGA,MAAIsQ,OAAO/P,SAAS,GAAGP,OAAK,GAAG;AAC3Cgf,eAASzZ,KAAK+K,OAAOtQ,MAAI,CAAX,CAAd;IAD2C;AAG/Cgf,aAASzZ,KAAK+K,OAAOA,OAAO/P,SAAS,CAAvB,CAAd;EAN8B,WAOvB+P,OAAO,CAAP,MAAc,QAAQ;AAC7BuW,6BAAyBA,0BAA0BN,gBAAgBjW,OAAO,CAAP,CAAhB;AAEnD,aAAStQ,MAAI,GAAGA,MAAIsQ,OAAO/P,SAAS,GAAGP,OAAK,GAAG;AAC3Cgf,eAASzZ,KAAK+K,OAAOtQ,MAAI,CAAX,CAAd;IAD2C;EAHlB;AAQjC,MAAI6mB,wBAAwB;AACxBvW,WAAO/P,SAAS;AAChB+P,WAAO/K,KAAP,MAAA,QAAA,CAAY,KAAZ,EAAsByZ,OAAAA,QAAAA,CAAtB;EAFwB;AAM5B,WAAShf,MAAI,GAAGA,MAAIsQ,OAAO/P,QAAQP,OAAK;AACpCwmB,yBAAqBlW,OAAOtQ,GAAP,CAArB;EADoC;AAhCD;AAqC3C,SAASumB,gBAAgBjW,QAAsB;AAE3C,MAAI,CAACtH,MAAMC,QAAQqH,MAAd,GAAuB;AACxB,WAAO;EADiB;AAG5B,MAAIwW,wBAAwBxW,OAAO,CAAP,CAAxB,GAAoC;AACpC,WAAO;EAD6B;AAIxC,WAAStQ,IAAI,GAAGA,IAAIsQ,OAAO/P,QAAQP,KAAK;AACpC2C,QAAM0L,QAAQiC,OAAOtQ,CAAP;AACd,QAAIumB,gBAAgBlY,KAAhB,GAAwB;AACxB,aAAO;IADiB;EAFQ;AAOxC,SAAO;AAhBoC;AAmB/C,SAASyY,wBAAwB/hB,YAA6B;AAC1D,SAAOA,eAAe,WAClBA,eAAe;AAFuC;AAK9DpC,IAAMokB,8BAA8B,oBAAIC,IAAI;EACxC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AARwC,CAAR;AAWpC,SAASL,oBAAoB5hB,YAAsB;AAC/C,MAAIgiB,4BAA4Bzf,IAAIvC,WAAW,CAAX,CAAhC,GAAgD;AAEhD,aAAS/E,IAAI,GAAGA,IAAI+E,WAAWxE,QAAQP,KAAK;AACxC2C,UAAMskB,QAAQliB,WAAW/E,CAAX;AACd,UAAIumB,gBAAgBU,KAAhB,GAAwB;AACxB,eAAO;MADiB;IAFY;EAFI;AASpD,SAAOliB;AAVwC;AAcnD,SAAS2E,SAAQnH,GAAGD,GAAG;AACnB,SAAOC,IAAID,IAAI,KAAKC,IAAID,IAAI,IAAI;AADb;AAIvB,SAAS+jB,eAAe/V,QAAQ;AAC5B,MAAI,CAACtH,MAAMC,QAAQqH,MAAd,GAAuB;AAAA,WAAO;EADP;AAE5B,MAAIA,OAAO,CAAP,MAAc,UAAU;AAAA,WAAO;EAFP;AAG5B,WAAS6G,QAAQ,GAAGA,QAAQ7G,OAAO/P,QAAQ4W,SAAS;AAChD,QAAIkP,eAAe/V,OAAO6G,KAAP,CAAf,GAA+B;AAAA,aAAO;IADM;EAAA;AAGpD,SAAO;AANqB;AAShC,SAASsO,cAAcnV,QAA4B;AAC/C,MAAI,CAACA,QAAQ;AAAA,WAAO;EAD2B;AAE/C3N,MAAMrB,KAAKgP,OAAO,CAAP;AACX,MAAIA,OAAO/P,UAAU,GAArB;AAAwB,WAAQe,OAAO;EAHQ;AAI/CqB,MAAMukB,YACF5lB,OAAO,OAAO6lB,oBAAoB7W,OAAO,CAAP,GAAWA,OAAO,CAAP,GAAW,IAA1C,IACdhP,OAAO,OAAO8lB,gBAAgBD,oBAAoB7W,OAAO,CAAP,GAAWA,OAAO,CAAP,GAAW,IAA1C,CAAhB,IACdhP,OAAO,OACPA,OAAO,OACPA,OAAO,QACPA,OAAO,OAAO6lB,oBAAoB7W,OAAO,CAAP,GAAWA,OAAO,CAAP,GAAWhP,EAA1C,IACdA,OAAO,QAAQ+lB,qBAAqB/W,OAAOnP,MAAM,CAAb,CAArB,IACfG,OAAO,QAAQ,CAAC,KAAD,EAAQ+F,OAAOiJ,OAAOnP,MAAM,CAAb,EAAgB+C,IAAIuhB,aAApB,CAAf,IACfnkB,OAAO,SAAS,CAAC,KAAD,EAAQ+F,OAAOiJ,OAAOnP,MAAM,CAAb,EAAgB+C,IAAIuhB,aAApB,EAAmCvhB,IAAIkjB,eAAvC,CAAf,IAChB9lB,OAAO,OAAOgmB,YAAYhX,OAAO,CAAP,GAAWA,OAAOnP,MAAM,CAAb,CAAvB,IACdG,OAAO,QAAQ8lB,gBAAgBE,YAAYhX,OAAO,CAAP,GAAWA,OAAOnP,MAAM,CAAb,CAAvB,CAAhB,IACfG,OAAO,QAAQimB,aAAajX,OAAO,CAAP,CAAb,IACfhP,OAAO,SAAS8lB,gBAAgBG,aAAajX,OAAO,CAAP,CAAb,CAAhB,IAChBhP,OAAO,WAAWgP,SAClB;AACJ,SAAO4W;AApBwC;AAuBnD,SAASC,oBAAoBnjB,UAAkBT,OAAYjC,IAAY;AACnE,UAAQ0C,UAAR;IACA,KAAK;AACD,aAAO;QAAA,iBAAgB1C;QAAMiC;MAAtB;IACX,KAAK;AACD,aAAO;QAAA,eAAcjC;QAAMiC;MAApB;IACX;AACI,aAAO;QAAA,YAAWjC;QAAM0C;QAAUT;MAA3B;EANX;AADmE;AAWvE,SAAS8jB,qBAAqBG,SAA4B;AACtD,SAAO,CAAC,KAAD,EAAQngB,OAAOmgB,QAAQtjB,IAAIuhB,aAAZ,CAAf;AAD+C;AAI1D,SAAS6B,YAAYtjB,UAAkBc,QAAoB;AACvD,MAAIA,OAAOvE,WAAW,GAAG;AAAE,WAAO;EAAT;AACzB,UAAQyD,UAAR;IACA,KAAK;AACD,aAAO;QAAC;QAAkB;UAAC;UAAWc;QAAZ;MAAnB;IACX,KAAK;AACD,aAAO;QAAC;QAAgB;UAAC;UAAWA;QAAZ;MAAjB;IACX;AACI,UAAIA,OAAOvE,SAAS,OAAO,CAACuE,OAAOgE,KAAP,SAAY6Y,GAAA;AAAA,eAAK,OAAOA,MAAM,OAAO7c,OAAO,CAAP;MAArC,CAAA,GAAiD;AACzE,eAAO;UAAC;UAAmBd;UAAU;YAAC;YAAWc,OAAO2Z,KAAK/U,QAAZ;UAAZ;QAA9B;MADkE,OAEtE;AACH,eAAO;UAAC;UAAmB1F;UAAU;YAAC;YAAWc;UAAZ;QAA9B;MADJ;EARX;AAFuD;AAgB3D,SAASyiB,aAAavjB,UAAkB;AACpC,UAAQA,UAAR;IACA,KAAK;AACD,aAAO;IACX,KAAK;AACD,aAAO,CAAC,eAAD;IACX;AACI,aAAO;QAAC;QAAcA;MAAf;EANX;AADoC;AAWxC,SAASojB,gBAAgB9W,QAAe;AACpC,SAAO;IAAC;IAAKA;EAAN;AAD6B;AC5UxC,IAAA,gBAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;ACKA,SAASmX,MAAMC,OAA2BxgB,QAAgD;AACtFvE,MAAM2D,SAAS,CAAA;AAEf,WAAWqR,KAAK+P,OAAO;AACnB,QAAI/P,MAAM,OAAO;AACbrR,aAAOqR,CAAP,IAAY+P,MAAM/P,CAAN;IADC;EADE;AAMvBgQ,gBAAc5a,QAAd,SAAuB4K,IAAM;AACzB,QAAIA,MAAKzQ,QAAQ;AACbZ,aAAOqR,EAAP,IAAazQ,OAAayQ,EAAd;IADC;EADQ,CAA7B;AAMA,SAASrR;AAf6E;AA+B3E,SAASshB,YAAYC,QAA8D;AAC9FA,WAASA,OAAO1mB,MAAP;AAETwB,MAAMuB,MAAMU,uBAAOkjB,OAAO,IAAd;AACZ,WAAS9nB,IAAI,GAAGA,IAAI6nB,OAAOtnB,QAAQP,KAAK;AACpCkE,QAAI2jB,OAAO7nB,CAAP,EAAUgP,EAAd,IAAoB6Y,OAAO7nB,CAAP;EADgB;AAIxC,WAASA,MAAI,GAAGA,MAAI6nB,OAAOtnB,QAAQP,OAAK;AACpC,QAAI,SAAS6nB,OAAO7nB,GAAP,GAAW;AACpB6nB,aAAO7nB,GAAP,IAAYynB,MAAMI,OAAO7nB,GAAP,GAAWkE,IAAK2jB,OAAO7nB,GAAP,EAAgBuQ,GAArB,CAAjB;IADQ;EADY;AAMxC,SAAOsX;AAduF;ACrClG,IAAIE,cAAc;EAChBC,MAAM;EACNC,UAAU;EACV,eAAe;EACf,eAAe;EACfC,OAAO;EACPC,MAAM;EACNC,SAAS;EACTC,QAAQ;EACRC,OAAO;EACPC,OAAO;EACPC,UAAU;EACVC,QAAQ;EACR,aAAa;EACb,aAAa;EACbC,MAAM;EACNC,OAAO;EACP1lB,OAAO;EACP,cAAc;EACd,eAAe;EACf,eAAe;EACf,cAAc;EACd,eAAe;EACf2lB,KAAK;EACLC,QAAQ;AAxBQ;AA0BlB,IAAIC,KAAK;AACT,IAAIC,WAAW;AAEf,IAAIC,YAAY,CAAA;AAEhBnQ,IAAAA,kBAAiB,SAASoQ,OAAOC,MAAMC,YAAY;AACjD,MAAIC,UAAUJ,UAAUC,KAAV;AACd,MAAI,CAACG,SAAS;AACZ,QAAI,CAACpgB,MAAMC,QAAQggB,KAAd,GAAsB;AACzBA,cAAQ,CAACA,KAAD;IADiB;AAG3B,QAAII,SAAS;AACb,QAAIjI,QAAQ;AACZ,QAAIkI,eAAe,CAAA;AACnB,QAAIC,YAAYC;AAChB,aAASxpB,IAAI,GAAGypB,KAAKR,MAAM1oB,QAAQP,IAAIypB,IAAI,EAAEzpB,GAAG;AAC9C,UAAIqN,OAAO4b,MAAMjpB,CAAN;AACX,UAAI0pB,QAAQrc,KAAK1L,MAAM,GAAX;AACZ,UAAIgoB,cAAcD,MAAMA,MAAMnpB,SAAS,CAArB,EAAwBW,YAAxB;AAClB,UAAIyoB,eAAe,YAAYA,eAAe,YAAYA,eAAe,WAAW;AAClFvI,gBAAQoI,YAAYpI,QAAQuI;AAC5BD,cAAM7nB,IAAN;AACA8nB,sBAAcD,MAAMA,MAAMnpB,SAAS,CAArB,EAAwBW,YAAxB;MAHoE,WAIzE6nB,SAASnS,KAAK+S,WAAd,GAA4B;AACrCA,sBAAcA,YAAY1oB,QAAQ8nB,UAAU,EAA9B;AACd3H,gBAAQoI,YAAYpI,QAAQsI,MAAMA,MAAMnpB,SAAS,CAArB,EAAwBU,QAAQ0oB,aAAa,EAA7C;MAFS;AAIvC,eAASC,KAAK7B,aAAa;AACzB,YAAI8B,eAAeH,MAAMnpB,SAAS,IAAImpB,MAAMA,MAAMnpB,SAAS,CAArB,EAAwBW,YAAxB,IAAwC;AAC9E,YAAIyoB,eAAeC,KAAKD,eAAeC,EAAE3oB,QAAQ,KAAK,EAAf,KAAsB4oB,eAAe,MAAMF,eAAeC,GAAG;AAClGP,mBAASE,aAAaF,SAAStB,YAAY6B,CAAZ;AAC/BF,gBAAM7nB,IAAN;AACA,cAAIgoB,gBAAgBD,EAAEE,WAAWD,YAAb,GAA4B;AAC9CH,kBAAM7nB,IAAN;UAD8C;AAGhD;QANkG;MAF3E;AAW3B,UAAI,CAAC0nB,cAAc,OAAOI,eAAe,UAAU;AACjDN,iBAASM;MADwC;AAGnD,UAAII,aAAaL,MAAM7e,KAAKie,EAAX,EACd7nB,QAAQ,wBAAwB,WADlB;AAEjB,UAAI8oB,WAAWxoB,QAAQunB,EAAnB,MAA2B,IAAI;AACjCiB,qBAAa,MAAMA,aAAa;MADC;AAGnCT,mBAAa/jB,KAAKwkB,UAAlB;IA/B8C;AAkChDX,cAAUJ,UAAUC,KAAV,IAAmB;MAAC7H;MAAOiI;MAAQC;IAAhB;EA1CjB;AA4Cd,SAAOF,QAAQ,CAAR,IAAaN,KAAKM,QAAQ,CAAR,IAAaN,KAAKI,OAAO,QAAQC,aAAa,MAAMA,aAAa,MAAML,KAAKM,QAAQ,CAAR;AA9CpD;AC/BnDzmB,IAAMqnB,gBAAgB;AAQf,SAASC,cAAcC,KAAK;AACjCvnB,MAAMmnB,aAAa;AACnB,MAAII,IAAI3oB,QAAQuoB,UAAZ,MAA4B,GAAG;AACjC,WAAO;EAD0B;AAGnC,SAAOI,IAAI/oB,MAAM2oB,WAAWvpB,MAArB;AAL0B;AAgB5B,SAAS4pB,mBAAmBD,KAAKE,OAAOC,UAAU;AACvD1nB,MAAM2nB,aAAaL,cAAcC,GAAd;AACnB,MAAI,CAACI,YAAY;AACf,WAAOC,UAAU,IAAIC,IAAIN,KAAKG,QAAb,EAAuBI,IAAjC;EADQ;AAGjB9nB,MAAMmnB,aAAa;AACnB,MAAIQ,WAAW/oB,QAAQuoB,UAAnB,MAAmC,GAAG;AACxC,UAAM,IAAI5jB,MAAiCgkB,6BAAAA,GAAAA;EADH;AAG1CvnB,MAAM+nB,SAASJ,WAAWnpB,MAAM2oB,WAAWvpB,MAA5B;AAEf,SAAUypB,gBAAH,gBAA8BU,SAA9B,0BAA4DN;AAXZ;AAqBlD,SAASO,kBAAkBT,KAAKE,OAAO;AAC5CznB,MAAM2nB,aAAaL,cAAcC,GAAd;AACnB,MAAI,CAACI,YAAY;AACf,WAAOC,UAAU,IAAIC,IAAIN,KAAKU,SAASH,IAAtB,EAA4BA,IAAtC;EADQ;AAGjB9nB,MAAMmnB,aAAa;AACnB,MAAIQ,WAAW/oB,QAAQuoB,UAAnB,MAAmC,GAAG;AACxC,UAAM,IAAI5jB,MAA+BgkB,2BAAAA,GAAAA;EADD;AAG1CvnB,MAAMye,QAAQkJ,WAAWnpB,MAAM2oB,WAAWvpB,MAA5B;AAEd,SAAUypB,gBAAH,gBAA8B5I,QAA9B,oBAAqDgJ;AAXhB;AAuBvC,SAASS,mBAAmBX,KAAKE,OAAOU,YAAYT,UAAU;AACnE1nB,MAAMooB,YAAY,IAAIP,IAAIN,KAAKG,QAAb;AAClB1nB,MAAM2nB,aAAaL,cAAcC,GAAd;AACnB,MAAI,CAACI,YAAY;AACf,QAAI,CAACF,OAAO;AACV,aAAOG,UAAUQ,UAAUN,IAApB;IADG;AAGZM,cAAUC,aAAaC,IAAIH,YAAYV,KAAvC;AACA,WAAOG,UAAUQ,UAAUN,IAApB;EALQ;AAQjB,MAAIH,eAAe,oBAAoB;AACrC3nB,QAAMuoB,aAAaC,OAAOC,oBAAoB,MAAM,QAAQ;AAC5D,WAAoCd,+BAAAA,aAA7B,iBAAsDY,aAAtD,wBAAsFd;EAFxD;AAIvC,SAAO,uCAAqCE,aAArC,0CAAuFF;AAf3B;ACjErEzmB,IAAI0nB,UAAU;AACd1oB,IAAM2oB,yBAAyB,CAAA;AAC/B3oB,IAAM4oB,uBAAuB,CAAA;AAMtB,SAASC,iBAAiBC,SAAS;AACxC,MAAI,CAACA,QAAQzc,IAAI;AACfyc,YAAQzc,KAAKqc;EADE;AAGjB1oB,MAAM+oB,gBAAgB,CAAA;AACtBJ,yBAAuBG,QAAQzc,EAA/B,IAAqC0c;AACrC,SAAOA;AANiC;AAanC,SAASC,eAAeF,SAAS;AACtC,MAAI,CAACA,QAAQzc,IAAI;AACfyc,YAAQzc,KAAKqc;EADE;AAGjB1oB,MAAMipB,cAAc,CAAA;AACpBL,uBAAqBE,QAAQzc,EAA7B,IAAmC4c;AACnC,SAAOA;AAN+B;AASjC,SAAShR,QAAQiR,SAAS;AAC/B,SAAQA,UAAU5rB,KAAK+R,KAAM;AADE;AAI1BrP,IAAMmpB,qBAAsB,WAAY;AAC7CnpB,MAAMopB,cAAc,CAAA;AACpB,WAASC,MAAM,mBAAmBD,YAAYxrB,UAAU,IAAIyrB,OAAO,GAAG;AACpED,gBAAYxmB,KAAKymB,GAAjB;EADoE;AAGtE,SAAOD;AALsC,EAAb;AAa3B,SAASE,aAAaC,OAAOC,QAAQ;AAC1C,MAAI,OAAOC,sBAAsB,eAAeC,gBAAgBD,qBAAqB,OAAOE,oBAAoB,aAAa;AAC3H,WAAyB,IAAIA,gBAAgBJ,OAAOC,MAA3B;EADkG;AAG7HxpB,MAAM4pB,SAASC,SAASC,cAAc,QAAvB;AACfF,SAAOL,QAAQA;AACfK,SAAOJ,SAASA;AAChB,SAAOI;AAPmC;AAUrC,SAASG,qBAAqBC,YAAYZ,aAAa;AAC5DpoB,MAAI3D,IAAI;AACR2C,MAAM8mB,KAAKsC,YAAYxrB;AACvB,SAAOP,IAAIypB,IAAI,EAAEzpB,GAAG;AAClB2C,QAAMiqB,YAAYb,YAAY/rB,CAAZ;AAClB,QAAI4sB,YAAYD,cAAc3sB,IAAI,IAAIypB,IAAI;AACxC9mB,UAAMkqB,aAAad,YAAY/rB,CAAZ,IAAiB+rB,YAAY/rB,IAAI,CAAhB;AACpC,aAAOA,IAAIC,KAAKgS,IAAI8Z,YAAY/rB,CAAZ,IAAiB2sB,UAA1B,IAAwC1sB,KAAKgS,IAAI4a,UAAT;IAFX;EAFxB;AAOpB,SAAOpD,KAAK;AAVgD;AAa9D9mB,IAAMmqB,kBAAkB,CAAA;AAUjB,SAASC,cAAcC,cAAc9C,KAAKlf,SAAciiB,UAAU;;cAAd,CAAA;AACzD,MAAI/C,OAAO4C,iBAAiB;AAC1B,QAAIG,UAAU;AACZA,eAASC,UAAUJ,gBAAgB5C,GAAhB,EAAqB,CAArB;IADP;AAGd,WAAO4C,gBAAgB5C,GAAhB,EAAqB,CAArB;EAJmB;AAM5BvnB,MAAMuqB,UAAUliB,QAAQmiB,mBACpBniB,QAAQmiB,iBAAiBjD,KAAK8C,YAA9B,KAA+C,IAAII,QAAQlD,GAAZ,IAC/C,IAAIkD,QAAQlD,GAAZ;AACJ,MAAI,CAACgD,QAAQG,QAAQ5oB,IAAI,QAApB,GAA+B;AAClCyoB,YAAQG,QAAQpC,IAAI,UAAU,kBAA9B;EADkC;AAGpC,MAAIgC,UAAU;AACZA,aAASC,UAAUA;EADP;AAGdvqB,MAAM2qB,iBAAiBC,MAAML,OAAN,EACpBM,KAAK,SAAUC,UAAU;AACxB,WAAOX,gBAAgB5C,GAAhB;AACP,WAAOuD,SAASC,KACZD,SAASE,KAAT,IACAC,QAAQC,OAAO,IAAI3nB,MAAM,2BAA2BgkB,GAArC,CAAf;EAJoB,CADL,EAOpB4D,MAAM,SAAUhiB,QAAO;AACtB,WAAOghB,gBAAgB5C,GAAhB;AACP,WAAO0D,QAAQC,OAAO,IAAI3nB,MAAM,2BAA2BgkB,GAArC,CAAf;EAFe,CAPH;AAWvB4C,kBAAgB5C,GAAhB,IAAuB;IAACgD;IAASI;EAAV;AACvB,SAAOA;AA5BgE;AA+BlE,SAASS,WAAWC,cAAchjB,SAAS;AAChD,MAAI,OAAOgjB,iBAAiB,UAAU;AACpC,QAAIA,aAAaC,KAAb,EAAoBnE,WAAW,GAA/B,GAAqC;AACvC,UAAI;AACFnnB,YAAM8oB,UAAUhgB,KAAKjJ,MAAMwrB,YAAX;AAChB,eAAOJ,QAAQM,QAAQzC,OAAhB;MAFL,SAGK3f,QAAP;AACA,eAAO8hB,QAAQC,OAAO/hB,MAAf;MADO;IAJuB,OAOlC;AACLkiB,qBAAerD,kBAAkBqD,cAAchjB,QAAQmjB,WAAxC;AACf,aAAOpB,cAAc,SAASiB,cAAchjB,OAArC;IAFF;EAR6B,OAY/B;AACL,WAAO4iB,QAAQM,QAAQF,YAAhB;EADF;AAbyC;AAkBlD,SAASI,uBAAuBC,UAAUrjB,SAAS;AACjD,MAAIA,QAAQmiB,kBAAkB;AAC5BxqB,QAAM2rB,qBAAqBtjB,QAAQmiB,iBAAiBkB,UAAU,OAAnC;AAC3B,QAAIC,8BAA8BlB,SAAS;AACzC,aAAO7C,UAAU+D,mBAAmBpE,GAA7B;IADkC;EAFf;AAM9B,SAAOmE;AAP0C;AAUnD1rB,IAAM4rB,gBAAgB,CAAA;AAOf,SAASC,YAAYC,UAAUpE,UAAUrf,SAAc;;cAAJ,CAAA;AACxDrI,MAAM+rB,WAAW;IAACrE;IAAU5e,KAAKC,UAAU+iB,QAAf;EAAX,EAAqC5rB,SAArC;AACjBc,MAAIgrB,UAAUJ,cAAcG,QAAd;AACd,MAAI,CAACC,WAAW3jB,QAAQmiB,kBAAkB;AACxCxqB,QAAMunB,MAAMuE,SAASvE;AACrB,QAAIA,OAAO,CAACuE,SAASG,OAAO;AAC1BjsB,UAAMksB,sBAAsBhE,mBAC1BX,KACAlf,QAAQmjB,aACRnjB,QAAQ8jB,oBAAoB,gBAC5BzE,YAAYO,SAASH,IAJK;AAM5B,UAAIP,IAAIJ,WAAW,WAAf,GAA6B;AAC/B6E,kBAAUf,QAAQM,QAChBtpB,OAAOmqB,OAAO,CAAA,GAAIN,UAAU;UAC1BvE,KAAKxnB;UACLksB,OAAOI,UAAUH,mBAAV;QAFmB,CAA5B,CADQ;MADqB,OAO1B;AACLlsB,YAAMsqB,WAAW,CAAA;AACjB0B,kBAAU5B,cACR,UACA8B,qBACA7jB,SACAiiB,QAJQ,EAKRO,KAAK,SAAUyB,UAAU;AACzBA,mBAASL,QAAQK,SAASL,MAAM1qB,IAAI,SAAUgrB,SAAS;AACrD,mBAAOd,uBACLvD,mBACEqE,SACAlkB,QAAQmjB,aACRnjB,QAAQ8jB,oBAAoB,gBAC5B7B,SAASC,QAAQhD,GAJnB,GAMAlf,OAPK;UAD8C,CAAtC;AAWjB,iBAAO4iB,QAAQM,QAAQe,QAAhB;QAZkB,CALjB;MAFL;IAdmB,OAoCrB;AACLR,iBAAW7pB,OAAOmqB,OAAO,CAAA,GAAIN,UAAU;QACrCG,OAAOH,SAASG,MAAM1qB,IAAI,SAAUgrB,SAAS;AAC3C,iBAAOd,uBACLvD,mBACEqE,SACAlkB,QAAQmjB,aACRnjB,QAAQ8jB,oBAAoB,gBAC5BzE,YAAYO,SAASH,IAJvB,GAMAzf,OAPK;QADoC,CAAtC;MAD8B,CAA5B;AAaX2jB,gBAAUf,QAAQM,QAAQtpB,OAAOmqB,OAAO,CAAA,GAAIN,QAAlB,CAAhB;IAdL;AAgBPF,kBAAcG,QAAd,IAA0BC;EAtDc;AAwD1C,SAAOA;AA3DqD;AAqEvD,SAASQ,aACdC,aACAC,iBACAC,WACAC,WACA;AACA5sB,MAAM6sB,cAAchD,SAASC,cAAc,QAAvB;AACpB9pB,MAAM8sB,UAAU;IACd,IAAIH,YAAYD,gBAAgBK,aAAaL,gBAAgBnD;IAC7D,IAAIoD,YAAYD,gBAAgBK,aAAaL,gBAAgBlD;EAF/C;AAIhBqD,cAAYtD,QAAQuD,QAAQ,CAAR;AACpBD,cAAYrD,SAASsD,QAAQ,CAAR;AACrB9sB,MAAMgtB,eAAeH,YAAYI,WAAW,IAAvB;AACrBD,eAAaE,UACXT,aACAC,gBAAgB9f,GAChB8f,gBAAgB7f,GAChB6f,gBAAgBnD,OAChBmD,gBAAgBlD,QAChBmD,YAAYD,gBAAgBK,YAC5BJ,YAAYD,gBAAgBK,YAC5BL,gBAAgBnD,OAChBmD,gBAAgBlD,MATlB;AAWAxpB,MAAMmtB,YAAYH,aAAaI,aAAa,GAAG,GAAGN,QAAQ,CAAR,GAAYA,QAAQ,CAAR,CAA5C;AAClBE,eAAaK,2BAA2B;AACxCL,eAAaM,YAAY,UAAQV,UAAUntB,IAAI,MAAtB,MAA6BmtB,UAAUltB,IAAI,MAA3C,MACvBktB,UAAUjtB,IAAI,MADS,MAErBitB,UAAUhtB,IAFW;AAGzBI,MAAMutB,OAAOJ,UAAUI;AACvB,WAASlwB,IAAI,GAAGypB,KAAKqG,UAAU5D,OAAOlsB,IAAIypB,IAAI,EAAEzpB,GAAG;AACjD,aAASwT,IAAI,GAAG2c,KAAKL,UAAU3D,QAAQ3Y,IAAI2c,IAAI,EAAE3c,GAAG;AAClD7Q,UAAMwU,SAAS3D,IAAIiW,KAAKzpB,KAAK;AAC7B2C,UAAMf,QAAQsuB,KAAK/Y,QAAQ,CAAb;AACd,UAAIvV,QAAQ,GAAG;AACb+tB,qBAAaS,IACXpwB,GACAwT,GACA8b,YAAYD,gBAAgBK,YAC5B,GACA,IAAIzvB,KAAK+R,EALX;MADa;IAHmC;EADH;AAenD2d,eAAaU,KAAb;AACA,SAAOb;AA1CP;AC3NF7sB,IAAM2tB,gBAAgBtnB,MAAM,GAAN,EAAW6B,KAAK,GAAhB;AACf,SAAS0lB,mBAAmBvmB,MAAMwmB,eAAe;AACtD,MAAIA,iBAAiB,MAAM;AACzB7sB,QAAI8sB,wBAAwB;AAC5B9tB,QAAM+tB,QAAQ1mB,KAAKrI,MAAM,IAAX;AACdgB,QAAMguB,kBAAkBL,cAAcnvB,MACpC,GACAlB,KAAKC,MAAMswB,gBAAgB,GAA3B,CAFsB;AAIxB,aAASzuB,IAAI,GAAG6uB,KAAKF,MAAMnwB,QAAQwB,IAAI6uB,IAAI,EAAE7uB,GAAG;AAC9C,UAAIA,IAAI,GAAG;AACT0uB,iCAAyB;MADhB;AAGXA,+BAAyBC,MAAM3uB,CAAN,EAASJ,MAAM,EAAf,EAAmBkJ,KAAK8lB,eAAxB;IAJqB;AAMhD,WAAOF;EAbkB;AAe3B,SAAOzmB;AAhB+C;AAmBxDrG,IAAIktB;AACJ,SAASC,oBAAoB;AAC3B,MAAI,CAACD,gBAAgB;AACnBA,qBAAiB5E,aAAa,GAAG,CAAhB,EAAmB2D,WAAW,IAA9B;EADE;AAGrB,SAAOiB;AAJoB;AAO7B,SAASE,YAAY/mB,MAAMwmB,eAAe;AACxC,SACEM,kBAAA,EAAoBC,YAAY/mB,IAAhC,EAAsCkiB,SACrCliB,KAAKzJ,SAAS,KAAKiwB;AAHkB;AAO1C7tB,IAAMquB,eAAe,CAAA;AACd,SAASC,SAASjnB,MAAMqD,MAAM6jB,IAAIV,eAAe;AACtD,MAAIxmB,KAAKzI,QAAQ,IAAb,MAAuB,IAAI;AAC7BoB,QAAMwuB,YAAYnnB,KAAKrI,MAAM,IAAX;AAClBgB,QAAM+tB,QAAQ,CAAA;AACd,aAAS1wB,IAAI,GAAGypB,KAAK0H,UAAU5wB,QAAQP,IAAIypB,IAAI,EAAEzpB,GAAG;AAClD0wB,YAAMnrB,KAAK0rB,SAASE,UAAUnxB,CAAV,GAAcqN,MAAM6jB,IAAIV,aAAjC,CAAX;IADkD;AAGpD,WAAOE,MAAM7lB,KAAK,IAAX;EANsB;AAQ/BlI,MAAMmE,MAAMoqB,KAAK,MAAM7jB,OAAO,MAAMrD,OAAO,MAAMwmB;AACjD7sB,MAAIytB,cAAcJ,aAAalqB,GAAb;AAClB,MAAI,CAACsqB,aAAa;AAChBzuB,QAAM0uB,QAAQrnB,KAAKrI,MAAM,GAAX;AACd,QAAI0vB,MAAM9wB,SAAS,GAAG;AACpBoC,UAAMkK,MAAMikB,kBAAA;AACZjkB,UAAIQ,OAAOA;AACX1K,UAAM2uB,QAAQzkB,IAAIkkB,YAAY,GAAhB,EAAqB7E;AACnCvpB,UAAM4uB,WAAWD,QAAQJ;AACzBvtB,UAAIkR,OAAO;AACXlS,UAAM+tB,UAAQ,CAAA;AAEd,eAAS1wB,MAAI,GAAGypB,OAAK4H,MAAM9wB,QAAQP,MAAIypB,MAAI,EAAEzpB,KAAG;AAC9C2C,YAAM6uB,OAAOH,MAAMrxB,GAAN;AACb2C,YAAM8uB,WAAW5c,QAAQA,OAAO,MAAM,MAAM2c;AAC5C,YAAIT,YAAYU,UAAUjB,aAAtB,KAAwCe,UAAU;AACpD1c,iBAAO4c;QAD6C,OAE/C;AACL,cAAI5c,MAAM;AACR6b,oBAAMnrB,KAAKsP,IAAX;UADQ;AAGVA,iBAAO2c;QAJF;MALuC;AAYhD,UAAI3c,MAAM;AACR6b,gBAAMnrB,KAAKsP,IAAX;MADQ;AAIL,eAAI7U,MAAI,GAAGypB,OAAKiH,QAAMnwB,QAAQP,MAAIypB,QAAMA,OAAK,GAAG,EAAEzpB,KAAG;AACxD2C,YAAMkS,SAAO6b,QAAM1wB,GAAN;AACb,YAAI+wB,YAAYlc,QAAM2b,aAAlB,IAAmCe,WAAW,MAAM;AACtD5uB,cAAM+uB,YACJ1xB,MAAI,IAAI+wB,YAAYL,QAAM1wB,MAAI,CAAV,GAAcwwB,aAA1B,IAA2Chb;AACrD7S,cAAMgvB,YACJ3xB,MAAIypB,OAAK,IAAIsH,YAAYL,QAAM1wB,MAAI,CAAV,GAAcwwB,aAA1B,IAA2Chb;AAC1Dkb,kBAAM1rB,OAAOhF,KAAG,CAAhB;AACAypB,kBAAM;AACN,cAAIiI,YAAYC,WAAW;AACzBjB,oBAAM1wB,MAAI,CAAV,KAAgB,MAAM6U;AACtB7U,mBAAK;UAFoB,OAGpB;AACL0wB,oBAAM1wB,GAAN,IAAW6U,SAAO,MAAM6b,QAAM1wB,GAAN;UADnB;QAV+C;MAFA;AAkBrD,eAAIA,MAAI,GAAGypB,OAAKiH,QAAMnwB,SAAS,GAAGP,MAAIypB,MAAI,EAAEzpB,KAAG;AAClD2C,YAAMkS,SAAO6b,QAAM1wB,GAAN;AACb2C,YAAMivB,OAAOlB,QAAM1wB,MAAI,CAAV;AACb,YACE+wB,YAAYlc,QAAM2b,aAAlB,IAAmCe,WAAW,OAC9CR,YAAYa,MAAMpB,aAAlB,IAAmCe,WAAW,KAC9C;AACA5uB,cAAMkvB,YAAYhd,OAAKlT,MAAM,GAAX;AAClBgB,cAAMmvB,WAAWD,UAAUhwB,IAAV;AACjB,cAAIkvB,YAAYe,UAAUtB,aAAtB,IAAuCe,WAAW,KAAK;AACzDb,oBAAM1wB,GAAN,IAAW6xB,UAAUhnB,KAAK,GAAf;AACX6lB,oBAAM1wB,MAAI,CAAV,IAAe8xB,WAAW,MAAMF;UAFyB;AAI3DnI,kBAAM;QAPN;MANgD;AAgBpD2H,oBAAcV,QAAM7lB,KAAK,IAAX;IA1DM,OA2Df;AACLumB,oBAAcpnB;IADT;AAGPonB,kBAAcb,mBAAmBa,aAAaZ,aAAhC;AACdQ,iBAAalqB,GAAb,IAAoBsqB;EAjEJ;AAmElB,SAAOA;AA9E+C;AAiFxDzuB,IAAMovB,kBAAkB;AACxBpvB,IAAMqvB,mBAAmB;AACzBruB,IAAIsuB;AACJ,SAASC,cAAcC,QAAQ;AAC7B,MAAI,CAACF,oBAAoB;AACvBA,yBAAqB,CAAA;AACrBtvB,QAAMyvB,cAAc5F,SAAS4F;AAC7B,aAASpyB,IAAI,GAAGypB,KAAK2I,YAAY7xB,QAAQP,IAAIypB,IAAI,EAAEzpB,GAAG;AACpD2C,UAAM0vB,aAA2CD,YAAYpyB,CAAZ;AACjD,UAAI;AACF2C,YAAM2vB,WAAWD,WAAWE,SAASF,WAAWC;AAChD,YAAIA,UAAU;AACZ,mBAAS9e,IAAI,GAAG2c,KAAKmC,SAAS/xB,QAAQiT,IAAI2c,IAAI,EAAE3c,GAAG;AACjD7Q,gBAAM6vB,UAAUF,SAAS9e,CAAT;AAChB,gBAAIgf,QAAQ7tB,QAAQ,GAAG;AACrBhC,kBAAM8D,QAAQ+rB,QAAQC,QAAQhsB,MAAMsrB,eAAtB;AACdE,iCAAmBxrB,MAAM,CAAN,EAASxF,QAAQ+wB,kBAAkB,EAAnC,CAAnB,IAA6D;YAFxC;UAF0B;QADvC;MAFZ,SAWK/vB,GAAP;MAAU;IAbwC;EAH/B;AAqBzB,SAAOkwB,UAAUF;AAtBY;AAyB/BtvB,IAAM+vB,wBAAwB,CAAA;AAOvB,SAASC,SAAS1J,OAAO;AAC9BtmB,MAAMiwB,WAAW3J,MAAMpmB,SAAN;AACjB,MAAI+vB,YAAYF,uBAAuB;AACrC,WAAOA,sBAAsBE,QAAtB;EAD8B;AAGvCjwB,MAAMkwB,yBAAyB,CAAA;AAC/B,WAAS7yB,IAAI,GAAGypB,KAAKR,MAAM1oB,QAAQP,IAAIypB,IAAI,EAAEzpB,GAAG;AAC9CipB,UAAMjpB,CAAN,IAAWipB,MAAMjpB,CAAN,EAASiB,QAAQ,oBAAoB,OAArC;AACX0B,QAAM0K,OAAO4b,MAAMjpB,CAAN;AACb2C,QAAMmwB,UAAUC,gBAAO1lB,MAAM,CAAb;AAChB2lB,iBAAaF,OAAb;AACAnwB,QAAM+mB,QAAQoJ,QAAQnxB,MAAM,GAAd;AACdkxB,2BAAuBttB,KAAK;MAC1BmkB,MAAMvoB,MAAM,CAAZ,EAAe0J,KAAK,GAApB,EAAyB5J,QAAQ,MAAM,EAAvC;MACAyoB,MAAM,CAAN;MACAA,MAAM,CAAN;IAH0B,CAA5B;EAN8C;AAYhD,WAAS1pB,MAAI,GAAGypB,OAAKoJ,uBAAuBtyB,QAAQP,MAAIypB,MAAI,EAAEzpB,KAAG;AAC/D2C,QAAMswB,wBAAwBJ,uBAAuB7yB,GAAvB;AAC9B2C,QAAMwvB,SAASc,sBAAsB,CAAtB;AACf,QAAI,CAACf,cAAcC,MAAd,GAAuB;AAC1B,UACEe,aAAazuB,IACRwuB,sBAAsB,CAAtB,IAAA,OAA6BA,sBAAsB,CAAtB,IAAhC,QAA8Dd,MAAAA,MAC1D,KACN;AACAxvB,YAAMwwB,UACJ,6CACAhB,OAAOlxB,QAAQ,MAAM,GAArB,IACA,MACAgyB,sBAAsB,CAAtB,IACAA,sBAAsB,CAAtB;AACF,YAAI,CAACzG,SAAS4G,cAAc,gBAAgBD,UAAU,IAAjD,GAAwD;AAC3DxwB,cAAM0wB,SAAS7G,SAASC,cAAc,MAAvB;AACf4G,iBAAO5I,OAAO0I;AACdE,iBAAOC,MAAM;AACb9G,mBAAS+G,KAAKC,YAAYH,MAA1B;QAJ2D;MAP7D;IALwB;EAHmC;AAwBjEX,wBAAsBE,QAAtB,IAAkC3J;AAClC,SAAOA;AA3CuB;AClHhCtmB,IAAM0J,QAAQ;EACZ,SAAS;EACT,cAAc;EACd,cAAc;EACd,mBAAmB;EACnB,WAAW;EACX,gBAAgB;AANJ;AAQd1J,IAAM8wB,SAAS;EACb,UAAU;IAAC;IAAK;EAAN;EACV,QAAQ;IAAC;IAAG;EAAJ;EACR,SAAS;IAAC;IAAG;EAAJ;EACT,OAAO;IAAC;IAAK;EAAN;EACP,UAAU;IAAC;IAAK;EAAN;EACV,YAAY;IAAC;IAAG;EAAJ;EACZ,aAAa;IAAC;IAAG;EAAJ;EACb,eAAe;IAAC;IAAG;EAAJ;EACf,gBAAgB;IAAC;IAAG;EAAJ;AATH;AAYf9wB,IAAM+wB,iBAAiB,SAAUC,eAAejwB,cAAc;AAC5Df,MAAMixB,qBAAqBpP,yBACzBmP,eACAjwB,YAFyB;AAI3B,MAAIkwB,mBAAmBttB,WAAW,SAAS;AACzC,UAAM,IAAIJ,MACR0tB,mBAAmBrwB,MAChBW,IAAK+hB,SAAAA,KAAWA;AAAAA,aAAAA,IAAInf,MAAP,OAAemf,IAAIlf;IADnC,CAAA,EAEG8D,KAAK,IAFR,CADI;EADmC;AAO3C,SAAO+oB,mBAAmBrwB;AAZkC;AAe9DZ,IAAMkxB,aAAW,CAAA;AACjBlxB,IAAMmxB,UAAU,EAACxuB,MAAM,EAAP;AAChB3B,IAAIowB;AAAJpwB,IAA8BqwB;AAavB,SAASC,SACdvM,OACAwM,eACAlwB,UACAsB,MACAmJ,SACAid,eACAhd,cACA;AACA/L,MAAMwxB,UAAUzM,MAAM1Y;AACtB,MAAI,CAAC0c,eAAe;AAClBA,oBAAgB,CAAA;AAChB7H,YAAQC,KAAK,yCAAb;EAFkB;AAIpB,MAAI,CAAC4H,cAAcyI,OAAd,GAAwB;AAC3BzI,kBAAcyI,OAAd,IAAyB,CAAA;EADE;AAG7BxxB,MAAMyxB,YAAY1I,cAAcyI,OAAd;AAClB,MAAI,CAACC,UAAUpwB,QAAV,GAAqB;AACxBL,QAAIJ,SAASmkB,MAAMwM,aAAN,KAAwBL,YAAU7vB,QAAnC;AACZrB,QAAMe,eAAeuf,KAAQiR,gBAAiBxM,MAAAA,MAAM/iB,IAA/B,EAAuCX,QAAvC;AACrB,QAAIT,UAAUb,QAAW;AACvBa,cAAQG,aAAagB;IADE;AAGzBf,QAAI0wB,SAAStQ,aAAaxgB,KAAb;AACb,QAAI,CAAC8wB,UAAUjR,WAAW7f,KAAX,GAAmB;AAChCA,cAAQC,gBAAgBD,OAAOG,YAAvB;AACR2wB,eAAS;IAFuB;AAIlC,QAAIA,QAAQ;AACV1xB,UAAMixB,qBAAqBF,eAAenwB,OAAOG,YAAtB;AAC3B0wB,gBAAUpwB,QAAV,IACE4vB,mBAAmB5nB,SAASsoB,KAAKV,kBAAjC;IAHQ,OAIL;AACL,UAAIlwB,aAAaiB,QAAQ,SAAS;AAChCpB,gBAAQrB,QAAMM,MAAMe,KAAZ;MADwB;AAGlC6wB,gBAAUpwB,QAAV,IAAsB,WAAY;AAChC,eAAOT;MADyB;IAJ7B;EAfiB;AAwB1BuwB,UAAQxuB,OAAOA;AACf,SAAO8uB,UAAUpwB,QAAV,EAAoB8vB,SAASrlB,SAASC,YAAtC;AAnCP;AA8CF,SAAS6lB,qBAAqB7M,OAAOpiB,MAAMmJ,SAASid,eAAe;AACjE/oB,MAAM6xB,eAAeP,SACnBvM,OACA,UACA,sBACApiB,MACAmJ,SACAid,aANmB;AAQrB,MAAI,CAAC8I,cAAc;AACjB,WAAO;EADU;AAGnB7xB,MAAM8xB,kBAAkBR,SACtBvM,OACA,UACA,yBACApiB,MACAmJ,SACAid,aANsB;AAQxB,MAAI,CAAC+I,iBAAiB;AACpB,WAAO;EADa;AAGtB,SAAO;AAvB0D;AAmCnE,SAASC,eAAeP,SAAS7jB,QAAQ7B,SAASnJ,MAAMsmB,aAAa;AACnE,MAAI,CAACA,aAAa;AAChB/H,YAAQC,KAAK,6CAAb;EADgB;AAGlB,MAAI,EAAEqQ,WAAWvI,cAAc;AAC7BA,gBAAYuI,OAAZ,IAAuB9O,aAAa/U,MAAb,EAAqBA;EADf;AAG/BwjB,UAAQxuB,OAAOA;AACf,SAAOsmB,YAAYuI,OAAZ,EAAqBL,SAASrlB,OAA9B;AAR4D;AAWrE9K,IAAIgxB,2BAA2B;AAoB/B,SAASC,iBAAiBC,QAAOC,SAAS;AACxC,MAAID,QAAO;AACT,QAAI,CAACE,6BAA6BF,OAAMG,MAAM,KAAKF,YAAY,IAAI;AACjE,aAAOG;IAD0D;AAGnEC,QAAMF,IAAIH,OAAMG;AAChBF,cAAUA,YAAYG,SAAY,IAAIH;AACtC,WAAOE,MAAM,IACT,gBACA,UACEG,KAAKC,MAAOP,OAAMQ,IAAI,MAAOL,CAA7B,IACA,MACAG,KAAKC,MAAOP,OAAMS,IAAI,MAAON,CAA7B,IACA,MACAG,KAAKC,MAAOP,OAAMU,IAAI,MAAOP,CAA7B,IACA,MACAA,IAAIF,UACJ;EAhBG;AAkBX,SAAOD;AAnBiC;AAsB1CK,IAAMM,gBAAgB;AAQtB,SAASC,aAAaC,MAAMC,aAAY;AACtC,SAAOD,KAAKE,QAAQJ,eAAe,SAAUK,OAAO;AAClD,WAAOF,YAAWE,MAAMC,MAAM,GAAG,EAAf,CAAX,KAAkC;EADS,CAA7C;AAD+B;AAMxCC,IAAIC,cAAc;AA+EX,SAASC,cACdC,SACAC,SACAC,gBACAC,aACAC,YACAC,gBACAC,WACAC,UACA;;kBALcC;;iBACDC;;qBACIA;;gBACNA;;eACAA;AAEX,MAAI,OAAOR,WAAW,UAAU;AAC9BA,cAAUS,KAAKC,MAAMV,OAAX;EADoB;AAGhC,MAAIA,QAAQW,WAAW,GAAG;AACxB,UAAM,IAAIC,MAAM,6BAAV;EADkB;AAI1BC,MAAIC,aAAaC;AACjB,MAAIX,gBAAgB;AAClB,QAAI,OAAOY,UAAU,aAAa;AAChCC,UAAMC,MAAM,IAAIF,MAAJ;AACZE,UAAIC,cAAc;AAClBD,UAAIE,SAAS,WAAY;AACvBN,sBAAcI;AACdH,0BAAkB;UAACG,IAAIG;UAAOH,IAAII;QAAhB;AAClBvB,gBAAQwB,QAAR;AACAL,YAAIE,SAAS;MAJU;AAMzBF,UAAIM,MAAMpB;IATsB,WAUvB,OAAOqB,sBAAsB,eAAeC,gBAAgBD,mBAAmB;AAClFE,UAAAA,SAA2BD;AAEjCC,aAAOC,YAAY;QACjBC,QAAQ;QACRL,KAAKpB;MAFY,CAAnB;AAIAuB,aAAOG,iBAAiB,WAAW,SAASC,QAAQC,OAAO;AACzD,YACEA,MAAMC,KAAKJ,WAAW,iBACtBG,MAAMC,KAAKT,QAAQpB,gBACnB;AACAU,wBAAckB,MAAMC,KAAKC;AACzBnB,4BAAkB;YAACD,YAAYO;YAAOP,YAAYQ;UAAhC;QAFlB;MAJuD,CAA3D;IAPwF;EAXxE;AA8BpBL,MAAMkB,YAAYC,YAAYpC,QAAQqC,MAApB;AAElBpB,MAAMqB,sBAAsB,CAAA;AAC5BrB,MAAMsB,eAAe,CAAA;AAErBtB,MAAMuB,iBAAiB,CAAA;AACvBvB,MAAMwB,eAAe,CAAA;AACrBxB,MAAMyB,gBAAgBC,iBAAiB3C,OAAjB;AACtBiB,MAAM2B,cAAcC,eAAe7C,OAAf;AAEpBa,MAAIiC;AACJ,WAASC,IAAI,GAAGC,KAAKb,UAAUc,QAAQF,IAAIC,IAAI,EAAED,GAAG;AAClD9B,QAAMiC,QAAQf,UAAUY,CAAV;AACd9B,QAAMkC,UAAUD,MAAME;AACtB,QACG,OAAOnD,kBAAkB,YAAYiD,MAAMG,UAAUpD,kBACtDA,eAAeqD,QAAQH,OAAvB,MAAoC,IACpC;AACAlC,UAAMsC,cAAcL,MAAM,cAAN;AACpB,UAAI,CAACJ,cAAc;AACjBA,uBAAeI,MAAMG;AACrBpC,YAAMoC,SAASrD,QAAQwD,QAAQV,YAAhB;AACf,YAAI,CAACO,QAAQ;AACX,gBAAM,IAAIzC,MAAJ,aAAqBkC,eAAX,kBAAA;QADL;AAGb7B,YAAMwC,OAAOJ,OAAOI;AACpB,YAAIA,SAAS,YAAYA,SAAS,WAAW;AAC3C,gBAAM,IAAI7C,MACR,aAAWkC,eAA4DW,kDAAAA,OADnE,GAAA;QADqC;MAP5B,WAYRP,MAAMG,WAAWP,cAAc;AACxC,cAAM,IAAIlC,MAAJ,YACMuC,UAAV,4BAA2CL,YADvC;MADkC;AAK1CjC,UAAIwB,SAASC,oBAAoBiB,WAApB;AACb,UAAI,CAAClB,QAAQ;AACXA,iBAAS,CAAA;AACTC,4BAAoBiB,WAApB,IAAmClB;MAFxB;AAIbA,aAAOqB,KAAK;QACVR;QACAS,OAAOZ;MAFG,CAAZ;AAIAR,mBAAamB,KAAKP,OAAlB;IA5BA;EANgD;AAsCpDlC,MAAM2C,WAAW,IAAIC,eAAJ;AACjB5C,MAAM6C,YAAY,IAAIC,aAAJ;AAElB9C,MAAM+C,SAAS,CAAA;AAEf/C,MAAMgD,gBAAgB,SAAUC,SAASC,YAAY;AACnDlD,QAAMmD,cAAaF,QAAQG,cAAR;AACnBpD,QAAMoB,UAASC,oBAAoB8B,YAAWlB,KAA/B;AACf,QAAI,CAACb,SAAQ;AACX;IADW;AAGbxB,QAAIyD,OAAOpE,YAAYoD,QAAQa,UAApB;AACX,QAAIG,QAAQ,IAAI;AACdA,aAAOC,qBAAqBJ,YAAYjE,WAAjC;IADO;AAGhBe,QAAMwC,QAAOe,MAAMN,QAAQO,YAAR,EAAsBC,QAAtB,CAAN;AACbzD,QAAM0D,IAAI;MACRP,YAAYA;MACZX,MAAMA;IAFE;AAIVxC,QAAM2D,eAAe7E,QAAQ8E,IAAI,qBAAZ,EAAmCX,QAAQY,MAAR,CAAnC;AACrBjE,QAAIkE,eAAe;AACnBlE,QAAImE;AACJ,aAASjC,KAAI,GAAGC,MAAKX,QAAOY,QAAQF,KAAIC,KAAI,EAAED,IAAG;AAC/C9B,UAAMgE,YAAY5C,QAAOU,EAAP;AAClB9B,UAAMiC,SAAQ+B,UAAU/B;AACxBjC,UAAMkC,WAAUD,OAAME;AAEtBnC,UAAMiE,SAAShC,OAAMgC,UAAUC;AAC/BlE,UAAMmE,QAAQlC,OAAMkC,SAASD;AAC7B,UACED,OAAOG,eAAe,UACrB,aAAanC,UAASoB,OAAOpB,OAAMoC,WACnC,aAAapC,UAASoB,QAAQpB,OAAMqC,SACrC;AACA;MADA;AAGFtE,UAAMuE,SAAStC,OAAMsC;AACrB,UAAI,CAACA,UAAUC,eAAetC,UAASqC,QAAQb,GAAGL,MAAM1B,WAAzC,GAAuD;AACpEoC,gCAAwB9B;AACxBrC,YAAI6E,SAAJ,QAAWC,UAAX,QAAoBC,OAApB,QAA0BC,SAA1B,QAAkCC,cAAlC,QAA+CC,QAAAA;AAC/C9E,YAAM0C,QAAQsB,UAAUtB;AACxB,YACEF,SAAQ,MACPP,OAAMO,QAAQ,UAAUP,OAAMO,QAAQ,mBACvC;AACAkC,oBAAUK,SACR9C,QACA,SACAA,OAAMO,OAAO,YACba,MACAK,GACAjC,eACAkC,YAPQ;AASV,cAAI1B,OAAMO,OAAO,cAAc2B,OAAO;AACpCnE,gBAAMgF,WAAWD,SACf9C,QACA,SACAA,OAAMO,OAAO,YACba,MACAK,GACAjC,eACAkC,YAPe;AASjB,gBAAIqB,UAAU;AACZhF,kBAAMiF,OACJ,OAAOD,aAAa,WAChBE,aAAaF,UAAU7B,WAAvB,IACA6B,SAASG,SAAT;AACN,kBAAItF,eAAeX,cAAcA,WAAW+F,IAAX,GAAkB;AACjD,kBAAEnB;AACFgB,wBAAQ/B,OAAOe,YAAP;AACR,oBACE,CAACgB,SACD,CAACA,MAAMM,QAAN,KACDN,MAAMO,UAAN,KACAP,MAAMQ,QAAN,GACA;AACAR,0BAAQ,IAAIS,cAAM,EAChBZ,MAAM,IAAI7B,aAAJ,EADU,CAAV;AAGRC,yBAAOe,YAAP,IAAuBgB;gBAJvB;AAMFH,uBAAOG,MAAMM,QAAN;AACPN,sBAAMU,UAAU9C,KAAhB;AACA1C,oBAAMyF,iBAAiBR,OAAO,MAAMP;AACpC9E,oBAAI8F,UAAUlE,aAAaiE,cAAb;AACd,oBAAI,CAACC,SAAS;AACZ1F,sBAAM2F,kBAAkBzG,WAAW+F,IAAX;AACxBjF,sBAAM4F,SAASC,aACbF,gBAAgBvF,OAChBuF,gBAAgBtF,MAFH;AAIfL,sBAAM8F,MACJF,OAAOG,WAAW,IAAlB;AAEFD,sBAAIE,cAActB;AAClBoB,sBAAIG,UACFpG,aACA8F,gBAAgBO,GAChBP,gBAAgBQ,GAChBR,gBAAgBvF,OAChBuF,gBAAgBtF,QAChB,GACA,GACAsF,gBAAgBvF,OAChBuF,gBAAgBtF,MATlB;AAWAqF,4BAAUI,IAAIM,cAAcR,QAAQ,QAA1B;AACVpE,+BAAaiE,cAAb,IAA+BC;gBAtBnB;AAwBdf,qBAAK0B,SAASX,OAAd;cA1CiD;YALvC;UAVsB,OA4D/B;AACLjB,YAAAA,SAAQ6B,iBACNvB,SACE9C,QACA,SACAA,OAAMO,OAAO,UACba,MACAK,GACAjC,eACAkC,YAPF,GASAe,OAVM;AAYR,gBAAIzC,OAAMO,OAAO,oBAAoB2B,OAAO;AAC1CU,4BAAcyB,iBACZvB,SACE9C,QACA,SACAA,OAAMO,OAAO,kBACba,MACAK,GACAjC,eACAkC,YAPF,GASAe,OAVY;YAD4B;AAc5C,gBAAI,CAACG,aAAa;AAChBA,4BAAcJ;YADE;AAGlB,gBAAIA,UAASI,aAAa;AACxB,gBAAEf;AACFgB,sBAAQ/B,OAAOe,YAAP;AACR,kBACE,CAACgB,SACAL,UAAS,CAACK,MAAMM,QAAN,KACV,CAACX,UAASK,MAAMM,QAAN,KACVP,eAAe,CAACC,MAAMO,UAAN,KAChB,CAACR,eAAeC,MAAMO,UAAN,KACjBP,MAAMQ,QAAN,GACA;AACAR,wBAAQ,IAAIS,cAAM;kBAChBZ,MAAMF,SAAQ,IAAI3B,aAAJ,IAAavD;kBAC3BqF,QAAQC,cAAc,IAAIjC,eAAJ,IAAerD;gBAFrB,CAAV;AAIRwD,uBAAOe,YAAP,IAAuBgB;cALvB;AAOF,kBAAIL,QAAO;AACTE,uBAAOG,MAAMM,QAAN;AACPT,qBAAK0B,SAAS5B,MAAd;cAFS;AAIX,kBAAII,aAAa;AACfD,yBAASE,MAAMO,UAAN;AACTT,uBAAOyB,SAASxB,WAAhB;AACAD,uBAAO2B,SAAS,GAAhB;cAHe;AAKjBzB,oBAAMU,UAAU9C,KAAhB;YA1BwB;UA9BrB;QAtEP;AAkIF,YAAIF,SAAQ,KAAKP,OAAMO,QAAQ,QAAQ;AACrCiC,UAAAA,SACE,EAAE,kBAAkBN,UAAU,gBAAgBA,QAC1CmC,iBACEvB,SACE9C,QACA,SACA,cACAoB,MACAK,GACAjC,eACAkC,YAPF,GASAoB,SACE9C,QACA,SACA,gBACAoB,MACAK,GACAjC,eACAkC,YAPF,CAVF,IAoBApE;AACNS,cAAMI,QAAQ2E,SACZ9C,QACA,SACA,cACAoB,MACAK,GACAjC,eACAkC,YAPY;AASd,cAAIc,UAASrE,QAAQ,GAAG;AACtB,cAAE0D;AACFgB,oBAAQ/B,OAAOe,YAAP;AACR,gBACE,CAACgB,SACD,CAACA,MAAMO,UAAN,KACDP,MAAMM,QAAN,KACAN,MAAMQ,QAAN,GACA;AACAR,sBAAQ,IAAIS,cAAM,EAChBX,QAAQ,IAAIhC,eAAJ,EADQ,CAAV;AAGRG,qBAAOe,YAAP,IAAuBgB;YAJvB;AAMFF,qBAASE,MAAMO,UAAN;AACTT,mBAAO4B,WACLzB,SACE9C,QACA,UACA,YACAoB,MACAK,GACAjC,eACAkC,YAPF,CADF;AAWAiB,mBAAO6B,YACL1B,SACE9C,QACA,UACA,aACAoB,MACAK,GACAjC,eACAkC,YAPF,CADF;AAWAiB,mBAAO8B,cACL3B,SACE9C,QACA,UACA,oBACAoB,MACAK,GACAjC,eACAkC,YAPF,CADF;AAWAiB,mBAAOyB,SAAS5B,MAAhB;AACAG,mBAAO2B,SAASnG,KAAhB;AACAwE,mBAAO+B,YACLxC,MAAM,gBAAN,IACIY,SACE9C,QACA,SACA,kBACAoB,MACAK,GACAjC,eACAkC,YAPF,EAQEiD,IAAI,SAAUV,GAAG;AACjB,qBAAOA,IAAI9F;YADM,CARnB,IAWA,IAbN;AAeA0E,kBAAMU,UAAU9C,KAAhB;UAjEsB;QAjCa;AAsGvC9C,YAAIiH,WAAW;AACfjH,YAAIkH,OAAO;AACXlH,YAAImH,iBAAiB;AACrBnH,YAAIqF,SAAAA,QAAM+B,UAAV,QAAmBC,YAAAA;AACnB,aAAKzE,SAAQ,KAAKA,SAAQ,MAAM,gBAAgByB,QAAQ;AACtDjE,cAAMkH,YAAYnC,SAChB9C,QACA,UACA,cACAoB,MACAK,GACAjC,eACAkC,YAPgB;AASlB,cAAIuD,WAAW;AACbjC,qBACE,OAAOiC,cAAc,WACjBhC,aAAagC,WAAW/D,WAAxB,IACA+D,UAAU/B,SAAV;AACNvF,gBAAIuH,YAAY5H;AAChBS,gBAAMoH,eAAe/H,WAAWA,SAASP,SAASmG,MAAlB,IAA0B1F;AAC1D,gBACGM,eAAeX,cAAcA,WAAW+F,MAAX,KAC9BmC,cACA;AACApH,kBAAMqH,wBAAwBtC,SAC5B9C,QACA,UACA,2BACAoB,MACAK,GACAjC,eACAkC,YAP4B;AAS9B,kBAAInB,SAAQ,GAAG;AACbxC,oBAAMsH,OAAOrE,QAAQO,YAAR;AAEb,oBAAI8D,KAAKC,mBAAmBD,KAAKE,kBAAkB;AACjDxH,sBAAMyH,SAASH,KAAKI,UAAL;AACf1H,sBAAM2H,OAAOC,KAAKC,KAChBD,KAAKE,IACHF,KAAKG,KAAKN,OAAO,CAAP,IAAYA,OAAO,CAAP,KAAavE,YAAY,CAA/C,GACA0E,KAAKG,KAAKN,OAAO,CAAP,IAAYA,OAAO,CAAP,KAAavE,YAAY,CAA/C,CAFF,CADW;AAMb,sBAAIyE,OAAO,KAAK;AAEd3H,wBAAMgI,WACJV,KAAK7D,QAAL,MAAmB,oBACf6D,KAAKE,iBAAL,IACAF,KAAKC,gBAAL;AACN,wBAAI,CAACU,gBAAe;AAClBC,iDAA2B;wBAACC;wBAAKA;sBAAN;AAC3BF,sBAAAA,iBAAgB,IAAIG,gBAClB,SACAF,0BACA,CAAA,GACA,CAAA,GACA,IALc;oBAFE;AAUpBf,gCAAYc;AACZC,6CAAyB,CAAzB,IAA8BF,SAAS,CAAT;AAC9BE,6CAAyB,CAAzB,IAA8BF,SAAS,CAAT;AAC9BhI,wBAAMqI,YAAYtD,SAChB9C,QACA,UACA,oBACAoB,MACAK,GACAjC,eACAkC,YAPgB;AASlB,wBACE0E,cAAc,UACdhB,0BAA0B,OAC1B;AACArH,0BAAMsI,SAAShB,KAAKiB,UAAL;AACfvI,0BAAMwI,cAAclB,KAAKmB,mBAAL;AACpB,+BACM3G,MAAI,GAAGC,OAAKyG,YAAYxG,SAASsG,QACrCxG,MAAIC,MACJD,OAAKwG,QACL;AACAtI,4BAAM0I,KAAKF,YAAY1G,GAAZ;AACX9B,4BAAM2I,KAAKH,YAAY1G,MAAI,CAAhB;AACX9B,4BAAM4I,KAAKJ,YAAY1G,MAAIwG,MAAhB;AACXtI,4BAAM6I,KAAKL,YAAY1G,MAAIwG,SAAS,CAAzB;AACXtI,4BAAM8I,OAAOlB,KAAKmB,IAAIL,IAAIE,EAAb;AACb5I,4BAAMgJ,OAAOpB,KAAKmB,IAAIJ,IAAIE,EAAb;AACb7I,4BAAMiJ,OAAOrB,KAAKE,IAAIY,IAAIE,EAAb;AACb5I,4BAAMkJ,OAAOtB,KAAKE,IAAIa,IAAIE,EAAb;AACb,4BACEb,SAAS,CAAT,KAAec,QACfd,SAAS,CAAT,KAAeiB,QACfjB,SAAS,CAAT,KAAegB,QACfhB,SAAS,CAAT,KAAekB,MACf;AACAnC,2CAAiBa,KAAKuB,MAAMR,KAAKE,IAAID,KAAKF,EAAzB;AACjB;wBAFA;sBAdF;oBAPF;kBA/BY;gBARiC;cAHtC;AAwEf,kBAAIlG,UAAS,KAAK2E,WAAW;AAC3BnH,oBAAMoJ,WAAWrE,SACf9C,QACA,UACA,aACAoB,MACAK,GACAjC,eACAkC,YAPe;AASjB3D,oBAAMqJ,YACJlF,MAAM,YAAN,MAAwB5E,SACpBwF,SACE9C,QACA,SACA,cACAoB,MACAK,GACAjC,eACAkC,YAPF,IASA;AACN,oBAAI,CAAC0F,aAAaA,UAAUC,MAAM,GAAG;AACnCtJ,sBAAMuJ,YAAYxE,SAChB9C,QACA,SACA,mBACAoB,MACAK,GACAjC,eACAkC,YAPgB;AASlB3D,sBAAMwJ,YAAYzE,SAChB9C,QACA,SACA,mBACAoB,MACAK,GACAjC,eACAkC,YAPgB;AASlB/D,sBAAI6J,eAAkBxE,SAAQmE,MAAAA,WAAYI,MAAAA,YAAaD,MAAAA;AACvD,sBAAIF,cAAc,MAAM;AACtBI,oCAAgB,MAAIJ;kBADE;AAGxBrC,4BAAUzF,eAAekI,YAAf;AACV,sBAAI,CAACzC,SAAS;AACZhH,wBAAM0J,gBAAgBC,qBACpB1H,QACAoB,MACAK,GACAjC,aAJoB;AAMtB7B,wBAAIgK,eAAAA;AACJ,wBAAI,iBAAiB3F,QAAQ;AAC3B2F,qCAAe7E,SACb9C,QACA,UACA,eACAoB,MACAK,GACAjC,eACAkC,YAPa;AASfiG,mCAAa,CAAb,KAAmB;oBAVQ;AAY7B5J,wBAAMyE,UAAQ4E,YACV;sBACEA,UAAUQ,IAAI;sBACdR,UAAUS,IAAI;sBACdT,UAAUU,IAAI;sBACdV,UAAUC;oBAJZ,IAMA/J;AACJ,wBAAI6H,cAAc;AAChBpH,0BAAMgK,cAAc;wBAClBvF,OAAOA;wBACPwF,gBAAgB5C,0BAA0B;wBAC1CuC;wBACAF;sBAJkB;AAMpB,0BAAI,OAAOtC,iBAAiB,UAAU;AAEpC4C,oCAAYzJ,MAAM6G;sBAFkB,OAG/B;AACL4C,oCAAY/J,MAAMmH;AAClB4C,oCAAYE,UAAU;0BACpB9C,aAAahH;0BACbgH,aAAa/G;wBAFO;sBAFjB;AAOP2G,gCAAU,IAAImD,aAAKH,WAAT;oBAjBM,OAkBX;AACLhK,0BAAM2F,oBAAkBzG,WAAW+F,MAAX;AACxBrF,0BAAIK,OAAJ,QAASiK,UAAAA,QAASvC,SAAAA,QAAMyC,SAAAA;AACxB,0BAAIZ,WAAW;AACbvJ,wBAAAA,OAAMoK,aACJxK,aACA8F,mBACA6D,WACAD,SAJI;AAMNW,kCAAU;0BAACjK,KAAIG;0BAAOH,KAAII;wBAAhB;sBAPG,OAQR;AACLJ,wBAAAA,OAAMJ;AACNqK,kCAAUpK;AACV6H,iCAAO;0BAAChC,kBAAgBvF;0BAAOuF,kBAAgBtF;wBAAxC;AACP+J,iCAAS;0BAACzE,kBAAgBO;0BAAGP,kBAAgBQ;wBAApC;sBAJJ;AAMPa,gCAAU,IAAImD,aAAK;wBACjB1F,OAAOA;wBACPxE,KAAKA;wBACLiK;wBACAvC,MAAMA;wBACNyC;wBACAH,gBAAgB5C,0BAA0B;wBAC1CiD,OAAOlB,WAAWzD,kBAAgB4E;wBAClCX;wBACAF;sBATiB,CAAT;oBAjBL;AA6BPnI,mCAAekI,YAAf,IAA+BzC;kBA3EnB;gBAxBqB;AAsGrC,oBAAIA,SAAS;AACX,oBAAElD;AACFgB,0BAAQ/B,OAAOe,YAAP;AACR,sBACE,CAACgB,SACD,CAACA,MAAMzF,SAAN,KACDyF,MAAMM,QAAN,KACAN,MAAMO,UAAN,GACA;AACAP,4BAAQ,IAAIS,cAAJ;AACRxC,2BAAOe,YAAP,IAAuBgB;kBAFvB;AAIFA,wBAAM0F,YAAYrD,SAAlB;AACAH,0BAAQyD,YACN1D,iBACE2D,QACE3F,SACE9C,QACA,UACA,eACAoB,MACAK,GACAjC,eACAkC,YAPF,CADF,CAFJ;AAcAqD,0BAAQ2D,WACN5F,SACE9C,QACA,SACA,gBACAoB,MACAK,GACAjC,eACAkC,YAPF,CADF;AAWAqD,0BAAQ4D,UACNC,OACE9F,SACE9C,QACA,UACA,eACAoB,MACAK,GACAjC,eACAkC,YAPF,CADF,CADF;AAaAmB,wBAAMgG,SAAS9D,OAAf;AACAF,yBAAOhC,MAAMQ,QAAN;AACPR,wBAAMiG,QAAQxL,MAAd;AACAuF,wBAAMU,UAAU9C,KAAhB;AACAmE,6BAAW;AACXI,8BAAY;gBAxDD;cA5Hc,OAsLtB;AACLA,4BAAY;cADP;YAxQP;UAVW;QAVuC;AAmSxD,YAAIzE,SAAQ,KAAKP,OAAMO,SAAS,UAAU;AACxC,YAAEsB;AACFgB,kBAAQ/B,OAAOe,YAAP;AACR,cACE,CAACgB,SACD,CAACA,MAAMzF,SAAN,KACDyF,MAAMM,QAAN,KACAN,MAAMO,UAAN,GACA;AACAP,oBAAQ,IAAIS,cAAJ;AACRxC,mBAAOe,YAAP,IAAuBgB;UAFvB;AAIF9E,cAAMgL,eACJ,mBAAmB7G,QACfY,SACE9C,QACA,SACA,iBACAoB,MACAK,GACAjC,eACAkC,YAPF,IASA;AACN3D,cAAMiL,oBAAoB3E,iBACxBvB,SACE9C,QACA,SACA,uBACAoB,MACAK,GACAjC,eACAkC,YAPF,GASAoB,SACE9C,QACA,SACA,yBACAoB,MACAK,GACAjC,eACAkC,YAPF,CAVwB;AAoB1B3D,cAAMkL,cAAc5E,iBAClBvB,SACE9C,QACA,SACA,gBACAoB,MACAK,GACAjC,eACAkC,YAPF,GASAoB,SACE9C,QACA,SACA,kBACAoB,MACAK,GACAjC,eACAkC,YAPF,CAVkB;AAoBpB3D,cAAMmL,oBAAoBpG,SACxB9C,QACA,SACA,uBACAoB,MACAK,GACAjC,eACAkC,YAPwB;AAS1B3D,cAAMoL,YACJJ,eACA,MACAC,oBACA,MACAC,cACA,MACAC;AACFnE,oBAAUzF,eAAe6J,SAAf;AACV,cAAI,CAACpE,SAAS;AACZA,sBAAU,IAAIqE,eAAO;cACnBC,QAAQN;cACRpG,QACEqG,qBAAqBE,oBAAoB,IACrC,IAAIvI,eAAO;gBACTxC,OAAO+K;gBACP1G,OAAOwG;cAFE,CAAX,IAIA1L;cACNoF,MAAMuG,cACF,IAAIpI,aAAK,EACP2B,OAAOyG,YADA,CAAT,IAGA3L;cACJmK,eAAe;YAdI,CAAX;AAgBVnI,2BAAe6J,SAAf,IAA4BpE;UAjBhB;AAmBdlC,gBAAMgG,SAAS9D,OAAf;AACAF,iBAAOhC,MAAMQ,QAAN;AACPR,gBAAMiG,QAAQxL,MAAd;AACAuF,gBAAM0F,YAAYjL,MAAlB;AACAuF,gBAAMU,UAAU9C,KAAhB;AACAmE,qBAAW;QA1G6B;AA6G1CjH,YAAI2L,QAAJ,QAAWC,OAAX,QAAiBC,iBAAjB,QAAiCC,WAAjC,QAA2CC,gBAA3C,QAA0DC,eAAAA;AAC1D,YAAI,gBAAgB3H,QAAQ;AAC1ByH,qBAAW9D,KAAKiE,MACd9G,SACE9C,QACA,UACA,aACAoB,MACAK,GACAjC,eACAkC,YAPF,CADS;AAWX3D,cAAM8L,YAAY/G,SAChB9C,QACA,UACA,aACAoB,MACAK,GACAjC,eACAkC,YAPgB;AASlB8H,2BAAiB1G,SACf9C,QACA,UACA,oBACAoB,MACAK,GACAjC,eACAkC,YAPe;AASjB6H,iBAAOO,gBACL3M,YAAWA,UAAS0M,SAAT,IAAsBA,WACjCJ,UACAD,cAHK;AAKP,cAAI,CAACD,KAAKQ,SAAS,YAAd,GAA6B;AAChCR,oBAAQ;UADwB;AAGlCG,0BAAgB5G,SACd9C,QACA,UACA,uBACAoB,MACAK,GACAjC,eACAkC,YAPc;AAShBiI,yBAAe7G,SACb9C,QACA,UACA,kBACAoB,MACAK,GACAjC,eACAkC,YAPa;AASf3D,cAAMiM,YAAYlH,SAChB9C,QACA,UACA,cACAoB,MACAK,GACAjC,eACAkC,YAPgB;AASlB,cAAI,OAAOsI,cAAc,YAAYA,UAAUC,UAAU;AACvD,gBAAID,UAAUC,SAASlK,WAAW,GAAG;AACnCuJ,sBAAQU,UAAU9G,SAAV;YAD2B,OAE9B;AACLoG,sBAAQU,UAAUC,SAASC,OAAO,SAACC,KAAKC,OAAOvK,IAAM;AACnD9B,oBAAMsM,QAAQD,MAAME,YAChBF,MAAME,UAAUC,MAAM,GAAtB,IACAV;AACJ9L,oBAAMyM,YAAYV,gBAChB3M,YAAWA,UAASkN,KAAT,IAAkBA,OAC7BZ,YAAYW,MAAM/B,SAAS,IAC3BmB,cAHgB;AAKlB7L,oBAAIkH,QAAOuF,MAAMvF;AACjB,oBAAIA,UAAS,MAAM;AACjBsF,sBAAI3J,KAAK,MAAM,EAAf;AACA,yBAAO2J;gBAFU;AAInB,oBAAI5J,SAAQ,GAAG;AACb4J,sBAAI3J,KAAKiK,mBAAmB5F,OAAM6E,aAAzB,GAAyCc,SAAlD;AACA;gBAFa;AAIf3F,gBAAAA,QAAO6F,SACL7F,OACA2F,WACAb,cACAD,aAJK,EAKLa,MAAM,IALD;AAMP,yBAAS1K,OAAI,GAAGC,MAAK+E,MAAK9E,QAAQF,OAAIC,KAAI,EAAED,MAAG;AAC7C,sBAAIA,OAAI,GAAG;AACTsK,wBAAI3J,KAAK,MAAM,EAAf;kBADS;AAGX2J,sBAAI3J,KAAKqE,MAAKhF,IAAL,GAAS2K,SAAlB;gBAJ6C;AAM/C,uBAAOL;cA9B4C,GA+BlD,CAAA,CA/BK;YADH;UAHgD,OAqClD;AACLb,oBAAQrG,aAAa+G,WAAW9I,WAAxB,EAAoCyJ,KAApC;UADH;AAGPlI,oBAAUK,SACR9C,QACA,SACA,gBACAoB,MACAK,GACAjC,eACAkC,YAPQ;QAzGgB;AAmH5B,YAAI4H,SAAS7G,WAAW,CAACuC,WAAW;AAClC,cAAI,CAACJ,UAAU;AACb,cAAE/C;AACFgB,oBAAQ/B,OAAOe,YAAP;AACR,gBACE,CAACgB,SACD,CAACA,MAAMQ,QAAN,KACDR,MAAMM,QAAN,KACAN,MAAMO,UAAN,GACA;AACAP,sBAAQ,IAAIS,cAAJ;AACRxC,qBAAOe,YAAP,IAAuBgB;YAFvB;AAIFA,kBAAMgG,SAASvL,MAAf;AACAuF,kBAAM0F,YAAYjL,MAAlB;UAba;AAef,cAAI,CAACuF,MAAMQ,QAAN,GAAiB;AACpBR,kBAAMiG,QACJjE,QACE,IAAI+F,aAAK;cACPC,SAAS;gBAAC;gBAAG;gBAAG;gBAAG;cAAV;YADF,CAAT,CAFJ;UADoB;AAQtBhG,iBAAOhC,MAAMQ,QAAN;AACPtF,cAAM+M,gBAAgB9I,OAAO,gBAAP;AACtB,cAAI8I,iBAAiB,aAAa;AAChCxB,oBAAQyB,MAAMC,QAAQ1B,KAAd,IACJA,MAAM3E,IAAI,SAACsG,GAAGpL,IAAOA;AAAAA,qBAAAA,KAAI,IAAIoL,IAAIA,EAAEC,YAAF;YAAA,CAAjC,IACA5B,MAAM4B,YAAN;UAH4B,WAIvBJ,iBAAiB,aAAa;AACvCxB,oBAAQyB,MAAMC,QAAQ1B,KAAd,IACJA,MAAM3E,IAAI,SAACsG,GAAGpL,IAAOA;AAAAA,qBAAAA,KAAI,IAAIoL,IAAIA,EAAEE,YAAF;YAAA,CAAjC,IACA7B,MAAM6B,YAAN;UAHmC;AAKzCpN,cAAMqN,eAAeL,MAAMC,QAAQ1B,KAAd,IACjBA,QACA/I,SAAQ,IACRkK,mBAAmBnB,OAAOI,aAA1B,IACAgB,SAASpB,OAAOC,MAAMI,cAAcD,aAApC;AACJ7E,eAAKiE,QAAQsC,YAAb;AACAvG,eAAKwG,QAAQ9B,IAAb;AACA1E,eAAK2D,YACHC,QACE3F,SACE9C,QACA,UACA,eACAoB,MACAK,GACAjC,eACAkC,YAPF,CADF,CADF;AAaA3D,cAAMuN,aAAaxI,SACjB9C,QACA,UACA,eACAoB,MACAK,GACAjC,eACAkC,YAPiB;AASnB3D,cAAMqI,cACJxB,YAAYrE,SAAQ,IAChB,UACAuC,SACE9C,QACA,UACA,oBACAoB,MACAK,GACAjC,eACAkC,YAPF;AASNmD,eAAK0G,aAAanF,WAAlB;AACA,cAAI,OAAOvB,KAAK2G,cAAc,YAAY;AACxCzN,gBAAM0N,gBAAgB3I,SACpB9C,QACA,UACA,kBACAoB,MACAK,GACAjC,eACAkC,YAPoB;AAStBmD,iBAAK2G,UAAUC,gBAAgB,CAA/B;UAVwC;AAY1C5G,eAAK6G,YAAYtF,gBAAc,OAA/B;AACAzI,cAAIgO,gBAAgB7I,SAClB9C,QACA,SACA,mBACAoB,MACAK,GACAjC,eACAkC,YAPkB;AASpB3D,cAAM6N,aAAa9I,SACjB9C,QACA,UACA,eACAoB,MACAK,GACAjC,eACAkC,YAPiB;AASnB3D,cAAM8N,gBAAgB/I,SACpB9C,QACA,SACA,kBACAoB,MACAK,GACAjC,eACAkC,YAPoB;AAUlBoK,cAAAA,UAAU;AACdnO,cAAIoO,UAAU;AACd,cAAI3F,eAAa,SAAS;AACxBzI,gBAAIqO,YAAY;AAChB,gBAAIV,WAAWlL,QAAQ,MAAnB,MAA+B,IAAI;AACrC4L,0BAAY;AACZD,wBAAUJ;YAF2B,WAG5BL,WAAWlL,QAAQ,OAAnB,MAAgC,IAAI;AAC7C4L,0BAAY;AACZD,wBAAU,CAACJ;YAFkC;AAI/C9G,iBAAKoH,aAAaD,SAAlB;AACAjO,gBAAMmO,wBAAwBpJ,SAC5B9C,QACA,UACA,2BACAoB,MACAK,GACAjC,eACAkC,YAP4B;AAS9BmD,iBAAKsH,kBAAkBD,yBAAyB,KAAhD;UAnBwB,OAoBnB;AACLrH,iBAAKuH,YACF3D,QACC3F,SACE9C,QACA,UACA,kBACAoB,MACAK,GACAjC,eACAkC,YAPF,CADD,IAWC4H,MAAMvJ,SACNqL,aAAarL,MAbjB;AAeA8E,iBAAKoH,aAAL;AACApH,iBAAKsH,kBAAkB,KAAvB;UAjBK;AAmBPxO,cAAI0O,eAAe;AACnB,cAAIf,WAAWlL,QAAQ,QAAnB,KAAgC,GAAG;AACrCiM,2BAAe;AACfP,sBAAU,CAACH,gBAAgB,OAAOnC,iBAAiB,KAAKC;UAFnB,WAG5B6B,WAAWlL,QAAQ,KAAnB,KAA6B,GAAG;AACzCiM,2BAAe;AACfP,sBAAUH,gBAAgB,OAAOnC,iBAAiB,KAAKC;UAFd;AAI3C5E,eAAKyH,gBAAgBD,YAArB;AACAtO,cAAMwO,cAAczJ,SAClB9C,QACA,UACA,gBACAoB,MACAK,GACAjC,eACAkC,YAPkB;AASpBmD,eAAK2H,WAAWD,gBAAgB,SAASjP,SAAYiP,WAArD;AACA1H,eAAK4H,WACHb,WAAW,CAAX,IAAgBnC,WAAWsC,UAAUF,cAAc,CAAd,CADvC;AAGAhH,eAAK6H,WACHd,WAAW,CAAX,IAAgBnC,WAAWqC,UAAUD,cAAc,CAAd,CADvC;AAGAjL,oBAAUwD,SACRC,iBACEvB,SACE9C,QACA,SACA,cACAoB,MACAK,GACAjC,eACAkC,YAPF,GASAe,OAVF,CADF;AAcAoC,eAAK8H,QAAQ/L,SAAb;AACA7C,cAAMuJ,cAAYjD,iBAChBvB,SACE9C,QACA,SACA,mBACAoB,MACAK,GACAjC,eACAkC,YAPF,GASAe,OAVgB;AAYlB,cAAI6E,aAAW;AACb5G,qBAAS0D,SAASkD,WAAlB;AAGAqE,6BAAiB;AAEjB5N,gBAAM6O,eAAe,MAAMnD;AAC3B/I,qBAAS4D,SACPqH,iBAAiBiB,eAAejB,gBAAgBiB,YADlD;AAGA/H,iBAAKgI,UAAUnM,QAAf;UAVa,OAWR;AACLmE,iBAAKgI,UAAUvP,MAAf;UADK;AAGPS,cAAM+O,cAAchK,SAClB9C,QACA,UACA,gBACAoB,MACAK,GACAjC,eACAkC,YAPkB;AASpB3D,cAAM8M,UAAUhG,KAAKkI,WAAL;AAChB,cAAID,gBAAgBjC,QAAQ,CAAR,GAAY;AAC9BA,oBAAQ,CAAR,IAAaiC;AACbjC,oBAAQ,CAAR,IAAaiC;AACbjC,oBAAQ,CAAR,IAAaiC;AACbjC,oBAAQ,CAAR,IAAaiC;UAJiB;AAMhCjK,gBAAMU,UAAU9C,KAAhB;QAjPkC;MAvvBgC;IAfvB;AA4/BjD,QAAIoB,eAAe,IAAI;AACrBf,aAAOf,SAAS8B,eAAe;AAC/B,UAAImL,aAAa;AACf,YAAI,OAAOhM,QAAQiM,QAAQ,YAAY;AAErCjM,kBAAQiM,IAAI,gBAAgBnL,qBAA5B;QAFqC,OAGhC;AAELd,kBAAQG,cAAR,EAAwB,cAAxB,IAA0CW;QAFrC;MAJQ;AASjB,aAAOhB;IAXc;EA9gC4B;AA6hCrDjE,UAAQqQ,SAASnM,aAAjB;AACAlE,UAAQoQ,IAAI,iBAAiBrN,YAA7B;AACA/C,UAAQoQ,IAAI,iBAAiB5N,YAA7B;AACAxC,UAAQoQ,IAAI,uBAAuB,CAAA,CAAnC;AACA,SAAOlM;AA9nCP;AEzOF,SAASoM,mBAAmBC,YAAYC,UAAgB;;eAAL;AACjD,SAAOD,WAAWE,UAAX,IACHC,UAAU;IACRC,QAAQJ,WAAWE,UAAX;IACRD;IACAI,SAAS;EAHD,CAAV,EAIGC,eAJH,IAKAC;AAPkD;AAexD,SAASC,gBAAgBC,UAAUC,SAAS;AAC1C,MAAI,CAACA,QAAQC,aAAa;AACxBD,cAAUE,OAAOC,OAAO,CAAA,GAAIH,OAAlB;AACVI,QAAMC,eAAe,IAAIC,IAAIP,QAAR,EAAkBM;AAEvCA,iBAAaE,QAAb,SAAsBC,OAAOC,KAAQ;AACnCT,cAAQC,cAAcO;AACtBR,cAAQU,mBAAmBD;IAFQ,CAArC;EAJwB;AAS1B,SAAOT;AAVmC;AA2DrC,SAASW,WACdC,OACAC,SACAC,yBACAC,eACAC,aACA;;8BAH0B;;oBACV,CAAA;;kBACFC;AAEdC,MAAInB,UAAUoB;AAEdD,MAAIlB;AACJkB,MAAIE;AACJF,MAAIG,eAAe;AACnB,MACE,OAAOP,4BAA4B,YACnC,CAACQ,MAAMC,QAAQT,uBAAd,GACD;AACAd,cAAUc;AACVM,qBAAiBpB,QAAQwB,UAAUxB,QAAQyB;AAC3CV,oBAAgBf;EAHhB,OAIK;AACLoB,qBAAiBN;EADZ;AAGP,MAAI,OAAOC,kBAAkB,UAAU;AACrChB,eAAWgB;AACXf,cAAU,CAAA;EAF2B,OAGhC;AACLD,eAAWgB,cAAchB;AACzBC,cAAUe;EAFL;AAIP,MAAIf,QAAQqB,iBAAiB,OAAO;AAClCA,mBAAe;EADmB;AAGpC,MAAI,CAACL,aAAa;AAChBA,kBAAchB,QAAQgB;EADN;AAGlB,MACE,CAACjB,YACD,OAAOc,YAAY,YACnB,CAACA,QAAQa,KAAR,EAAeC,WAAW,GAA1B,GACD;AACA5B,eAAWc;EADX;AAGF,MAAId,UAAU;AACZA,eAAWA,SAAS4B,WAAW,OAApB,IACPC,SAASC,OACTC,kBAAkB/B,UAAUC,QAAQC,WAApC;AACJD,cAAUF,gBAAgBC,UAAUC,OAA1B;EAJE;AAOd,SAAO,IAAI+B,QAAQ,SAAUC,SAASC,QAAQ;AAI5CC,eAAWrB,SAASb,OAApB,EACGmC,KAAK,SAAUtB,UAAS;AACvB,UAAIA,SAAQuB,WAAW,GAAG;AACxB,eAAOH,OAAO,IAAII,MAAM,6BAAV,CAAP;MADiB;AAG1B,UACE,EAAEzB,iBAAiB0B,kBAAe1B,iBAAiB2B,sBACnD;AACA,eAAON,OACL,IAAII,MAAM,kDAAV,CADK;MADP;AAMFjC,UAAMoC,OAAO5B,iBAAiB2B,sBAAkB,WAAW;AAC3D,UAAI,CAACnB,gBAAgB;AACnBD,mBAAWjB,OAAOuC,KAAK5B,SAAQ6B,OAApB,EAA6BC,KAAK,SAAUlC,KAAK;AAC1D,iBAAOI,SAAQ6B,QAAQjC,GAAhB,EAAqB+B,SAASA;QADqB,CAAjD;AAGXpB,yBAAiBD;MAJE,WAKVG,MAAMC,QAAQH,cAAd,GAA+B;AACxCD,mBAAWN,SAAQY,OAAOkB,KAAK,SAAU/B,QAAO;AAC9C,iBAAOA,OAAMgC,OAAOxB,eAAe,CAAf;QAD0B,CAArC,EAERI;MAHqC,OAInC;AACLL,mBAAWC;MADN;AAGP,UAAI,CAACD,UAAU;AACb,eAAOc,OAAO,IAAII,MAAM,QAAMG,OAAN,+BAAA,CAAjB;MADM;AAIf,eAASK,eAAe;AACtB,YAAI,CAACxB,cAAc;AACjB,iBAAOU,QAAQC,QAAR;QADU;AAGnB,YAAIpB,iBAAiB2B,qBAAiB;AACpC,iBAAOO,kBACLjC,SAAQ6B,QAAQvB,QAAhB,GACApB,UACAC,OAHK,EAILmC,KAAK,SAAUX,SAAQ;AACvBpB,gBAAM2C,gBAAenC,MAAMoC,UAAN;AACrB,gBAAI,CAACD,eAAc;AACjBnC,oBAAMqC,UAAUzB,OAAhB;YADiB,WAERA,YAAWuB,eAAc;AAClCA,cAAAA,cAAaG,mBAAmB1B,QAAO2B,mBAAP,CAAhC;AAEA,kBAAI,CAACJ,cAAaK,SAAS;AAEzBL,gBAAAA,cAAaK,UAAU5B,QAAO4B;cAFL;AAI3B,kBAAI,CAACL,cAAaM,gBAAb,GAAgC;AACnCN,gBAAAA,cAAaO,gBAAgB9B,QAAO6B,gBAAP,CAA7B;cADmC;AAGrC,kBACEN,cAAaQ,oBAAb,MAAuCC,qBACvC;AACAT,gBAAAA,cAAaU,oBACXjC,QAAO+B,oBAAP,CADF;cADA;AAKF,kBACEG,WACEX,cAAaY,cAAb,GACAnC,QAAOmC,cAAP,CAFF,GAIA;AACAZ,gBAAAA,cAAaa,WAAWpC,QAAOqC,YAAP;cADxB;YAtBgC;AA0BpC,gBACE,CAACC,SAASlD,MAAMmD,iBAAN,CAAT,KACD,CAACD,SAASlD,MAAMoD,WAAN,CAAT,GACD;AACA5D,kBAAMwD,WAAWhD,MAAMoC,UAAN,EAAkBa,YAAlB;AACjBjD,oBAAMqD,iBACJL,SAASM,cAAcN,SAASI,WAAT,CAAvB,CADF;YAFA;UAjCqB,CAJlB;QAD6B;AA8CtC5D,YAAM+D,WAAWtD,SAAQ6B,QAAQvB,QAAhB;AACjBD,YAAIM,SAASZ,MAAMoC,UAAN;AACb,YAAI,CAACxB,UAAUA,OAAO4C,IAAI,eAAX,MAAgCD,UAAU;AACvD3C,mBAAS6C,mBAAmBF,UAAUpE,UAAUC,OAAvC;QAD8C;AAGzDI,YAAM2C,eAA4CnC,MAAMoC,UAAN;AAClD,YAAI,CAACD,cAAc;AACjBnC,gBAAMqC,UAAUzB,MAAhB;QADiB,WAERA,WAAWuB,cAAc;AAClC,cAAI,CAACA,aAAaM,gBAAb,GAAgC;AACnCN,yBAAaO,gBAAgB9B,OAAO6B,gBAAP,CAA7B;UADmC;AAIrC,cAAI,CAACN,aAAaK,SAAS;AAEzBL,yBAAaK,UAAU5B,OAAO8C,UAAP;UAFE;AAK3BvB,uBAAawB,OAAO/C,OAAOgD,OAAP;QAVc;AAYpC,eAAOzC,QAAQC,QAAR;MAtEe;AAyExBd,UAAIuD,aAAaC,YAAYC,gBAAgBC;AAC7C,eAASC,WAAW;AAClB,YAAI,CAACD,UAAU,CAAC/D,SAAQiE,UAAUJ,aAAa;AAC7C,cAAI1E,QAAQV,cAAc,CAAC0B,aAAa;AACtCZ,gBAAMd,aAAaqE,IAAc3D,QAAQV,UAAtB;AACnBc,gBAAM2E,QAAQzF,WAAW0F,SAAX;AACd,gBAAID,UAAU,KAAK;AACjB/D,4BAAcnB,mBAAmBoF,IAC9BC,SAAAA,YAAeA;AAAAA,uBAAAA,aAAaC,gBAAgBJ,KAAhB;cAAA,CADjB;YADG;UAHmB;AASxCH,kBAAQQ,cACNxE,OACAC,UACAO,gBACAJ,aACA0D,YACAC,gBACAU,UACArF,QAAQsF,QARF;AAUR,cAAI,CAAC1E,MAAM2E,SAAN,GAAkB;AACrBtD,mBAAO,IAAII,MAAJ,iCAAyClB,WAA/B,GAAA,CAAjB;UADqB,OAEhB;AACL0B,yBAAA,EAAeV,KAAKH,OAApB,EAA6BwD,MAAMvD,MAAnC;UADK;QAtBsC,WAyBpC2C,OAAO;AAChBhE,gBAAM6E,SAASb,KAAf;AACA/B,uBAAA,EAAeV,KAAKH,OAApB,EAA6BwD,MAAMvD,MAAnC;QAFgB,OAGX;AACLA,iBAAO,IAAII,MAAM,6CAAV,CAAP;QADK;MA7BW;AAkCpB,UAAIxB,SAAQiE,QAAQ;AAClB1E,YAAM0E,SAAS,IAAIxE,IACjBoF,mBACE7E,SAAQiE,QACR9E,QAAQC,aACRF,YAAY6B,SAASC,IAHvB,CADa;AAOf4C,sBAAckB,OAAOC,oBAAoB,MAAM,MAAM;AACrDxF,YAAMyF,aAAapB,eAAe,MAAM,QAAQ;AAChDvD,YAAI4E,YACFhB,OAAOiB,SACPjB,OAAOkB,WACPH,aACA,UACAf,OAAOmB;AAET,YAAIlE,QAAQ,SAAUC,UAASC,SAAQ;AACrCiE,wBAAc,UAAUJ,WAAW9F,OAAnC,EACGmC,KAAKH,QADR,EAEGwD,MAAM,SAAUW,QAAO;AACtBL,wBACEhB,OAAOiB,SAASjB,OAAOkB,WAAW,UAAUlB,OAAOmB;AACrDC,0BAAc,UAAUJ,WAAW9F,OAAnC,EACGmC,KAAKH,QADR,EAEGwD,MAAMvD,OAFT;UAHsB,CAF1B;QADqC,CAAvC,EAWGE,KAAK,SAAUiE,aAAa;AAC3B,cAAIA,gBAAgBnF,QAAW;AAC7BgB,mBAAO,IAAII,MAAM,mBAAV,CAAP;UAD6B;AAG/BqC,uBAAa0B;AACbzB,2BACEG,OAAOiB,SACPjB,OAAOkB,WACPH,aACA,SACAf,OAAOmB;AACT,cAAIjG,QAAQqG,kBAAkB;AAC5BjG,gBAAMkG,cAActG,QAAQqG,iBAC1B1B,gBACA,aAFkB;AAIpB,gBAAI2B,uBAAuBC,SAAS;AAClC5B,+BAAiB6B,UAAUF,YAAYG,GAAtB;YADiB;UALR;AAS9B5B,mBAAA;QApB2B,CAX/B,EAiCGW,MAAM,SAAUkB,KAAK;AACpBzE,iBACE,IAAII,MACF,+BAA6ByD,YAA7B,OAA2CY,IAAIC,OADjD,CADF;QADoB,CAjCxB;MAjBkB,OAyDb;AACL9B,iBAAA;MADK;IAlMgB,CAD3B,EAuMGW,MAAMvD,MAvMT;EAJ4C,CAAvC;AA3CP;AA0PF7B,IAAMwG,WAAW,CAAA;AAEjB,SAASC,mBAAmBC,YAAYjG,SAASb,SAAS;AACxDa,UAAQY,OAAOsF,KAAK,SAAUnG,OAAO;AACnC,QAAIA,MAAM4B,SAAS,cAAc;AAC/B,UAAIsE,sBAAsBE,eAAO;AAC/BF,mBAAWG,cAAc,SAAU/B,YAAY;AAC7C,iBAAOgC,mBAAmBtG,OAAOsE,YAAYlF,SAAS,CAAA,CAA/C;QADsC,CAA/C;AAGA,eAAO;MAJwB,WAM/B8G,sBAAsBK,eACtBL,sBAAsBM,eACtB;AACAN,mBAAWO,UAAX,EAAuBC,KAAKC,qBAAqB3G,OAAOZ,SAAS,CAAA,CAArC,CAA5B;AACA,eAAO;MAFP;IAT6B;EADE,CAArC;AADwD;AAoCnD,SAASwH,gBAAgBV,YAAYjG,SAASb,SAAc;;cAAJ,CAAA;AAC7D,SAAOkC,WAAWrB,SAASb,OAApB,EAA6BmC,KAAK,SAAUtB,UAAS;AAC1DgG,uBAAmBC,YAAYjG,UAASb,OAAxC;EAD0D,CAArD;AAD0D;AAiBnE,SAASyH,mBAAmBC,UAAUC,YAAY;AAChDC,MAAMC,SAASH,SAASG;AACxB,MAAIA,QAAQ;AACVD,QAAME,KAAKC,WAAW;MAACF,OAAO,CAAP;MAAWA,OAAO,CAAP;IAAZ,GAAwBF,UAAnC;AACXC,QAAMI,KAAKD,WAAW;MAACF,OAAO,CAAP;MAAWA,OAAO,CAAP;IAAZ,GAAwBF,UAAnC;AACX,WAAO;MAACG,GAAG,CAAH;MAAOA,GAAG,CAAH;MAAOE,GAAG,CAAH;MAAOA,GAAG,CAAH;IAAtB;EAHG;AAKZ,SAAOC,IAAcN,UAAd,EAA0BO,UAA1B;AAPyC;AAUlD,SAASC,0BAA0BC,UAAUV,UAAUW,SAAS;AAC9DT,MAAMU,iBAAiB,IAAIC,iBAAS;IAClCb;IACAc,UAAUJ,SAASI,YAAYd,SAASc,YAAY;EAFlB,CAAb;AAIvBZ,MAAMa,cAAcH,eAAeI,YAAf;AACpBd,MAAMe,WAAWL,eAAeM,YAAf;AACjBhB,MAAMD,aAAaM,IAAcI,QAAQV,cAAc,WAApC;AACnBC,MAAMiB,SAASpB,mBAAmBgB,aAAad,UAAhC;AACfC,MAAMkB,mBAAmBnB,WAAWO,UAAX;AACzBN,MAAMmB,UAAUN,YAAYO,WAAW;AACvCpB,MAAMqB,UAAUR,YAAYS,WAAW;AAEvCtB,MAAMuB,gBAAgB;IACpBC,cAAcd,eAAee,gBAAf;IACd1B;IACAgB,UAAU,IAAIW,iBAAS;MACrBC,QAAQT,mBACJU,WAAWV,gBAAX,IACAH,SAASc,UAAU,CAAnB;MACJZ,QAAQA,UAAUF,SAAST,UAAT;MAClBa;MACAW,aAAaC,mBAAmBhC,YAAYD,SAASc,QAAxC,EAAkDoB,MAC7D,GACAX,UAAU,CAFC;MAIbT,UAAUG,SAASkB,YAAY,CAArB;IAVW,CAAb;EAHU;AAgBtB,MAAIC,MAAMC,QAAQtB,YAAYuB,KAA1B,GAAkC;AACpCb,kBAAcc,OAAOxB,YAAYuB;EADG,OAE/B;AACLb,kBAAce,MAAMzB,YAAYuB;EAD3B;AAGP,SAAOb;AAlCuD;AAqChE,SAASgB,mBAAmBC,SAASC,YAAYhC,SAASiC,eAAe;AACvE1C,MAAM2C,aAAa;IACjBC,IAAIJ,QAAQI;IACZC,MAAML,QAAQK;EAFG;AAInB7C,MAAM8C,SAASN,QAAQM,UAAU,CAAA;AACjC9C,MAAM+C,QAAQP,QAAQO,SAAS,CAAA;AAC/BJ,aAAW,OAAX,IAAsBI;AACtB/C,MAAMgD,OAAOC,qBACXR,YACAhC,QAAQqB,eAAeoB,kBAFZ;AAIbC,MAAIC,IAAIC;AACR,MAAIN,MAAM,kBAAN,MAA8BO,QAAW;AAC3CF,SAAKG,SACHZ,YACA,SACA,oBACAK,MACAQ,UACAd,aANG;EADsC;AAU7C,MAAIK,MAAM,oBAAN,MAAgCO,QAAW;AAC7CD,cAAUE,SACRZ,YACA,SACA,sBACAK,MACAQ,UACAd,aANQ;EADmC;AAU/C,SAAOI,OAAOW,cAAc,SACxBH,SACAI,iBAAkBN,IAAIC,OAAtB;AAnCmE;AA4CzE,SAASM,qBAAqBnB,SAAS/B,SAASiC,eAAe;AAC7D1C,MAAM4D,MAAMC,SAASC,cAAc,KAAvB;AACZF,MAAIG,YAAY;AAChBH,MAAII,MAAMC,WAAW;AACrBL,MAAII,MAAME,QAAQ;AAClBN,MAAII,MAAMG,SAAS;AACnB,SAAO,IAAIC,cAAM;IACfC,QAAQ,IAAIC,eAAO,CAAA,CAAX;IACRC,QAAAA,SAAAA,OAAOC,YAAY;AACjBxE,UAAMyE,SAAQlC,mBACZC,SACAgC,WAAWE,UAAUjC,YACrBhC,SACAiC,aAJY;AAMdkB,UAAII,MAAMW,kBAAkBF;AAC5B,aAAOb;IARU;EAFJ,CAAV;AANsD;AA8BxD,SAASgB,kBAAkBpE,UAAUqE,UAAUpE,SAAS;AAC7D,SAAO,IAAIqE,QAAQ,SAAUC,SAASC,QAAQ;AAC5CC,gBAAYzE,UAAUqE,UAAUpE,OAAhC,EACGyE,KAAK,SAAUpF,UAAU;AACxBE,UAAMuB,gBAAgBhB,0BACpBC,UACAV,UACAW,OAHoB;AAKtBc,oBAAc4D,SAAS,IAAIC,YAAJ;AAEvB,UAAIlD,MAAMC,QAAQrC,SAASsC,KAAvB,GAA+B;AACjCb,sBAAcc,OAAOvC,SAASsC;MADG,OAE5B;AACLb,sBAAce,MAAMxC,SAASsC;MADxB;AAGP2C,cAAQ,IAAIM,mBAAiB9D,aAArB,CAAR;IAbwB,CAD5B,EAgBG+D,MAAMN,MAhBT;EAD4C,CAAvC;AADsD;AAsC/D,SAASO,gBAAgBC,YAAY;AACnCC,MAAMC,WAAWF,aAAaA,WAAWG,QAAX,IAAuB;AACrD,SAAO,WAASD,SAASE,YAAT,EAAuBC,QAAQ,cAAc,GAA7C,IAAT;AAF4B;AAgErCC,IAAMC,gBAAgB,IAAIC,gBAAJ;AAOtB,SAASC,mBAAmBC,UAAUC,UAAUC,SAAS;AACvDN,MAAMO,OAAOH,SAASG;AACtBP,MAAMQ,gBAAgB,CAAA;AACtB,MAAI,OAAOD,QAAQ,UAAU;AAC3BE,QAAIC,aAAaC,mBACfJ,MACAD,QAAQM,aACRN,QAAQO,oBAAoB,gBAC5BR,YAAYS,SAASC,IAJN;AAMjB,QAAIT,QAAQU,kBAAkB;AAC5BhB,UAAMiB,cAAcX,QAAQU,iBAAiBN,YAAY,SAArC;AACpB,UAAIO,uBAAuBC,SAAS;AAClCR,qBAAaS,UAAUF,YAAYG,GAAtB;MADqB;IAFR;AAM9B,QAAI,sBAAsBC,KAAKX,UAA3B,GAAwC;AAC1CV,UAAMsB,YAAY,SAACC,QAAQC,YAAYC,YAAe;AACpDzB,YAAM0B,eAAeC,gBAAgBF,UAAhB;AACrB,eAAOf,WAAWkB,QAChBF,cACGH,OAAOM,KAAK,GAAZ,IAAoBJ,MAAAA,WAAWK,QAAX,CAAA;MAJ2B;AAOtD9B,UAAM+B,WAAS,IAAIC,gBAAa;QAC9BC,cAAc7B,SAAS8B;QACvBC,QAAQlC;QACRmB,KAAKE;QACLc,UAAUC;MAJoB,CAAjB;AAMfN,eAAOO,IAAI,iBAAiBlC,QAA5B;AACA,aAAO2B;IAfmC;AAiB5C,WAAO,IAAIC,gBAAa;MACtBC,cAAc7B,SAAS8B;MACvBC,QAAQlC;MACRmB,KAAKV;IAHiB,CAAjB;EA9BoB;AAoC7BF,gBAAc+B,WAAWtC,cAAcuC,aAAajC,MAAM,EACxDkC,mBAAmBC,kBAAA,KAAuB,YADc,CAAjC;AAIzB1C,MAAM+B,SAAS,IAAIC,gBACjBW,OAAOC,OACL;IACEX,cAAc7B,SAAS8B;IACvBC,QAAQlC;EAFV,GAIAO,aALF,CADa;AASfuB,SAAOO,IAAI,iBAAiBlC,QAA5B;AACA,SAAO2B;AArDgD;;;AChsBzD,IAAM,aAAN,cAAyB,cAAU;AAAA;AAAA;AAAA;AAAA,EAIjC,YAAYc,QAAO;AACjB,UAAM,kBAAU,KAAK;AAKrB,SAAK,QAAQA;AAAA,EACf;AACF;AAkHA,IAAM,oBAAN,cAAgCC,oBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,EAK9C,YAAY,SAAS;AACnB,UAAM,YAAY,eAAe,UAAU,QAAQ,YAAY;AAC/D,UAAM,SAAS,IAAI,mBAAiB;AAAA,MAClC,OAAO;AAAA,MACP,QAAQ,IAAI,YAAI;AAAA,IAClB,CAAC;AAED,UAAM;AAAA,MACJ;AAAA,MACA,YAAY,QAAQ;AAAA,MACpB;AAAA,MACA,WAAW,QAAQ;AAAA,MACnB,SAAS,QAAQ;AAAA,MACjB,SAAS,QAAQ;AAAA,MACjB,QAAQ,QAAQ;AAAA,MAChB,eAAe,QAAQ;AAAA,MACvB,eAAe,QAAQ;AAAA,MACvB,SAAS,QAAQ;AAAA,MACjB,SAAS,QAAQ;AAAA,MACjB,aAAa,QAAQ;AAAA,MACrB,cAAc,QAAQ;AAAA,MACtB,YAAY,QAAQ;AAAA,MACpB,KAAK,QAAQ;AAAA,MACb,sBAAsB,QAAQ;AAAA,MAC9B,wBAAwB,QAAQ;AAAA,MAChC,SAAS,QAAQ;AAAA,MACjB,wBAAwB,QAAQ;AAAA,MAChC,YAAY,QAAQ;AAAA,IACtB,CAAC;AAED,QAAI,QAAQ,aAAa;AACvB,WAAK,cAAc,QAAQ;AAAA,IAC7B;AACA,UAAM,MAAM,QAAQ;AACpB,eAAW,MAAM,KAAK,QAAQ,UAAU,QAAQ,QAAQ;AAAA,MACtD,aAAa,KAAK;AAAA,IACpB,CAAC,EACE,KAAK,MAAM;AACV,aAAO,SAAS,OAAO;AAAA,IACzB,CAAC,EACA,MAAM,CAACD,WAAU;AAChB,WAAK,cAAc,IAAI,WAAWA,MAAK,CAAC;AACxC,YAAME,UAAS,KAAK,UAAU;AAC9B,MAAAA,QAAO,SAAS,OAAO;AAAA,IACzB,CAAC;AACH,QAAI,KAAK,cAAc,MAAM,QAAW;AACtC,sBAAgB,MAAM,QAAQ,UAAU;AAAA,QACtC,aAAa,KAAK;AAAA,MACpB,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAEA,IAAO,uBAAQ;;;ACpLf,IAAM,iCAAN,cAA6C,mBAAyB;AAAA;AAAA;AAAA;AAAA,EAIpE,YAAY,OAAO;AACjB,UAAM,KAAK;AAMX,SAAK,kBAAkB,IAAI,oBAA0B,KAAK;AAM1D,SAAK,mBAAmB,MAAM,cAAc;AAM5C,SAAK,oCAAoC,OAAO;AAMhD,SAAK,sCAAsC;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,SAAK,gBAAgB,QAAQ;AAC7B,UAAM,gBAAgB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,OAAO;AACjB,QAAI,CAAC,KAAK,iBAAiB;AACzB,aAAO,QAAQ,QAAQ,CAAC,CAAC;AAAA,IAC3B;AACA,UAAM,cAAc;AAAA,MAClB,KAAK;AAAA,MACL,MAAM,KAAK,qCAAqC,MAAM,MAAM,CAAC;AAAA,IAC/D;AACA,WAAO,KAAK,gBAAgB,YAAY,WAAW;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB;AACnB,SAAK,gBAAgB,mBAAmB;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,YAAY;AACvB,UAAM,aAAa,WAAW;AAC9B,UAAM,YAAY,WAAW;AAC7B,UAAM,iBAAiB,UAAU;AAEjC,UAAM,QAAQ,WAAW;AACzB,UAAM,iBAAiB,KAAK;AAC5B,QAAI,iBAAiB,WAAW;AAChC,QAAI,KAAK,qBAAqB,GAAG;AAC/B,uBAAiB,eAAe,MAAM,CAAC;AACvC,sBAAgB,gBAAgB,KAAK,gBAAgB;AAAA,IACvD;AACA,UAAM,QAAQ,SAAS,cAAc,IAAI;AACzC,UAAM,SAAS,UAAU,cAAc,IAAI;AAE3C,QACE,CAAC,MAAM,iBAAS,SAAS,KACzB,CAAC,MAAM,iBAAS,WAAW,KAC3B,CAAC,QAAQ,cAAc,GACvB;AACA,qBAAe,aAAa,MAAM,IAAI;AACtC,YAAM,UAAU,eAAe;AAC/B,YAAM,aAAa,WAAW,iBAAiB,WAAW,UAAU;AACpE,cAAQ,cAAc,WAAW;AACjC,YAAM,kBAAkB,OAAO,OAAO,CAAC,GAAG,YAAY,EAAC,SAAS,EAAC,CAAC;AAClE,YAAM;AAAA;AAAA,QACJ,OAAO,OAAO,CAAC,GAAG,YAAY;AAAA,UAC5B,eAAe,IAAI,MAAM,CAAC;AAAA,UAC1B,QAAQ;AAAA,UACR,MAAM,CAAC,OAAO,MAAM;AAAA,UACpB;AAAA;AAAA,YACE,OAAO,OAAO,CAAC,GAAG,WAAW,WAAW;AAAA,cACtC,UAAU;AAAA,YACZ,CAAC;AAAA;AAAA,UAEH,kBAAkB,CAAC,eAAe;AAAA,UAClC,YAAY;AAAA,QACd,CAAC;AAAA;AAEH,UAAI,aAAa;AACjB,YAAM,QAAQ,IAAI;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,SAAU,UAAU;AAClB,cACE,eAAe,aAAa,eAAe,KAC3C,eAAe,oBACf;AACA,2BAAe,WAAW;AAC1B,gBAAI,eAAe,YAAY,iBAAiB,IAAI,GAAG;AACrD,6BAAe,gBAAgB,eAAe;AAC9C,2BAAa;AAAA,YACf;AACA,qBAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAEA,YAAM,iBAAiB,kBAAU,QAAQ,MAAM;AAC7C,YAAI,MAAM,SAAS,MAAM,mBAAW,QAAQ;AAC1C;AAAA,QACF;AACA,aAAK,SAAS,aAAa,OAAO;AAClC,cAAM,kBAAkB,MAAM,cAAc;AAC5C,cAAM,kBAAkB,MAAM,cAAc;AAC5C,cAAM,qBACH,kBAAkB,aAAc;AACnC,aAAK,qBAAqB;AAC1B,aAAK,oCAAoC;AAAA,UACvC,KAAK;AAAA,UACL,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,IAAI;AAAA,UACJ,KAAK;AAAA,UACL;AAAA,UACA,CAAC,UAAU,OAAO,CAAC;AAAA,UACnB,CAAC,UAAU,OAAO,CAAC;AAAA,QACrB;AAAA,MACF,CAAC;AACD,YAAM,KAAK;AAAA,IACb;AAEA,QAAI,KAAK,QAAQ;AACf,WAAK,sCACH,WAAW,2BAA2B,MAAM;AAAA,IAChD;AAEA,WAAO,CAAC,CAAC,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA,EAIA,YAAY;AAAA,EAAC;AAAA;AAAA;AAAA,EAIb,aAAa;AAAA,EAAC;AAAA;AAAA;AAAA,EAId,kBAAkB;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWnB,2BACE,YACA,YACA,cACA,UACA,SACA;AACA,QAAI,KAAK,iBAAiB;AACxB,aAAO,KAAK,gBAAgB;AAAA,QAC1B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AACA,WAAO,MAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,2BAAQ;;;AClKf,IAAM,mBAAN,cAA+B,mBAAgB;AAAA;AAAA;AAAA;AAAA,EAI7C,YAAY,SAAS;AACnB,cAAU,UAAU,UAAU,CAAC;AAE/B,UAAM,cAAc,OAAO,OAAO,CAAC,GAAG,OAAO;AAC7C,WAAO,YAAY;AACnB,UAAM,WAAW;AAMjB,SAAK,cACH,QAAQ,eAAe,SAAY,QAAQ,aAAa;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA,EAKA,gBAAgB;AACd,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,iBAAiB;AACf,WAAO,IAAI,yBAA+B,IAAI;AAAA,EAChD;AACF;AAEA,IAAO,sBAAQ;;;AC1Ff,IAAM,iBAAN,MAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKnB,YAAY,MAAM,MAAM;AACtB,SAAK,OAAO;AACZ,SAAK,OAAO;AAMZ,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,IAAI;AACb,QAAI,CAAC,KAAK,UAAU;AAClB,YAAM,UAAU,GAAG,cAAc;AACjC,SAAG,YAAY,GAAG,YAAY,OAAO;AACrC,SAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,SAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,SAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,SAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AACjE,SAAG;AAAA,QACD,GAAG;AAAA,QACH;AAAA,QACA,GAAG;AAAA,QACH,KAAK,KAAK,SAAS;AAAA,QACnB;AAAA,QACA;AAAA,QACA,GAAG;AAAA,QACH,GAAG;AAAA,QACH,KAAK;AAAA,MACP;AACA,WAAK,WAAW;AAAA,IAClB;AACA,WAAO,KAAK;AAAA,EACd;AACF;AAEA,IAAO,yBAAQ;;;AC7Bf,SAAS,iBAAiB,IAAI,SAASC,cAAa;AAClD,QAAM,iBAAiBA,eAAc,GAAG,SAAS,GAAG;AACpD,KAAG,YAAY,GAAG,YAAY,OAAO;AACrC,KAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,KAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,KAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,cAAc;AACrE,KAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,cAAc;AACvE;AAQA,SAAS,mBAAmB,IAAI,SAAS,OAAOA,cAAa;AAC3D,mBAAiB,IAAI,SAASA,YAAW;AAEzC,KAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,GAAG,MAAM,GAAG,eAAe,KAAK;AAC3E;AAUA,SAAS,kBACP,QACA,SACA,MACA,MACA,WACAA,cACA;AACA,QAAM,KAAK,OAAO,MAAM;AACxB,MAAI;AACJ,MAAI;AACJ,MAAI,gBAAgB,cAAc;AAChC,kBAAc,GAAG;AACjB,WAAO,aAAa,mBAAmB;AACvC,UAAM,YAAY,OAAO,aAAa,0BAA0B;AAChE,qBAAiB,cAAc;AAAA,EACjC,OAAO;AACL,kBAAc,GAAG;AACjB,qBAAiB;AAAA,EACnB;AACA,mBAAiB,IAAI,SAASA,gBAAe,cAAc;AAE3D,QAAM,cAAc,KAAK,aAAa,KAAK,CAAC;AAC5C,MAAI,kBAAkB;AACtB,MAAI,cAAc,MAAM,GAAG;AACzB,sBAAkB;AAAA,EACpB,WAAW,cAAc,MAAM,GAAG;AAChC,sBAAkB;AAAA,EACpB,WAAW,cAAc,MAAM,GAAG;AAChC,sBAAkB;AAAA,EACpB;AAEA,MAAI;AACJ,UAAQ,WAAW;AAAA,IACjB,KAAK,GAAG;AACN,eAAS,GAAG;AACZ;AAAA,IACF;AAAA,IACA,KAAK,GAAG;AACN,eAAS,GAAG;AACZ;AAAA,IACF;AAAA,IACA,KAAK,GAAG;AACN,eAAS,GAAG;AACZ;AAAA,IACF;AAAA,IACA,KAAK,GAAG;AACN,eAAS,GAAG;AACZ;AAAA,IACF;AAAA,IACA,SAAS;AACP,YAAM,IAAI,MAAM,gCAAgC,WAAW;AAAA,IAC7D;AAAA,EACF;AAEA,QAAM,qBAAqB,GAAG,aAAa,GAAG,gBAAgB;AAC9D,KAAG,YAAY,GAAG,kBAAkB,eAAe;AACnD,KAAG;AAAA,IACD,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,KAAK,CAAC;AAAA,IACN,KAAK,CAAC;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,KAAG,YAAY,GAAG,kBAAkB,kBAAkB;AACxD;AAKA,IAAI,eAAe;AAEnB,SAAS,qBAAqB;AAC5B,iBAAe,sBAAsB,GAAG,GAAG,QAAW;AAAA,IACpD,oBAAoB;AAAA,EACtB,CAAC;AACH;AAcA,IAAM,cAAN,cAA0B,eAAY;AAAA;AAAA;AAAA;AAAA,EAIpC,YAAY,SAAS;AACnB,UAAM;AAKN,SAAK;AAKL,SAAK,WAAW,CAAC;AACjB,SAAK,oBAAoB,KAAK,kBAAkB,KAAK,IAAI;AAMzD,SAAK,cAAc;AAAA,MACjB,QAAQ,KAAK,YAAY,QAAQ,KAAK,UAAU,CAAC,CAAC;AAAA,IACpD;AAMA,SAAK,UAAU,QAAQ,UAAU;AAKjC,SAAK,YAAY;AAMjB,SAAK,UAAU,QAAQ;AAEvB,UAAM,SAAS,IAAI,eAAiB,cAAc,WAAW;AAC7D,WAAO,UAAU;AAAA,MACf;AAAA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,IACF,CAAC;AACD,SAAK,QAAQ,gBAAgB,MAAM;AAKnC,SAAK,SAAS;AAEd,SAAK,QAAQ,QAAQ,IAAI;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,MAAM;AACZ,QAAI,SAAS,KAAK,MAAM;AACtB,UAAI,KAAK,MAAM;AACb,aAAK,KAAK,oBAAoB,kBAAU,QAAQ,KAAK,iBAAiB;AAAA,MACxE;AACA,WAAK,OAAO;AACZ,WAAK,SAAS,SAAS;AACvB,WAAK,SAAS,KAAK,SAAS,MAAM,kBAAU;AAC5C,UAAI,KAAK,QAAQ;AACf,aAAK,YAAY;AAAA,MACnB,OAAO;AACL,YAAI,gBAAgB,mBAAW;AAC7B,gBAAM,QAAQ,KAAK,SAAS;AAC5B,cAAI,iBAAiB,SAAS,CAAC,MAAM,aAAa;AAChD,kBAAM,cAAc;AAAA,UACtB;AAAA,QACF;AACA,aAAK,iBAAiB,kBAAU,QAAQ,KAAK,iBAAiB;AAAA,MAChE;AAAA,IACF;AAAA,EACF;AAAA,EAEA,cAAc;AACZ,UAAM,SAAS,KAAK;AACpB,UAAM,KAAK,OAAO,MAAM;AACxB,UAAM,OAAO,KAAK;AAKlB,QAAI;AAEJ,QAAI,gBAAgB,qBAAa,gBAAgB,cAAY;AAC3D,aAAO,KAAK,SAAS;AAAA,IACvB,OAAO;AACL,aAAO,KAAK,QAAQ;AAAA,IACtB;AAEA,UAAM,QAAQ,YAAY,IAAI;AAC9B,QAAI,OAAO;AACT,YAAM,UAAU,GAAG,cAAc;AACjC,WAAK,SAAS,KAAK,OAAO;AAC1B,WAAK,YAAY;AACjB,yBAAmB,IAAI,SAAS,OAAO,KAAK,WAAW;AACvD;AAAA,IACF;AAEA,WAAO,YAAY,IAAI;AAEvB,UAAM;AAAA;AAAA,MAA0C,KAAM,QAAQ;AAAA;AAC9D,UAAM,YAAY;AAAA,MAChB,eAAe,CAAC,IAAI,IAAI,KAAK;AAAA,MAC7B,eAAe,CAAC,IAAI,IAAI,KAAK;AAAA,IAC/B;AACA,UAAM,UAAU,gBAAgB;AAChC,UAAM,aAAa,UAAU,CAAC,IAAI,UAAU,CAAC;AAC7C,UAAM,WAAW,UAAU,eAAe;AAC1C,UAAM,kBAAkB,SAAS;AACjC,UAAM,cAAc,KAAK,aAAa,UAAU,CAAC;AAEjD,SAAK,YAAY,KAAK,MAAM,cAAc,kBAAkB,UAAU,CAAC,CAAC;AACxE,UAAM,eAAe,KAAK,KAAK,KAAK,YAAY,CAAC;AAEjD,QAAI,iBAAiB,GAAG;AACtB,YAAM,UAAU,GAAG,cAAc;AACjC,WAAK,SAAS,KAAK,OAAO;AAC1B;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AACA;AAAA,IACF;AAEA,UAAM,oBAAoB,IAAI,MAAM,YAAY;AAChD,aAAS,eAAe,GAAG,eAAe,cAAc,EAAE,cAAc;AACtE,YAAM,UAAU,GAAG,cAAc;AACjC,WAAK,SAAS,KAAK,OAAO;AAE1B,YAAM,YACJ,eAAe,eAAe,IAAI,KAAM,KAAK,YAAY,KAAK,IAAK;AACrE,wBAAkB,YAAY,IAAI,IAAI,SAAS,aAAa,SAAS;AAAA,IACvE;AAEA,QAAI,YAAY;AAChB,QAAI,YAAY;AAChB,UAAM,WAAW,UAAU,CAAC,IAAI,KAAK;AACrC,aAAS,WAAW,GAAG,WAAW,UAAU,CAAC,GAAG,EAAE,UAAU;AAC1D,eAAS,WAAW,GAAG,WAAW,UAAU,EAAE,UAAU;AACtD,cAAM,YAAY,KAAK,YAAY,QAAQ;AAE3C,cAAM,aAAa,KAAK,MAAM,YAAY,KAAK,SAAS;AACxD,cAAM,YAAY,WAAW,KAAK;AAClC,cAAM,eAAe,KAAK,MAAM,YAAY,CAAC;AAC7C,cAAM,cAAc,kBAAkB,YAAY;AAClD,cAAM,YAAY,YAAY,SAAS;AACvC,cAAM,mBAAmB,YAAY;AACrC,oBAAY,aAAa,YAAY,gBAAgB,IAAI;AAEzD,UAAE;AAAA,MACJ;AACA,mBAAa,cAAc;AAAA,IAC7B;AAEA,aAAS,eAAe,GAAG,eAAe,cAAc,EAAE,cAAc;AACtE,YAAM,UAAU,KAAK,SAAS,YAAY;AAC1C,YAAM,cAAc,kBAAkB,YAAY;AAClD,YAAM,YAAY,YAAY,SAAS;AACvC;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AAAA,EAEA,oBAAoB;AAClB,QAAI,KAAK,KAAK,SAAS,MAAM,kBAAU,QAAQ;AAC7C,WAAK,SAAS;AACd,WAAK,YAAY;AACjB,WAAK,cAAc,kBAAU,MAAM;AAAA,IACrC;AAAA,EACF;AAAA,EAEA,kBAAkB;AAChB,UAAM,KAAK,KAAK,QAAQ,MAAM;AAC9B,SAAK,QAAQ,aAAa,KAAK,MAAM;AACrC,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,EAAE,GAAG;AAC7C,SAAG,cAAc,KAAK,SAAS,CAAC,CAAC;AAAA,IACnC;AACA,SAAK,KAAK,oBAAoB,kBAAU,QAAQ,KAAK,iBAAiB;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,mBAAmB,OAAO,WAAW,WAAW;AAC9C,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,KAAK,YAAY,CAAC;AACtC,UAAM,eAAe,KAAK,YAAY,CAAC;AAEvC,QAAI,CAAC,cAAc;AACjB,yBAAmB;AAAA,IACrB;AACA,iBAAa,UAAU,GAAG,GAAG,GAAG,CAAC;AAEjC,UAAM,cAAc,MAAM;AAC1B,UAAM,eAAe,MAAM;AAE3B,UAAM,2BAA2B,cAAc,IAAI;AACnD,UAAM,4BAA4B,eAAe,IAAI;AAErD,UAAM,YACJ,SAAS,KAAK,MAAM,4BAA4B,YAAY,YAAY;AAE1E,UAAM,YACJ,SACA,KAAK,MAAM,6BAA6B,YAAY,aAAa;AAEnE,QAAI;AACJ,QAAI;AACF,mBAAa,UAAU,OAAO,WAAW,WAAW,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACpE,aAAO,aAAa,aAAa,GAAG,GAAG,GAAG,CAAC,EAAE;AAAA,IAC/C,SAAS,KAAP;AACA,qBAAe;AACf,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,mBAAmB,MAAM,YAAY,WAAW,WAAW;AACzD,UAAM,SAAS,KAAK;AACpB,UAAM,cAAc,KAAK,YAAY,CAAC;AACtC,UAAM,eAAe,KAAK,YAAY,CAAC;AAEvC,UAAM,2BAA2B,WAAW,CAAC;AAC7C,UAAM,4BAA4B,WAAW,CAAC;AAC9C,UAAM,cAAc,2BAA2B,IAAI;AACnD,UAAM,eAAe,4BAA4B,IAAI;AAErD,UAAM,YACJ,SAAS,KAAK,MAAM,4BAA4B,YAAY,YAAY;AAE1E,UAAM,YACJ,SACA,KAAK,MAAM,6BAA6B,YAAY,aAAa;AAEnE,QAAI,gBAAgB,UAAU;AAC5B,YAAM,gBAAgB,KAAK,cAAc,cAAc;AACvD,YAAMC,UAAS,iBAAiB,YAAY,cAAc;AAC1D,YAAMC,UAAS,KAAK,OAAO,MAAMD,SAAQA,UAAS,aAAa;AAC/D,aAAO,IAAI,SAASC,OAAM;AAAA,IAC5B;AAEA,UAAM,SAAS,KAAK,aAAa,YAAY,cAAc;AAC3D,WAAO,KAAK,MAAM,QAAQ,SAAS,KAAK,SAAS;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,WAAW,WAAW;AACjC,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,gBAAgB,kBAAU;AACjC,YAAM,OAAO,KAAK,KAAK,QAAQ;AAC/B,YAAM,YAAY,YAAY,IAAI;AAClC,UAAI,WAAW;AACb,cAAM,aAAa,KAAK,KAAK,QAAQ;AACrC,eAAO,KAAK;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AACA,aAAO,KAAK,mBAAmB,YAAY,IAAI,GAAG,WAAW,SAAS;AAAA,IACxE;AAEA,WAAO,KAAK,mBAAmB,KAAK,KAAK,SAAS,GAAG,WAAW,SAAS;AAAA,EAC3E;AACF;AAEA,IAAO,sBAAQ;;;AChaR,IAAM,WAAW;AAAA,EACtB,oBAAoB;AAAA,EACpB,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,OAAO;AAAA,EACP,qBAAqB;AAAA,EACrB,sBAAsB;AAAA,EACtB,oBAAoB;AAAA;AAAA,EACpB,kBAAkB;AAAA;AAAA,EAClB,kBAAkB;AAAA;AAAA,EAClB,eAAe;AAAA;AAAA,EACf,YAAY;AAAA,EACZ,MAAM;AACR;AAEO,IAAM,aAAa;AAAA,EACxB,eAAe;AACjB;AAKA,IAAM,wBAAwB;AAAA,EAC5B;AAAA,IACE,MAAM,WAAW;AAAA,IACjB,MAAM;AAAA,IACN,MAAM,cAAc;AAAA,EACtB;AACF;AAKA,IAAM,QAAQ,CAAC;AAOf,SAAS,UAAU,GAAG;AACpB,SAAO,KAAK,IAAI,KAAK,IAAI,MAAM;AACjC;AASA,SAAS,uBAAuB,iBAAiB,aAAa,GAAG;AAC/D,MAAI,EAAE,KAAK,kBAAkB;AAC3B,oBAAgB,CAAC,IAAI,CAAC;AAAA,EACxB;AACA,kBAAgB,CAAC,EAAE,KAAK,WAAW;AACrC;AAOA,SAAS,gBAAgB,YAAY,QAAQ;AAC3C,QAAM,aAAa,WAAW,iBAAiB,WAAW,UAAU;AACpE,MAAI,WAAW,QAAQ;AACrB,aAAS;AAAA,MACP;AAAA,MACA,eAAe,WAAW,QAAQ,WAAW,UAAU,UAAU;AAAA,IACnE;AAAA,EACF;AACA,QAAM;AAAA;AAAA,IACJ,WAAW,MAAM,gBAAgB;AAAA;AAEnC,MAAI,CAAC,OAAO,SAAS,GAAG;AACtB,UAAM,aAAa,OAChB,yBAAyB,WAAW,UAAU,UAAU,EACxD,UAAU;AACb,QAAI,YAAY;AACd,eAAS,gBAAgB,QAAQ,UAAU;AAAA,IAC7C;AAAA,EACF;AACA,SAAO;AACT;AAEA,SAAS,YAAY,QAAQ,WAAW;AACtC,SAAO,GAAG,OAAO,OAAO,KAAK,OAAgB,SAAS;AACxD;AAsBA,IAAM,yBAAN,cAAqCC,eAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKtD,YAAY,WAAW,SAAS;AAC9B,UAAM,WAAW;AAAA,MACf,UAAU,QAAQ;AAAA,IACpB,CAAC;AAMD,SAAK,iBAAiB;AAOtB,SAAK,iBAAiB,OAAgB;AAMtC,SAAK,YAAYC,QAAW;AAM5B,SAAK,iBAAiB,IAAI,kBAAU,GAAG,GAAG,GAAG,CAAC;AAM9C,SAAK,iBAAiB,eAAgB,GAAG,GAAG,CAAC;AAM7C,SAAK,YAAY,CAAC,GAAG,CAAC;AAMtB,SAAK;AAKL,SAAK,gBAAgB,QAAQ;AAK7B,SAAK,kBAAkB,QAAQ;AAmB/B,SAAK,WAAW,IAAI,eAAiB,sBAAsB,WAAW;AACtE,SAAK,SAAS,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAE1C,UAAM,YAAY,QAAQ,cAAc,SAAY,QAAQ,YAAY;AAMxE,SAAK,oBAAoB,IAAI,iBAAS,SAAS;AAM/C,SAAK,mBAAmB,QAAQ,mBAAmB,CAAC;AAMpD,SAAK,cAAc;AAMnB,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAS;AACb,UAAM,MAAM;AAAA,MACV,UAAU,QAAQ;AAAA,IACpB,CAAC;AACD,SAAK,gBAAgB,QAAQ;AAC7B,SAAK,kBAAkB,QAAQ;AAC/B,SAAK,mBAAmB,QAAQ,mBAAmB,CAAC;AAEpD,QAAI,KAAK,QAAQ;AACf,WAAK,WAAW,KAAK,OAAO;AAAA,QAC1B,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AAAA,EAEA,qBAAqB;AACnB,SAAK,WAAW,KAAK,OAAO;AAAA,MAC1B,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,SAAK,OAAO,gBAAgB,KAAK,QAAQ;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,gBAAgB,MAAM;AACpB,UAAM,YAAY,KAAK,SAAS;AAChC,UAAM,YAAY,KAAK,SAAS;AAChC,UAAM,yBAAyB,UAAU,0BAA0B;AACnE,WACE,aAAa,kBAAU,UACvB,aAAa,kBAAU,SACtB,aAAa,kBAAU,SAAS,CAAC;AAAA,EAEtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,YAAY;AAC/B,QAAI,CAAC,KAAK,aAAa;AACrB,WAAK,cAAc,WAAW,UAAU;AAAA,IAC1C,WAAW,WAAW,UAAU,eAAe,KAAK,aAAa;AAC/D,WAAK,WAAW;AAChB,WAAK,cAAc,WAAW,UAAU;AAAA,IAC1C;AAEA,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,SAAS,MAAM,gBAAgB;AACrC,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,QAAI,QAAQ,gBAAgB,YAAY,WAAW,MAAM,CAAC,GAAG;AAC3D,aAAO;AAAA,IACT;AACA,WAAO,OAAO,SAAS,MAAM;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,aAAa,YAAY,QAAQ,UAAU,iBAAiB,SAAS;AACnE,UAAM,YAAY,WAAW;AAC7B,UAAM,YAAY,KAAK,SAAS;AAChC,UAAM,aAAa,UAAU,gBAAgB;AAC7C,UAAM,WAAW,WAAW,yBAAyB,UAAU,UAAU;AACzE,UAAM,SAAS,WAAW,uBAAuB,UAAU,UAAU;AAErE,UAAM,gBAAgB,OAAO,UAAU;AACvC,QAAI,EAAE,iBAAiB,WAAW,cAAc;AAC9C,iBAAW,YAAY,aAAa,IAAI,CAAC;AAAA,IAC3C;AAEA,UAAM,cAAc,WAAW,YAAY,aAAa;AACxD,UAAM,mBAAmB,KAAK;AAE9B,UAAM,MAAM,UAAU,eAAe;AACrC,UAAM,OAAO,KAAK;AAAA,MAChB,WAAW;AAAA,MACX,SAAS,WAAW;AAAA,MACpB,SAAS;AAAA,QACP,KAAK;AAAA,UACH,UAAU,iBAAiB;AAAA,UAC3B,MACI,IACG,QAAQ,EACR,qBAAqB,KAAK,IAAI,UAAU,WAAW,GAAG,CAAC,CAAC,IAC3D,SAAS,cAAc,CAAC;AAAA,QAC9B;AAAA,QACA,WAAW;AAAA,MACb;AAAA,IACF;AACA,aAAS,IAAI,UAAU,KAAK,MAAM,EAAE,GAAG;AACrC,YAAM,YAAY,SAAS;AAAA,QACzB;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACP;AAEA,YAAM,iBAAiB,SAAS,cAAc,CAAC;AAE/C,eAAS,IAAI,UAAU,MAAM,KAAK,UAAU,MAAM,EAAE,GAAG;AACrD,iBAAS,IAAI,UAAU,MAAM,KAAK,UAAU,MAAM,EAAE,GAAG;AACrD,gBAAM,YAAY,eAAgB,GAAG,GAAG,GAAG,KAAK,cAAc;AAC9D,gBAAM,WAAW,YAAY,YAAY,SAAS;AAGlD,cAAI;AAGJ,cAAI;AAEJ,cAAI,iBAAiB,YAAY,QAAQ,GAAG;AAC1C,0BAAc,iBAAiB,IAAI,QAAQ;AAC3C,mBAAO,YAAY;AAAA,UACrB;AACA,cAAI,CAAC,eAAe,YAAY,KAAK,QAAQ,WAAW,OAAO,GAAG;AAChE,mBAAO,WAAW;AAAA,cAChB;AAAA,cACA;AAAA,cACA;AAAA,cACA,WAAW;AAAA,cACX,UAAU;AAAA,YACZ;AACA,gBAAI,CAAC,aAAa;AAChB,4BAAc,IAAI,oBAAY;AAAA,gBAC5B;AAAA,gBACA,MAAM;AAAA,gBACN,QAAQ,KAAK;AAAA,gBACb;AAAA,cACF,CAAC;AACD,+BAAiB,IAAI,UAAU,WAAW;AAAA,YAC5C,OAAO;AACL,kBAAI,KAAK,gBAAgB,IAAI,GAAG;AAC9B,4BAAY,QAAQ,IAAI;AAAA,cAC1B,OAAO;AACL,sBAAM;AAAA;AAAA,kBAEF,KAAK,eAAe;AAAA;AAExB,4BAAY,QAAQ,WAAW;AAAA,cACjC;AAAA,YACF;AAAA,UACF;AAEA,iCAAuB,iBAAiB,aAAa,CAAC;AAEtD,gBAAM,eAAe,KAAK,OAAO;AACjC,sBAAY,YAAY,IAAI;AAE5B,cAAI,KAAK,SAAS,MAAM,kBAAU,MAAM;AACtC,gBAAI,CAAC,WAAW,UAAU,YAAY,YAAY,GAAG;AACnD,yBAAW,UAAU,QAAQ;AAAA,gBAC3B;AAAA,gBACA;AAAA,gBACA,SAAS,mBAAmB,SAAS;AAAA,gBACrC;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,YAAY;AACtB,SAAK,cAAc;AACnB,SAAK,iBAAiB;AACtB,UAAM,KAAK,KAAK,OAAO,MAAM;AAC7B,SAAK,UAAU,IAAI,UAAU;AAE7B,UAAM,YAAY,WAAW;AAC7B,UAAM,YAAY,KAAK,SAAS;AAChC,UAAM,aAAa,UAAU,gBAAgB;AAC7C,UAAM,WAAW,WAAW,yBAAyB,UAAU,UAAU;AACzE,UAAM,SAAS,WAAW,uBAAuB,UAAU,UAAU;AACrE,UAAM,SAAS,gBAAgB,YAAY,WAAW,MAAM;AAC5D,UAAM,IAAI,SAAS;AAAA,MACjB,UAAU;AAAA,MACV,WAAW;AAAA,IACb;AAKA,UAAM,kBAAkB,CAAC;AAEzB,UAAM,UAAU,UAAU,WAAW;AACrC,QAAI,WAAW,YAAY;AACzB,YAAM,UAAU,SAAS;AAAA,QACvB,UAAU;AAAA,QACV,WAAW;AAAA,MACb;AACA,YAAM,aAAa,gBAAgB,YAAY,WAAW,UAAU;AACpE,WAAK;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,SAAK,aAAa,YAAY,QAAQ,GAAG,iBAAiB,CAAC;AAC3D,QAAI,UAAU,GAAG;AACf,iBAAW,MAAM;AACf,aAAK;AAAA,UACH;AAAA,UACA;AAAA,UACA,IAAI;AAAA,UACJ;AAAA,UACA,UAAU;AAAA,QACZ;AAAA,MACF,GAAG,CAAC;AAAA,IACN;AAQA,UAAM,cAAc,CAAC;AAErB,UAAM,MAAM,OAAO,IAAI;AACvB,UAAM,OAAO,WAAW;AACxB,QAAI,QAAQ;AAGZ,UAAM,eAAe,gBAAgB,CAAC;AACtC,aAAS,IAAI,GAAG,KAAK,aAAa,QAAQ,IAAI,IAAI,EAAE,GAAG;AACrD,YAAM,cAAc,aAAa,CAAC;AAClC,YAAM,OAAO,YAAY;AACzB,WACG,gBAAgB,gBAAc,gBAAgBC,sBAC/C,KAAK,SAAS,MAAM,kBAAU,OAC9B;AACA;AAAA,MACF;AACA,YAAM,YAAY,KAAK;AAEvB,UAAI,YAAY,QAAQ;AACtB,cAAM,QAAQ,KAAK,SAAS,KAAK,IAAI;AACrC,YAAI,UAAU,GAAG;AAEf,eAAK,cAAc,GAAG;AACtB;AAAA,QACF;AACA,gBAAQ;AACR,cAAM,eAAe,OAAgB,SAAS;AAC9C,oBAAY,YAAY,IAAI;AAAA,MAC9B;AACA,WAAK,iBAAiB;AAGtB,YAAM,oBAAoB,KAAK;AAAA,QAC7B;AAAA,QACA;AAAA,QACA,IAAI;AAAA,QACJ;AAAA,MACF;AAEA,UAAI,mBAAmB;AACrB;AAAA,MACF;AAGA,YAAM,UAAU,SAAS,WAAW;AACpC,eAAS,UAAU,IAAI,GAAG,WAAW,SAAS,EAAE,SAAS;AACvD,cAAM,kBAAkB,KAAK;AAAA,UAC3B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,YAAI,iBAAiB;AACnB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,SAAK,OAAO,WAAW,KAAK,UAAU,UAAU;AAChD,SAAK,OAAO,YAAY,YAAY,CAAC,KAAK;AAE1C,UAAM,KAAK,OAAO,KAAK,eAAe,EAAE,IAAI,MAAM,EAAE,KAAK,SAAS;AAElE,UAAM,UAAU,UAAU,OAAO,CAAC;AAClC,UAAM,UAAU,UAAU,OAAO,CAAC;AAElC,aAAS,IAAI,GAAG,KAAK,GAAG,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC3C,YAAM,QAAQ,GAAG,CAAC;AAClB,YAAM,iBAAiB,SAAS,cAAc,KAAK;AACnD,YAAM,WAAW,OAAO,SAAS,YAAY,KAAK,GAAG,KAAK,SAAS;AACnE,YAAM,aAAa,SAAS,UAAU,KAAK;AAE3C,YAAM,sBAAsB,SAAS,CAAC,IAAI,IAAI;AAC9C,YAAM,uBAAuB,SAAS,CAAC,IAAI,IAAI;AAC/C,YAAM,cAAc,sBAAsB;AAE1C,YAAM,WACH,UAAU,WAAW,CAAC,MAAM,SAAS,CAAC,IAAI;AAC7C,YAAM,WACH,WAAW,CAAC,IAAI,YAAY,SAAS,CAAC,IAAI;AAE7C,YAAM,YAAY,UAAU,aAAa;AAEzC,YAAM,QAAQ,UAAU,KAAK;AAC7B,YAAMC,gBAAe,gBAAgB,KAAK;AAC1C,eAAS,IAAI,GAAG,KAAKA,cAAa,QAAQ,IAAI,IAAI,EAAE,GAAG;AACrD,cAAM,cAAcA,cAAa,CAAC;AAClC,YAAI,CAAC,YAAY,QAAQ;AACvB;AAAA,QACF;AACA,cAAM,OAAO,YAAY;AACzB,cAAM,YAAY,KAAK;AACvB,cAAM,eAAe,OAAgB,SAAS;AAE9C,cAAM,cAAc,UAAU,CAAC;AAC/B,cAAM,cAAc,UAAU,CAAC;AAE/B,cAAe,KAAK,cAAc;AAClC;AAAA,UACE,KAAK;AAAA,UACL,KAAM,WAAW,KAAK,CAAC,IAAI,YAAa;AAAA,UACxC,MAAO,WAAW,KAAK,CAAC,IAAI,YAAa;AAAA,QAC3C;AACA,eAAgB,KAAK,gBAAgB,UAAU,QAAQ;AACvD,cAAe,KAAK,gBAAgB,GAAG,IAAI,WAAW;AACtD;AAAA,UACE,KAAK;AAAA,WACJ,SAAS,CAAC,KAAK,cAAc,WAAW,UACvC;AAAA,WACD,SAAS,CAAC,KAAK,cAAc,WAAW,UACvC;AAAA,QACJ;AAEA,aAAK,OAAO;AAAA,UACV,SAAS;AAAA,UACT,cAAkB,KAAK,WAAW,KAAK,cAAc;AAAA,QACvD;AAEA,aAAK,OAAO,WAAW,YAAY,MAAM;AACzC,aAAK,OAAO,WAAW,KAAK,QAAQ;AACpC,aAAK,OAAO,iBAAiB,qBAAqB;AAElD,YAAI,cAAc;AAClB,eAAO,cAAc,YAAY,SAAS,QAAQ;AAChD,gBAAM,kBAAkB,YAAY;AACpC,gBAAM,cAAc,GAAG,SAAS,sBAAsB;AACtD,aAAG,cAAc,GAAG,eAAe,CAAC;AACpC,aAAG,YAAY,GAAG,YAAY,YAAY,SAAS,WAAW,CAAC;AAC/D,aAAG;AAAA,YACD,KAAK,OAAO,mBAAmB,WAAW;AAAA,YAC1C;AAAA,UACF;AACA,YAAE;AAAA,QACJ;AAEA,iBACM,eAAe,GACnB,eAAe,KAAK,iBAAiB,QACrC,EAAE,cACF;AACA,gBAAM,iBAAiB,KAAK,iBAAiB,YAAY;AACzD,aAAG,cAAc,GAAG,YAAY,WAAW,CAAC;AAC5C,gBAAM,UAAU,eAAe,WAAW,EAAE;AAC5C,aAAG,YAAY,GAAG,YAAY,OAAO;AACrC,aAAG;AAAA,YACD,KAAK,OAAO,mBAAmB,eAAe,IAAI;AAAA,YAClD;AAAA,UACF;AACA,YAAE;AAAA,QACJ;AAEA,cAAM,QACJ,gBAAgB,cAAc,YAAY,YAAY,IAAI;AAE5D,YAAI,QAAQ,GAAG;AACb,qBAAW,UAAU;AAAA,QACvB;AAEA,aAAK,OAAO,qBAAqB,SAAS,kBAAkB,KAAK;AACjE,aAAK,OAAO,qBAAqB,SAAS,OAAO,KAAK;AACtD,aAAK,OAAO;AAAA,UACV,SAAS;AAAA,UACT;AAAA,QACF;AACA,aAAK,OAAO;AAAA,UACV,SAAS;AAAA,UACT;AAAA,QACF;AACA,aAAK,OAAO;AAAA,UACV,SAAS;AAAA,UACT;AAAA,QACF;AACA,aAAK,OAAO;AAAA,UACV,SAAS;AAAA,UACT,WAAW,CAAC,IACV,cAAc,SAAS,CAAC,IAAI,iBAC5B,SAAS;AAAA,QACb;AACA,aAAK,OAAO;AAAA,UACV,SAAS;AAAA,UACT,WAAW,CAAC,IACV,cAAc,SAAS,CAAC,IAAI,iBAC5B,SAAS;AAAA,QACb;AACA,YAAI,eAAe;AACnB,YAAI,SAAS,GAAG;AACd,yBAAe,SAAS,mBAAmB,SAAS;AACpD,0BAAgB,cAAc,QAAQ,YAAY;AAAA,QACpD;AACA,aAAK,OAAO,oBAAoB,SAAS,eAAe,YAAY;AACpE,aAAK,OAAO;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA,QACZ;AACA,aAAK,OAAO,qBAAqB,SAAS,MAAM,UAAU,IAAI;AAE9D,aAAK,OAAO,aAAa,GAAG,KAAK,SAAS,QAAQ,CAAC;AAAA,MACrD;AAAA,IACF;AAEA,SAAK,OAAO;AAAA,MACV;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,UAAM,SAAS,KAAK,OAAO,UAAU;AAErC,UAAM,mBAAmB,KAAK;AAC9B,WAAO,iBAAiB,eAAe,GAAG;AACxC,YAAM,cAAc,iBAAiB,IAAI;AACzC,kBAAY,QAAQ;AAAA,IACtB;AASA,UAAM,qBAAqB,SAAU,KAAKC,aAAY;AACpD,iBAAW,gBAAgB,KAAKA,YAAW,UAAU,UAAU;AAC/D,iBAAW,YAAYA,YAAW,UAAU,YAAY,KAAK;AAAA,IAC/D;AAEA,eAAW,oBAAoB,KAAK,kBAAkB;AAEtD,SAAK,WAAW,IAAI,UAAU;AAC9B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,OAAO;AACb,UAAM,KAAK,KAAK,OAAO,MAAM;AAC7B,QAAI,CAAC,IAAI;AACP,aAAO;AAAA,IACT;AAEA,UAAM,aAAa,KAAK;AACxB,QAAI,CAAC,YAAY;AACf,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,aAAa;AAAA,MACjB,WAAW;AAAA,MACX,MAAM,MAAM;AAAA,IACd;AAEA,UAAM,YAAY,WAAW;AAC7B,UAAM,cAAc,MAAM,UAAU;AACpC,QAAI,aAAa;AACf,UACE,CAAC;AAAA,QACC,eAAe,aAAa,UAAU,UAAU;AAAA,QAChD;AAAA,MACF,GACA;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAGA,UAAM,UAAU,MAAM;AAAA,MACpB,eAAe,CAAC,UAAU,CAAC;AAAA,MAC3B,UAAU;AAAA,IACZ;AACA,QAAI,GAAG,QAAQ;AACf,SAAK,IAAI,QAAQ,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACxC,eAAS,QAAQ,CAAC;AAClB,UAAI,OAAO,SAAS,MAAM,SAAS;AACjC,mBAAW,OAAO,yBAAyB,UAAU,UAAU;AAC/D,YAAI,OAAO,SAAS,GAAG;AACrB;AAAA,QACF;AACA,cAAM,aAAa,SAAS,UAAU;AACtC,YAAI,CAAC,cAAc,mBAAmB,YAAY,UAAU,GAAG;AAC7D;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,QAAI,IAAI,GAAG;AACT,aAAO;AAAA,IACT;AAEA,UAAM,mBAAmB,KAAK;AAC9B,aACM,IAAI,SAAS,kBAAkB,UAAU,UAAU,GACvD,KAAK,SAAS,WAAW,GACzB,EAAE,GACF;AACA,YAAM,YAAY,SAAS,yBAAyB,YAAY,CAAC;AACjE,YAAM,WAAW,YAAY,QAAQ,SAAS;AAC9C,UAAI,CAAC,iBAAiB,YAAY,QAAQ,GAAG;AAC3C;AAAA,MACF;AACA,YAAM,cAAc,iBAAiB,IAAI,QAAQ;AACjD,YAAM,OAAO,YAAY;AACzB,WACG,gBAAgB,gBAAc,gBAAgBF,sBAC/C,KAAK,SAAS,MAAM,kBAAU,OAC9B;AACA,eAAO;AAAA,MACT;AACA,UAAI,CAAC,YAAY,QAAQ;AACvB;AAAA,MACF;AACA,YAAM,aAAa,SAAS,UAAU,CAAC;AACvC,YAAM,WAAW,OAAO,SAAS,YAAY,CAAC,CAAC;AAC/C,YAAM,iBAAiB,SAAS,cAAc,CAAC;AAE/C,YAAM,OACH,WAAW,CAAC,IAAI,WAAW,CAAC,KAAK,iBAClC,UAAU,CAAC,IAAI,SAAS,CAAC;AAE3B,YAAM,OACH,WAAW,CAAC,IAAI,WAAW,CAAC,KAAK,iBAClC,UAAU,CAAC,IAAI,SAAS,CAAC;AAE3B,aAAO,YAAY,aAAa,KAAK,GAAG;AAAA,IAC1C;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,cAAc,UAAU,WAAW,MAAM,iBAAiB;AACxD,UAAM,YAAY,SAAS;AAAA,MACzB;AAAA,MACA;AAAA,MACA,KAAK;AAAA,IACP;AAEA,QAAI,CAAC,WAAW;AACd,aAAO;AAAA,IACT;AAEA,QAAI,UAAU;AACd,UAAM,mBAAmB,KAAK;AAC9B,UAAM,SAAS,KAAK,SAAS,EAAE,gBAAgB;AAC/C,aAAS,IAAI,UAAU,MAAM,KAAK,UAAU,MAAM,EAAE,GAAG;AACrD,eAAS,IAAI,UAAU,MAAM,KAAK,UAAU,MAAM,EAAE,GAAG;AACrD,cAAM,WAAW,YAAY,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;AACjD,YAAI,SAAS;AACb,YAAI,iBAAiB,YAAY,QAAQ,GAAG;AAC1C,gBAAM,cAAc,iBAAiB,IAAI,QAAQ;AACjD,cAAI,YAAY,QAAQ;AACtB,mCAAuB,iBAAiB,aAAa,IAAI;AACzD,qBAAS;AAAA,UACX;AAAA,QACF;AACA,YAAI,CAAC,QAAQ;AACX,oBAAU;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EAEA,aAAa;AACX,UAAM,mBAAmB,KAAK;AAC9B,qBAAiB,QAAQ,CAAC,gBAAgB,YAAY,QAAQ,CAAC;AAC/D,qBAAiB,MAAM;AAAA,EACzB;AAAA,EAEA,eAAe;AACb,QAAI,KAAK,QAAQ;AACf,WAAK,WAAW;AAAA,IAClB;AAEA,UAAM,aAAa;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,UAAM,SAAS,KAAK;AACpB,QAAI,QAAQ;AACV,YAAM,KAAK,OAAO,MAAM;AACxB,SAAG,cAAc,KAAK,QAAQ;AAC9B,aAAO,KAAK;AAEZ,aAAO,aAAa,KAAK,QAAQ;AAAA,IACnC;AAEA,UAAM,gBAAgB;AAEtB,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,WAAO,KAAK;AAAA,EACd;AACF;AAEA,IAAOG,qBAAQ;;;ACtyBR,IAAM,aAAa;AAAA,EACxB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,SAAS;AAAA,EACT,cAAc;AAAA,EACd,KAAK;AAAA,EACL,MAAM;AACR;AAgBO,IAAM,YAAY,CAAC;AAQnB,SAAS,aAAa,OAAO;AAClC,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO,WAAW;AAAA,EACpB;AACA,MAAI,OAAO,UAAU,WAAW;AAC9B,WAAO,WAAW;AAAA,EACpB;AACA,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,cAAc,KAAK,GAAG;AACxB,aAAO,WAAW,QAAQ,WAAW;AAAA,IACvC;AACA,WAAO,WAAW;AAAA,EACpB;AACA,MAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,UAAM,IAAI,MAAM,yBAAyB,KAAK,UAAU,KAAK,GAAG;AAAA,EAClE;AACA,QAAM;AAAA;AAAA,IAAoC;AAAA;AAC1C,QAAM,cAAc,SAAS,MAAM,SAAU,GAAG;AAC9C,WAAO,OAAO,MAAM;AAAA,EACtB,CAAC;AACD,MAAI,aAAa;AACf,QAAI,SAAS,WAAW,KAAK,SAAS,WAAW,GAAG;AAClD,aAAO,WAAW,QAAQ,WAAW;AAAA,IACvC;AACA,WAAO,WAAW;AAAA,EACpB;AACA,MAAI,OAAO,SAAS,CAAC,MAAM,UAAU;AACnC,UAAM,IAAI;AAAA,MACR,iDAAiD,KAAK;AAAA,QACpD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,QAAM,WAAW,UAAU,SAAS,CAAC,CAAC;AACtC,MAAI,aAAa,QAAW;AAC1B,UAAM,IAAI;AAAA,MACR,qCAAqC,KAAK,UAAU,QAAQ;AAAA,IAC9D;AAAA,EACF;AACA,SAAO,SAAS,cAAc,SAAS,MAAM,CAAC,CAAC;AACjD;AAOO,SAAS,aAAa,WAAW;AACtC,SAAO,KAAK,KAAK,SAAS,IAAI,MAAM;AACtC;AAmBO,SAAS,aAAa,GAAG;AAC9B,QAAM,IAAI,EAAE,SAAS;AACrB,SAAO,EAAE,SAAS,GAAG,IAAI,IAAI,IAAI;AACnC;AAOO,SAAS,YAAYC,QAAO;AACjC,MAAIA,OAAM,SAAS,KAAKA,OAAM,SAAS,GAAG;AACxC,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,SAAO,MAAMA,OAAM,UAAUA,OAAM,IAAI,YAAY,EAAE,KAAK,IAAI;AAChE;AASO,SAAS,YAAYC,QAAO;AACjC,QAAMD,SAAQ,QAAQC,MAAK,EAAE,MAAM;AACnC,MAAID,OAAM,SAAS,GAAG;AACpB,IAAAA,OAAM,KAAK,CAAC;AAAA,EACd;AACA,SAAO;AAAA,IACLA,OAAM,IAAI,SAAU,GAAG,GAAG;AACxB,aAAO,IAAI,IAAI,IAAI,MAAM;AAAA,IAC3B,CAAC;AAAA,EACH;AACF;AAQO,SAAS,0BAA0B,SAAS,QAAQ;AACzD,MAAI,QAAQ,kBAAkB,MAAM,MAAM,QAAW;AACnD,YAAQ,kBAAkB,MAAM,IAAI,OAAO;AAAA,MACzC,QAAQ;AAAA,IACV,EAAE;AAAA,EACJ;AACA,SAAO,QAAQ,kBAAkB,MAAM;AACzC;AASO,SAAS,aAAa,SAAS,QAAQ;AAC5C,SAAO,aAAa,0BAA0B,SAAS,MAAM,CAAC;AAChE;AAUO,SAAS,iBAAiB,SAAS,OAAO,UAAU;AAEzD,MAAI,MAAM,QAAQ,KAAK,KAAK,OAAO,MAAM,CAAC,MAAM,UAAU;AACxD,UAAM,WAAW,UAAU,MAAM,CAAC,CAAC;AACnC,QAAI,aAAa,QAAW;AAC1B,YAAM,IAAI;AAAA,QACR,qCAAqC,KAAK,UAAU,KAAK;AAAA,MAC3D;AAAA,IACF;AACA,WAAO,SAAS,OAAO,SAAS,MAAM,MAAM,CAAC,GAAG,QAAQ;AAAA,EAC1D;AAEA,QAAM,YAAY,aAAa,KAAK;AACpC,OAAK,YAAY,WAAW,UAAU,GAAG;AACvC,WAAO;AAAA;AAAA,MAAoC;AAAA,IAAM;AAAA,EACnD;AAEA,OAAK,YAAY,WAAW,WAAW,GAAG;AACxC,WAAO,MAAM,SAAS;AAAA,EACxB;AAEA,OACG,YAAY,WAAW,UAAU,MACjC,aAAa,UAAa,YAAY,WAAW,SAClD;AACA,WAAO,aAAa,SAAS,MAAM,SAAS,CAAC;AAAA,EAC/C;AAEA,OACG,YAAY,WAAW,SAAS,MAChC,aAAa,UAAa,YAAY,WAAW,QAClD;AACA,WAAO;AAAA;AAAA,MAAmD;AAAA,IAAM;AAAA,EAClE;AAEA,OAAK,YAAY,WAAW,gBAAgB,GAAG;AAC7C,WAAO;AAAA;AAAA,MAA0C;AAAA,IAAM;AAAA,EACzD;AAEA,QAAM,IAAI,MAAM,yBAAyB,wBAAwB,WAAW;AAC9E;AAEA,SAAS,aAAa,OAAO;AAC3B,MAAI,EAAE,aAAa,KAAK,IAAI,WAAW,SAAS;AAC9C,UAAM,IAAI;AAAA,MACR,qCAAqC,KAAK,UAAU,KAAK;AAAA,IAC3D;AAAA,EACF;AACF;AACA,SAAS,cAAc,QAAQ;AAC7B,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,iBAAa,OAAO,CAAC,CAAC;AAAA,EACxB;AACF;AACA,SAAS,aAAa,OAAO;AAC3B,MAAI,EAAE,aAAa,KAAK,IAAI,WAAW,SAAS;AAC9C,UAAM,IAAI;AAAA,MACR,oCAAoC,KAAK,UAAU,KAAK;AAAA,IAC1D;AAAA,EACF;AACF;AACA,SAAS,cAAc,OAAO;AAC5B,MAAI,EAAE,aAAa,KAAK,IAAI,WAAW,UAAU;AAC/C,UAAM,IAAI;AAAA,MACR,qCAAqC,KAAK,UAAU,KAAK;AAAA,IAC3D;AAAA,EACF;AACF;AACA,SAAS,gBAAgB,MAAM,OAAO;AACpC,MAAI,KAAK,WAAW,OAAO;AACzB,UAAM,IAAI;AAAA,MACR,WAAW,sCAAsC,KAAK;AAAA,IACxD;AAAA,EACF;AACF;AACA,SAAS,mBAAmB,MAAM,OAAO;AACvC,MAAI,KAAK,SAAS,OAAO;AACvB,UAAM,IAAI;AAAA,MACR,YAAY,sCAAsC,KAAK;AAAA,IACzD;AAAA,EACF;AACF;AACA,SAAS,mBAAmB,MAAM,OAAO;AACvC,MAAI,KAAK,SAAS,OAAO;AACvB,UAAM,IAAI;AAAA,MACR,WAAW,sCAAsC,KAAK;AAAA,IACxD;AAAA,EACF;AACF;AACA,SAAS,eAAe,MAAM;AAC5B,MAAI,KAAK,SAAS,MAAM,GAAG;AACzB,UAAM,IAAI;AAAA,MACR,iDAAiD;AAAA,IACnD;AAAA,EACF;AACF;AACA,SAAS,cAAc,MAAM;AAC3B,MAAI,KAAK,SAAS,MAAM,GAAG;AACzB,UAAM,IAAI;AAAA,MACR,gDAAgD;AAAA,IAClD;AAAA,EACF;AACF;AACA,SAAS,yBAAyB,MAAME,QAAO;AAC7C,MAAI,CAAC,aAAaA,MAAK,GAAG;AACxB,UAAM,IAAI;AAAA,MACR,gEAAgE,KAAK;AAAA,QACnE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,UAAU,KAAK,IAAI;AAAA,EACjB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,iBAAa,KAAK,CAAC,CAAC;AACpB,UAAM,QAAQ,KAAK,CAAC,EAAE,SAAS;AAC/B,QAAI,CAAC,QAAQ,WAAW,SAAS,KAAK,GAAG;AACvC,cAAQ,WAAW,KAAK,KAAK;AAAA,IAC/B;AACA,UAAM,SAAS,QAAQ,mBAAmB,OAAO;AACjD,WAAO,SAAS;AAAA,EAClB;AACF;AAOO,SAAS,uBAAuB,cAAc;AACnD,SAAO,WAAW;AACpB;AAEA,UAAU,KAAK,IAAI;AAAA,EACjB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,iBAAa,KAAK,CAAC,CAAC;AACpB,UAAM,QAAQ,KAAK,CAAC,EAAE,SAAS;AAC/B,QAAI,CAAC,QAAQ,UAAU,SAAS,KAAK,GAAG;AACtC,cAAQ,UAAU,KAAK,KAAK;AAAA,IAC9B;AACA,WAAO,uBAAuB,KAAK;AAAA,EACrC;AACF;AAEO,IAAM,wBAAwB;AAGrC,UAAU,SAAS,IAAI;AAAA,EACrB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,iBAAa,KAAK,CAAC,CAAC;AACpB,UAAM,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC/C,UAAM,SAAS,KAAK,CAAC;AACrB,QAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACnE;AACA,UAAM,YAAY,OAAO;AACzB,UAAM,UAAU,IAAI,WAAW,YAAY,CAAC;AAC5C,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,YAAM,YAAY,OAAO,CAAC;AAI1B,UAAID;AACJ,UAAI,OAAO,cAAc,UAAU;AACjC,QAAAA,SAAQ,WAAW,SAAS;AAAA,MAC9B,OAAO;AACL,YAAI,CAAC,MAAM,QAAQ,SAAS,GAAG;AAC7B,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QACF;AACA,cAAM,SAAS,UAAU;AACzB,YAAI,WAAW,GAAG;AAChB,UAAAA,SAAQ;AAAA,QACV,OAAO;AACL,cAAI,WAAW,GAAG;AAChB,kBAAM,IAAI;AAAA,cACR,qDAAqD;AAAA,YACvD;AAAA,UACF;AACA,UAAAA,SAAQ,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;AAAA,QACtD;AAAA,MACF;AACA,YAAM,SAAS,IAAI;AACnB,cAAQ,MAAM,IAAIA,OAAM,CAAC;AACzB,cAAQ,SAAS,CAAC,IAAIA,OAAM,CAAC;AAC7B,cAAQ,SAAS,CAAC,IAAIA,OAAM,CAAC;AAC7B,cAAQ,SAAS,CAAC,IAAIA,OAAM,CAAC,IAAI;AAAA,IACnC;AACA,QAAI,CAAC,QAAQ,iBAAiB;AAC5B,cAAQ,kBAAkB,CAAC;AAAA,IAC7B;AACA,UAAM,cAAc,GAAG,yBAAyB,QAAQ,gBAAgB;AACxE,UAAM,iBAAiB,IAAI,uBAAe,aAAa,OAAO;AAC9D,YAAQ,gBAAgB,KAAK,cAAc;AAC3C,WAAO,aAAa,sBAAsB,kBAAkB;AAAA,EAC9D;AACF;AAEA,IAAM,sBAAsB;AAE5B,UAAU,MAAM,IAAI;AAAA,EAClB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,uBAAmB,MAAM,CAAC;AAC1B,uBAAmB,MAAM,CAAC;AAC1B,UAAM,OAAO,KAAK,CAAC;AAEnB,QAAI,EAAE,uBAAuB,QAAQ,YAAY;AAC/C,UAAI,WAAW;AACf,YAAM,YAAY,QAAQ,aAAa;AACvC,eAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,cAAM,aAAa,KAAK,MAAM,IAAI,CAAC;AACnC,YAAI,YAAY,IAAI;AACpB,YAAI,MAAM,YAAY,KAAK,cAAc,GAAG;AAE1C,sBAAY;AAAA,QACd;AACA,cAAM,cAAc,GAAG,SAAS,sBAAsB;AACtD,oBAAY;AAAA,wBACI,IAAI;AAAA,+BACG,+CAA+C;AAAA;AAAA;AAAA,MAGxE;AAEA,cAAQ,UAAU,mBAAmB,IAAI;AAAA;AAAA,iCAEd,SAAS;AAAA,iCACT,SAAS;AAAA,YAC9B;AAAA;AAAA;AAAA,IAGR;AAEA,UAAM,iBAAiB,iBAAiB,SAAS,IAAI;AACrD,UAAM,oBAAoB,iBAAiB,SAAS,KAAK,CAAC,KAAK,CAAC;AAChE,UAAM,oBAAoB,iBAAiB,SAAS,KAAK,CAAC,KAAK,CAAC;AAChE,WAAO,GAAG,uBAAuB,mBAAmB,sBAAsB;AAAA,EAC5E;AACF;AAEA,UAAU,MAAM,IAAI;AAAA,EAClB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,WAAO;AAAA,EACT;AACF;AAEA,UAAU,MAAM,IAAI;AAAA,EAClB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,WAAO;AAAA,EACT;AACF;AAEA,UAAU,YAAY,IAAI;AAAA,EACxB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,WAAO;AAAA,EACT;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,uBAAmB,MAAM,CAAC;AAC1B,kBAAc,IAAI;AAClB,WAAO,IAAI,KAAK,IAAI,CAAC,QAAQ,iBAAiB,SAAS,GAAG,CAAC,EAAE,KAAK,KAAK;AAAA,EACzE;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,IAAI,iBAAiB,SAAS,KAAK,CAAC,CAAC,OAAO;AAAA,MACjD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,uBAAmB,MAAM,CAAC;AAC1B,kBAAc,IAAI;AAElB,WAAO,IAAI,KAAK,IAAI,CAAC,QAAQ,iBAAiB,SAAS,GAAG,CAAC,EAAE,KAAK,KAAK;AAAA,EACzE;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,IAAI,iBAAiB,SAAS,KAAK,CAAC,CAAC,OAAO;AAAA,MACjD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,UAAU,OAAO,IAAI;AAAA,EACnB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,UAAM,MAAM,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC7C,UAAM,MAAM,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC7C,WAAO,SAAS,iBAAiB,SAAS,KAAK,CAAC,CAAC,MAAM,QAAQ;AAAA,EACjE;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,OAAO,iBAAiB,SAAS,KAAK,CAAC,CAAC,MAAM;AAAA,MACnD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,OAAO,iBAAiB,SAAS,KAAK,CAAC,CAAC,MAAM;AAAA,MACnD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,UAAU,KAAK,IAAI;AAAA,EACjB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,OAAO,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EACjD;AACF;AAEA,UAAU,OAAO,IAAI;AAAA,EACnB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,SAAS,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EACnD;AACF;AAEA,UAAU,OAAO,IAAI;AAAA,EACnB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,SAAS,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EACnD;AACF;AAEA,UAAU,MAAM,IAAI;AAAA,EAClB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EAClD;AACF;AAEA,UAAU,KAAK,IAAI;AAAA,EACjB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,OAAO,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EACjD;AACF;AAEA,UAAU,KAAK,IAAI;AAAA,EACjB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,OAAO,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EACjD;AACF;AAEA,UAAU,MAAM,IAAI;AAAA,EAClB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,uBAAmB,MAAM,CAAC;AAC1B,uBAAmB,MAAM,CAAC;AAC1B,kBAAc,IAAI;AAClB,WAAO,KAAK,WAAW,IACnB,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC,MAAM;AAAA,MAC7C;AAAA,MACA,KAAK,CAAC;AAAA,IACR,OACA,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EAC/C;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,IAAI,iBAAiB,SAAS,KAAK,CAAC,CAAC,OAAO;AAAA,MACjD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,UAAU,IAAI,IAAI;AAAA,EAChB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,IAAI,iBAAiB,SAAS,KAAK,CAAC,CAAC,QAAQ;AAAA,MAClD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,IAAI,iBAAiB,SAAS,KAAK,CAAC,CAAC,OAAO;AAAA,MACjD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,UAAU,IAAI,IAAI;AAAA,EAChB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,WAAO,IAAI,iBAAiB,SAAS,KAAK,CAAC,CAAC,QAAQ;AAAA,MAClD;AAAA,MACA,KAAK,CAAC;AAAA,IACR;AAAA,EACF;AACF;AAEA,SAAS,iBAAiB,UAAU;AAClC,SAAO;AAAA,IACL,eAAe,SAAU,MAAM;AAC7B,aAAO,WAAW;AAAA,IACpB;AAAA,IACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,sBAAgB,MAAM,CAAC;AAGvB,UAAI,OAAO,WAAW;AACtB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAQ,aAAa,KAAK,CAAC,CAAC;AAAA,MAC9B;AACA,UAAI,SAAS,WAAW,MAAM;AAC5B,cAAM,IAAI;AAAA,UACR,mDAAmD,KAAK;AAAA,YACtD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAIA,cAAQ,CAAC,WAAW;AAEpB,aAAO,IAAI;AAAA,QACT;AAAA,QACA,KAAK,CAAC;AAAA,QACN;AAAA,MACF,KAAK,YAAY,iBAAiB,SAAS,KAAK,CAAC,GAAG,IAAI;AAAA,IAC1D;AAAA,EACF;AACF;AAEA,UAAU,IAAI,IAAI,iBAAiB,IAAI;AAEvC,UAAU,IAAI,IAAI,iBAAiB,IAAI;AAEvC,UAAU,GAAG,IAAI;AAAA,EACf,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,KAAK,CAAC,CAAC;AACrB,WAAO,KAAK,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAAA,EAC/C;AACF;AAEA,SAAS,oBAAoB,UAAU;AACrC,SAAO;AAAA,IACL,eAAe,SAAU,MAAM;AAC7B,aAAO,WAAW;AAAA,IACpB;AAAA,IACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,yBAAmB,MAAM,CAAC;AAC1B,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,sBAAc,KAAK,CAAC,CAAC;AAAA,MACvB;AACA,UAAI,SAAS;AACb,eAAS,KACN,IAAI,CAAC,QAAQ,iBAAiB,SAAS,GAAG,CAAC,EAC3C,KAAK,IAAI,WAAW;AACvB,eAAS,IAAI;AACb,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,UAAU,KAAK,IAAI,oBAAoB,IAAI;AAE3C,UAAU,KAAK,IAAI,oBAAoB,IAAI;AAE3C,UAAU,SAAS,IAAI;AAAA,EACrB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,oBAAgB,MAAM,CAAC;AACvB,kBAAc,IAAI;AAClB,UAAM,MAAM,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC7C,UAAM,MAAM,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC7C,UAAM,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC/C,WAAO,IAAI,YAAY,UAAU,YAAY;AAAA,EAC/C;AACF;AAEA,UAAU,OAAO,IAAI;AAAA,EACnB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,uBAAmB,MAAM,CAAC;AAC1B,uBAAmB,MAAM,CAAC;AAC1B,kBAAc,IAAI;AAClB,UAAM,aAAa,KAAK,IAAI,SAAU,KAAK;AACzC,aAAO,iBAAiB,SAAS,KAAK,WAAW,MAAM;AAAA,IACzD,CAAC;AACD,WAAO,MAAM,KAAK,UAAU,WAAW,KAAK,IAAI;AAAA,EAClD;AACF;AAEA,UAAU,OAAO,IAAI;AAAA,EACnB,eAAe,SAAU,MAAM;AAC7B,WAAO,WAAW;AAAA,EACpB;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM;AAC/B,uBAAmB,MAAM,CAAC;AAC1B,uBAAmB,MAAM,CAAC;AAC1B,kBAAc,IAAI;AAClB,UAAMD;AAAA;AAAA,MAAsC;AAAA;AAC5C,QAAI,KAAK,WAAW,GAAG;AACrB,MAAAA,OAAM,KAAK,CAAC;AAAA,IACd;AACA,UAAM,aAAa,KAAK,IAAI,SAAU,KAAK,GAAG;AAC5C,aACE,iBAAiB,SAAS,KAAK,WAAW,MAAM,KAC/C,IAAI,IAAI,aAAa;AAAA,IAE1B,CAAC;AACD,WAAO,MAAM,KAAK,UAAU,WAAW,KAAK,IAAI;AAAA,EAClD;AACF;AAEA,UAAU,aAAa,IAAI;AAAA,EACzB,eAAe,SAAU,MAAM;AAC7B,QAAI,OAAO,WAAW,QAAQ,WAAW;AACzC,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,aAAO,OAAO,aAAa,KAAK,CAAC,CAAC;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM,UAAU;AACzC,mBAAe,IAAI;AACnB,uBAAmB,MAAM,CAAC;AAG1B,UAAM,OAAO,KAAK,CAAC;AACnB,QAAI;AACJ,YAAQ,KAAK,CAAC,GAAG;AAAA,MACf,KAAK;AACH,wBAAgB;AAChB;AAAA,MACF,KAAK;AACH,wBAAgB,KAAK,CAAC;AACtB;AAAA,MACF;AACE,wBAAgB;AAAA,IACpB;AACA,QAAI,CAAC,eAAe;AAClB,YAAM,IAAI;AAAA,QACR,oEAAoE,KAAK;AAAA,UACvE;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,eAAW,aAAa,SAAY,WAAW,WAAW;AAC1D,UAAM,aAAa,UAAU,aAAa,EAAE,cAAc,IAAI,IAAI;AAClE,6BAAyB,MAAM,UAAU;AAEzC,UAAM,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC/C,UAAM,WAAW,aAAa,aAAa;AAE3C,QAAI,SAAS;AACb,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG;AAC3C,YAAM,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC/C,YAAM,UACJ,UAAU,iBAAiB,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU;AAC7D,YAAM,QAAQ,iBAAiB,SAAS,KAAK,IAAI,CAAC,CAAC;AACnD,YAAM,UAAU,iBAAiB,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU;AACjE,eAAS,OAAO,YAAY,uBAAuB,WAAW,aAAa,WAAW,sBAAsB;AAAA,IAC9G;AACA,WAAO;AAAA,EACT;AACF;AAEA,UAAU,OAAO,IAAI;AAAA,EACnB,eAAe,SAAU,MAAM;AAC7B,QAAI,OAAO,WAAW;AACtB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,aAAO,OAAO,aAAa,KAAK,CAAC,CAAC;AAAA,IACpC;AACA,WAAO,OAAO,aAAa,KAAK,KAAK,SAAS,CAAC,CAAC;AAChD,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM,UAAU;AACzC,mBAAe,IAAI;AACnB,uBAAmB,MAAM,CAAC;AAE1B,eAAW,aAAa,SAAY,WAAW,WAAW;AAC1D,UAAM,aAAa,UAAU,OAAO,EAAE,cAAc,IAAI,IAAI;AAC5D,6BAAyB,MAAM,UAAU;AAEzC,UAAM,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC/C,UAAM,WAAW;AAAA,MACf;AAAA,MACA,KAAK,KAAK,SAAS,CAAC;AAAA,MACpB;AAAA,IACF;AACA,QAAI,SAAS;AACb,aAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG;AAC5C,YAAM,QAAQ,iBAAiB,SAAS,KAAK,CAAC,CAAC;AAC/C,YAAM,SAAS,iBAAiB,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU;AAChE,eAAS,IAAI,YAAY,WAAW,YAAY,UAAU;AAAA,IAC5D;AACA,WAAO;AAAA,EACT;AACF;AAEA,UAAU,MAAM,IAAI;AAAA,EAClB,eAAe,SAAU,MAAM;AAC7B,QAAI,OAAO,WAAW;AACtB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvC,aAAO,OAAO,aAAa,KAAK,CAAC,CAAC;AAAA,IACpC;AACA,WAAO,OAAO,aAAa,KAAK,KAAK,SAAS,CAAC,CAAC;AAChD,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,SAAU,SAAS,MAAM,UAAU;AACzC,kBAAc,IAAI;AAClB,uBAAmB,MAAM,CAAC;AAE1B,eAAW,aAAa,SAAY,WAAW,WAAW;AAC1D,UAAM,aAAa,UAAU,MAAM,EAAE,cAAc,IAAI,IAAI;AAC3D,6BAAyB,MAAM,UAAU;AACzC,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG;AAC3C,oBAAc,KAAK,CAAC,CAAC;AAAA,IACvB;AAEA,UAAM,WAAW;AAAA,MACf;AAAA,MACA,KAAK,KAAK,SAAS,CAAC;AAAA,MACpB;AAAA,IACF;AACA,QAAI,SAAS;AACb,aAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG;AAC5C,YAAM,YAAY,iBAAiB,SAAS,KAAK,CAAC,CAAC;AACnD,YAAM,SAAS,iBAAiB,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU;AAChE,eAAS,IAAI,eAAe,YAAY,UAAU;AAAA,IACpD;AACA,WAAO;AAAA,EACT;AACF;;;AC5+BO,IAAM,gBAAN,MAAoB;AAAA,EACzB,cAAc;AAMZ,SAAK,WAAW,CAAC;AAOjB,SAAK,aAAa,CAAC;AAOnB,SAAK,WAAW,CAAC;AAMjB,SAAK,iBAAiB;AAMtB,SAAK,qBAAqB;AAM1B,SAAK,mBAAmB;AAMxB,SAAK,kBAAkB;AAMvB,SAAK,qBAAqB;AAM1B,SAAK,oBAAoB;AAMzB,SAAK,iBAAiB;AAAA,EACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,MAAM;AACf,SAAK,SAAS,KAAK,IAAI;AACvB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,MAAM;AACjB,SAAK,WAAW,KAAK,IAAI;AACzB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,WAAW,MAAM,MAAM,YAAY;AACjC,SAAK,SAAS,KAAK;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,kBAAkB,YAAY;AAC5B,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,sBAAsB,YAAY;AAChC,SAAK,qBAAqB;AAC1B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,0BAA0B,YAAY;AACpC,SAAK,mBAAmB;AACxB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,mBAAmB,YAAY;AAC7B,SAAK,kBAAkB;AACvB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,+BAA+B,YAAY;AACzC,SAAK,qBAAqB;AAC1B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,6BAA6B,YAAY;AACvC,SAAK,oBAAoB;AACzB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,wBAAwB,gBAAgB;AACtC,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,oBAAoB;AAClB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB;AACpB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,qBAAqB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,iCAAiC;AAC/B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,+BAA+B;AAC7B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBA,sBAAsB,iBAAiB;AACrC,UAAM,eAAe,KAAK,iBACtB,+CACA;AAEJ,QAAI,aAAa,KAAK;AACtB,QAAI,WAAW,KAAK;AAEpB,QAAI,iBAAiB;AACnB,mBAAa,WAAW,OAAO,iBAAiB;AAChD,iBAAW,SAAS,OAAO;AAAA,QACzB,MAAM;AAAA,QACN,MAAM;AAAA,QACN,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOT,KAAK,SACJ,IAAI,SAAU,SAAS;AACtB,aAAO,aAAa,UAAU;AAAA,IAChC,CAAC,EACA,KAAK,IAAI;AAAA;AAAA;AAAA,EAGV,WACC,IAAI,SAAU,WAAW;AACxB,aAAO,eAAe,YAAY;AAAA,IACpC,CAAC,EACA,KAAK,IAAI;AAAA;AAAA;AAAA,EAGV,SACC,IAAI,SAAU,SAAS;AACtB,aAAO,aAAa,QAAQ,OAAO,MAAM,QAAQ,OAAO;AAAA,IAC1D,CAAC,EACA,KAAK,IAAI;AAAA;AAAA,wBAEY;AAAA,oBACJ,KAAK;AAAA,kBACP,KAAK;AAAA,kBACL,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAkBH,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvB,SACC,IAAI,SAAU,SAAS;AACtB,aAAO,OAAO,QAAQ,OAAO,QAAQ,QAAQ,aAAa;AAAA,IAC5D,CAAC,EACA,KAAK,IAAI;AAAA;AAAA,EAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,wBAAwB,iBAAiB;AACvC,UAAM,qBAAqB,kBACvB,wEACA;AAEJ,QAAI,WAAW,KAAK;AAEpB,QAAI,iBAAiB;AACnB,iBAAW,SAAS,OAAO;AAAA,QACzB,MAAM;AAAA,QACN,MAAM;AAAA,QACN,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA,EAIT,KAAK,SACJ,IAAI,SAAU,SAAS;AACtB,aAAO,aAAa,UAAU;AAAA,IAChC,CAAC,EACA,KAAK,IAAI;AAAA;AAAA;AAAA,EAGV,SACC,IAAI,SAAU,SAAS;AACtB,aAAO,aAAa,QAAQ,OAAO,MAAM,QAAQ,OAAO;AAAA,IAC1D,CAAC,EACA,KAAK,IAAI;AAAA;AAAA,QAEJ,KAAK;AAAA,mBACM,KAAK;AAAA;AAAA,EAEtB;AAAA;AAAA,EAEA;AACF;AAoBO,SAAS,kBAAkB,OAAO;AACvC,QAAM,YAAY,MAAM;AACxB,QAAM,OAAO,UAAU,SAAS,SAAY,UAAU,OAAO;AAC7D,QAAMG,SAAQ,UAAU,SAAS;AACjC,QAAM,WAAW,UAAU,gBAAgB,CAAC,GAAG,GAAG,GAAG,CAAC;AACtD,QAAM,SAAS,UAAU,UAAU,CAAC,GAAG,CAAC;AACxC,QAAM,UAAU,UAAU,YAAY,SAAY,UAAU,UAAU;AACtE,QAAM,WAAW,UAAU,aAAa,SAAY,UAAU,WAAW;AAKzE,QAAM,cAAc;AAAA,IAClB,kBAAkB;AAAA,IAClB,WAAW,CAAC;AAAA,IACZ,YAAY,CAAC;AAAA,IACb,mBAAmB,CAAC;AAAA,IACpB,WAAW,CAAC;AAAA,EACd;AACA,QAAM,aAAa;AAAA,IACjB;AAAA,IACA;AAAA,IACA,WAAW,eAAe,WAAW;AAAA,EACvC;AACA,QAAM,eAAe;AAAA,IACnB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb;AACA,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb;AACA,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb;AAKA,QAAM,cAAc;AAAA,IAClB,kBAAkB;AAAA,IAClB,WAAW,YAAY;AAAA,IACvB,YAAY,CAAC;AAAA,IACb,mBAAmB,YAAY;AAAA,IAC/B,WAAW,CAAC;AAAA,EACd;AACA,QAAM,cAAc,iBAAiB,aAAaA,QAAO,WAAW,KAAK;AACzE,QAAM,gBAAgB;AAAA,IACpB;AAAA,IACA;AAAA,IACA,WAAW;AAAA,EACb;AAEA,MAAI,gBAAgB;AACpB,QAAM,cAAc,QAAQ;AAAA,IAC1B;AAAA,IACA;AAAA,IACA,WAAW,eAAe,WAAW;AAAA,EACvC;AACA,UAAQ,UAAU,YAAY;AAAA,IAC5B,KAAK;AACH;AAAA,IACF,KAAK;AACH;AAAA,IAEF,KAAK;AACH,sBAAgB,yBAAyB;AACzC;AAAA,IACF,KAAK;AACH,YAAM,KAAK;AACX,YAAM,IAAI,SAAS,QAAQ;AAC3B,sBAAgB,yBAAyB,+BAA+B,8BAA8B,aAAa;AACnH;AAAA,IAEF;AACE,YAAM,IAAI,MAAM,6BAA6B,UAAU,UAAU;AAAA,EACrE;AAEA,QAAM,UAAU,IAAI,cAAc,EAC/B,kBAAkB,QAAQ,aAAa,EACvC,sBAAsB,cAAc,EACpC,0BAA0B,YAAY,EACtC,+BAA+B,cAAc,EAC7C,wBAAwB,CAAC,CAAC,UAAU,cAAc,EAClD;AAAA,IACC,QAAQ,oBAAoB,mBAAmB,mBAAmB;AAAA,EACpE;AAEF,MAAI,MAAM,QAAQ;AAChB,UAAM,eAAe;AAAA,MACnB;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AACA,YAAQ,6BAA6B,IAAI,cAAc;AAAA,EACzD;AAGA,QAAM,WAAW,CAAC;AAGlB,cAAY,UAAU,QAAQ,SAAU,SAAS;AAC/C,UAAM,cAAc,uBAAuB,OAAO;AAClD,YAAQ,WAAW,SAAS,aAAa;AACzC,aAAS,WAAW,IAAI,WAAY;AAClC,UAAI,CAAC,MAAM,aAAa,MAAM,UAAU,OAAO,MAAM,QAAW;AAC9D,cAAM,IAAI;AAAA,UACR,qDAAqD;AAAA,QACvD;AAAA,MACF;AACA,UAAI,QAAQ,MAAM,UAAU,OAAO;AACnC,UAAI,OAAO,UAAU,UAAU;AAC7B,gBAAQ,0BAA0B,aAAa,KAAK;AAAA,MACtD;AACA,aAAO,UAAU,SAAY,QAAQ;AAAA,IACvC;AAAA,EACF,CAAC;AAED,MAAI,UAAU,eAAe,WAAW,UAAU,KAAK;AACrD,UAAM,UAAU,IAAI,MAAM;AAC1B,YAAQ,cACN,UAAU,gBAAgB,SAAY,cAAc,UAAU;AAChE,YAAQ,MAAM,UAAU;AACxB,YACG,WAAW,qBAAqB,EAChC;AAAA,MACC,QAAQ,mBAAmB,IAAI;AAAA,IACjC;AACF,aAAS,WAAW,IAAI;AAAA,EAC1B;AAIA,cAAY,WAAW,QAAQ,SAAU,UAAU;AACjD,QAAI,CAAC,YAAY,WAAW,SAAS,QAAQ,GAAG;AAC9C,kBAAY,WAAW,KAAK,QAAQ;AAAA,IACtC;AACA,YAAQ,WAAW,KAAK,YAAY,SAAS,KAAK,UAAU;AAAA,EAC9D,CAAC;AAGD,cAAY,WAAW,QAAQ,SAAU,UAAU;AACjD,YAAQ,aAAa,WAAW,UAAU;AAAA,EAC5C,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA,YAAY,YAAY,WAAW,IAAI,SAAU,eAAe;AAC9D,aAAO;AAAA,QACL,MAAM;AAAA,QACN,UAAU,SAAU,SAAS,OAAO;AAClC,cAAI,QAAQ,MAAM,aAAa;AAC/B,cAAI,OAAO,UAAU,UAAU;AAC7B,oBAAQ,0BAA0B,aAAa,KAAK;AAAA,UACtD;AACA,iBAAO,UAAU,SAAY,QAAQ;AAAA,QACvC;AAAA,MACF;AAAA,IACF,CAAC;AAAA,IACD;AAAA,EACF;AACF;;;ACtgBA,IAAM,mBAAN,cAA+B,cAAM;AAAA;AAAA;AAAA;AAAA,EAInC,YAAY,SAAS;AACnB,UAAM,cAAc,OAAO,OAAO,CAAC,GAAG,OAAO;AAE7C,UAAM,WAAW;AAMjB,SAAK,eAAe,kBAAkB,QAAQ,KAAK;AAMnD,SAAK,kBAAkB,QAAQ,MAAM,aAAa,CAAC;AAMnD,SAAK,wBAAwB,CAAC,CAAC,QAAQ;AAAA,EACzC;AAAA,EAEA,iBAAiB;AACf,WAAO,IAAI,oBAAyB,MAAM;AAAA,MACxC,cAAc,KAAK,aAAa,QAAQ,sBAAsB;AAAA,MAC9D,gBAAgB,KAAK,aAAa,QAAQ,wBAAwB;AAAA,MAClE,iBACE,CAAC,KAAK,yBACN,KAAK,aAAa,QAAQ,sBAAsB,IAAI;AAAA,MACtD,mBACE,CAAC,KAAK,yBACN,KAAK,aAAa,QAAQ,wBAAwB,IAAI;AAAA,MACxD,UAAU,KAAK,aAAa;AAAA,MAC5B,YAAY,KAAK,aAAa;AAAA,IAChC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,qBAAqB,WAAW;AAC9B,WAAO,OAAO,KAAK,iBAAiB,SAAS;AAC7C,SAAK,QAAQ;AAAA,EACf;AACF;AAEA,IAAO,sBAAQ;;;AClCf,SAAS,WAAW,OAAO,WAAW;AACpC,QAAM,eAAe;AAAA,qBACF,WAAW;AAAA,mBACb,SAAS;AAAA,oBACR,SAAS;AAAA,oBACT,SAAS;AAAA,oBACT,SAAS;AAAA,oBACT,SAAS;AAAA,oBACT,SAAS;AAAA,oBACT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAMJ,WAAW;AAAA;AAAA,UAE1B,SAAS,sBAAsB,SAAS,wBAAwB,SAAS;AAAA,UACzE,SAAS,sBAAsB,SAAS,wBAAwB,SAAS;AAAA;AAAA,sBAE7D,SAAS,yBAAyB,WAAW,kBAAkB,SAAS;AAAA;AAAA;AAO5F,QAAM,UAAU;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW,CAAC;AAAA,IACZ,YAAY,CAAC;AAAA,IACb,mBAAmB,CAAC;AAAA,IACpB,WAAW,CAAC;AAAA,IACZ;AAAA,EACF;AAEA,QAAM,WAAW,CAAC;AAElB,MAAI,MAAM,UAAU,QAAW;AAC7B,UAAMC,SAAQ,iBAAiB,SAAS,MAAM,OAAO,WAAW,KAAK;AACrE,aAAS,KAAK,WAAWA,SAAQ;AAAA,EACnC;AAEA,MAAI,MAAM,aAAa,QAAW;AAChC,UAAM,WAAW;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AACA,aAAS;AAAA,MACP,sBAAsB,kCAAkC;AAAA,IAC1D;AAAA,EACF;AAEA,MAAI,MAAM,aAAa,QAAW;AAChC,UAAM,WAAW;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AACA,aAAS;AAAA,MACP,sBAAsB;AAAA,IACxB;AAAA,EACF;AAEA,MAAI,MAAM,eAAe,QAAW;AAClC,UAAM,aAAa;AAAA,MACjB;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AACA,aAAS,KAAK;AAAA,2BACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUtB;AAAA,EACH;AAEA,MAAI,MAAM,UAAU,QAAW;AAC7B,UAAM,QAAQ,iBAAiB,SAAS,MAAM,OAAO,WAAW,MAAM;AACtE,aAAS,KAAK,yCAAyC,UAAU;AAAA,EACnE;AAEA,MAAI,MAAM,eAAe,QAAW;AAClC,UAAM,aAAa;AAAA,MACjB;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AACA,aAAS;AAAA,MACP,iCAAiC;AAAA,IACnC;AAAA,EACF;AAGA,QAAM,WAAW,CAAC;AAElB,QAAM,eAAe,QAAQ,UAAU;AACvC,MAAI,eAAe,KAAK,CAAC,MAAM,WAAW;AACxC,UAAM,IAAI;AAAA,MACR,wCAAwC,QAAQ;AAAA,IAClD;AAAA,EACF;AAEA,WAAS,IAAI,GAAG,IAAI,cAAc,EAAE,GAAG;AACrC,UAAM,eAAe,QAAQ,UAAU,CAAC;AACxC,QAAI,EAAE,gBAAgB,MAAM,YAAY;AACtC,YAAM,IAAI,MAAM,YAAY,kCAAkC;AAAA,IAChE;AACA,UAAM,cAAc,uBAAuB,YAAY;AACvD,aAAS,WAAW,IAAI,WAAY;AAClC,UAAI,QAAQ,MAAM,UAAU,YAAY;AACxC,UAAI,OAAO,UAAU,UAAU;AAC7B,gBAAQ,0BAA0B,SAAS,KAAK;AAAA,MAClD;AACA,aAAO,UAAU,SAAY,QAAQ;AAAA,IACvC;AAAA,EACF;AAEA,QAAM,sBAAsB,OAAO,KAAK,QAAQ,EAAE,IAAI,SAAU,MAAM;AACpE,WAAO,iBAAiB;AAAA,EAC1B,CAAC;AAED,QAAM,eAAe,KAAK,KAAK,YAAY,CAAC;AAC5C,sBAAoB;AAAA,IAClB,qBAAqB,SAAS,sBAAsB;AAAA,EACtD;AAEA,MAAI,QAAQ,iBAAiB;AAC3B,wBAAoB;AAAA,MAClB,qBAAqB,yBAAyB,QAAQ,gBAAgB;AAAA,IACxE;AAAA,EACF;AAEA,QAAM,qBAAqB,OAAO,KAAK,QAAQ,SAAS,EAAE,IAAI,SAC5D,MACA;AACA,WAAO,QAAQ,UAAU,IAAI;AAAA,EAC/B,CAAC;AAED,QAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASN,SAAS;AAAA,oBACR,SAAS;AAAA,oBACT,SAAS;AAAA,oBACT,SAAS;AAAA,oBACT,SAAS;AAAA,oBACT,SAAS;AAAA;AAAA,MAEvB,oBAAoB,KAAK,IAAI;AAAA;AAAA,MAE7B,mBAAmB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,0BAIR,SAAS;AAAA,0BACT,SAAS;AAAA,0BACT,SAAS;AAAA,0BACT,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,+BAM3B,SAAS;AAAA;AAAA,QAGT,SAAS,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAQF,SAAS;AAAA;AAG/B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,iBAAiB,QAAQ;AAAA,EAC3B;AACF;AAcA,IAAM,iBAAN,cAA6B,iBAAc;AAAA;AAAA;AAAA;AAAA,EAIzC,YAAY,SAAS;AACnB,cAAU,UAAU,OAAO,OAAO,CAAC,GAAG,OAAO,IAAI,CAAC;AAElD,UAAM,QAAQ,QAAQ,SAAS,CAAC;AAChC,WAAO,QAAQ;AAEf,UAAM,YAAY,QAAQ;AAC1B,WAAO,QAAQ;AAEf,UAAM,OAAO;AAMb,SAAK,WAAW,QAAQ;AAMxB,SAAK,kBAAkB;AAMvB,SAAK,sBAAsB;AAM3B,SAAK,SAAS;AAMd,SAAK,aAAa;AAMlB,SAAK,kBAAkB,KAAK,OAAO,aAAa,CAAC;AAEjD,SAAK,kBAAkB,iBAAc,QAAQ,KAAK,mBAAmB;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,QAAQ,YAAY;AAC7B,UAAM,SAAS,KAAK,UAAU;AAC9B,WAAO,KAAK,WACR,OAAO,KAAK,aAAa,aACvB,KAAK,SAAS,QAAQ,UAAU,IAChC,KAAK,WACP,SACA,CAAC,MAAM,IACP,CAAC;AAAA,EACP;AAAA;AAAA;AAAA;AAAA,EAKA,kBAAkB;AAChB,WAAO,KAAK,mBAAmB,KAAK,UAAU;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB;AACf,UAAM,SAAS,KAAK,gBAAgB;AACpC,WAAO,SAAS,OAAO,SAAS,IAAI;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA,EAKA,sBAAsB;AACpB,QAAI,KAAK,YAAY,GAAG;AACtB,WAAK,YAAY,EAAE,WAAW;AAAA,IAChC;AACA,QAAI,KAAK,UAAU,GAAG;AACpB,WAAK,SAAS,KAAK,MAAM;AAAA,IAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,sBAAsB;AACpB,UAAM,MAAM,OAAO;AACnB,UAAM,UAAU,KAAK,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,GAAG,GAAG,GAAG;AAC3D,WAAO,WAAW,QAAQ,UAAU,eAAe,QAAQ,CAAC,IACxD,QAAQ,CAAC,EAAE,YACX;AAAA,EACN;AAAA,EAEA,iBAAiB;AACf,UAAM,cAAc,WAAW,KAAK,QAAQ,KAAK,oBAAoB,CAAC;AAEtE,WAAO,IAAIC,mBAAuB,MAAM;AAAA,MACtC,cAAc,YAAY;AAAA,MAC1B,gBAAgB,YAAY;AAAA,MAC5B,UAAU,YAAY;AAAA,MACtB,WAAW,KAAK;AAAA,MAChB,iBAAiB,YAAY;AAAA,IAC/B,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc,YAAY,SAAS;AACjC,UAAM,gBAAgB,KAAK,YAAY;AACvC,QAAI;AACJ,aAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,IAAI,IAAI,EAAE,GAAG;AAChD,WAAK,kBAAkB,QAAQ,CAAC;AAChC,UAAI,cAAc,aAAa,UAAU,GAAG;AAC1C,iBAAS,cAAc,YAAY,UAAU;AAAA,MAC/C;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,YAAY,QAAQ;AACzB,SAAK,WAAW;AAChB,UAAM,YAAY,WAAW;AAC7B,UAAM,UAAU,KAAK,WAAW,WAAW,QAAQ,UAAU,UAAU;AACvE,QAAI,QAAQ;AACZ,aAAS,IAAI,GAAG,KAAK,QAAQ,QAAQ,IAAI,IAAI,EAAE,GAAG;AAChD,YAAM,SAAS,QAAQ,CAAC;AACxB,YAAM,cAAc,OAAO,SAAS;AACpC,UAAI,eAAe,WAAW;AAC5B,cAAM,WAAW,MAAM;AACrB,cAAI,OAAO,SAAS,KAAK,SAAS;AAChC,mBAAO,oBAAoB,UAAU,QAAQ;AAC7C,iBAAK,QAAQ;AAAA,UACf;AAAA,QACF;AACA,eAAO,iBAAiB,UAAU,QAAQ;AAAA,MAC5C;AACA,cAAQ,SAAS,eAAe;AAAA,IAClC;AACA,UAAM,SAAS,KAAK,cAAc,YAAY,OAAO;AACrD,QAAI,KAAK,YAAY,EAAE,kBAAkB,OAAO;AAE9C,WAAK,sBAAsB,UAAU;AACrC,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,sBAAsB,MAAM,UAAU,YAAY;AACzD,YAAM,aAAa,KAAK;AAAA,QACtB,WAAW;AAAA,QACX,KAAK;AAAA,MACP,EAAE,OAAO,CAAC,WAAW,CAAC,QAAQ,SAAS,MAAM,CAAC;AAC9C,UAAI,WAAW,SAAS,GAAG;AACzB,eAAO,KAAK,cAAc,YAAY,UAAU;AAAA,MAClD;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,SAAS,OAAO;AACd,SAAK,kBAAkB,MAAM,aAAa,CAAC;AAC3C,SAAK,SAAS;AACd,UAAM,cAAc,WAAW,KAAK,QAAQ,KAAK,oBAAoB,CAAC;AACtE,UAAM,WAAW,KAAK,YAAY;AAClC,aAAS,MAAM;AAAA,MACb,cAAc,YAAY;AAAA,MAC1B,gBAAgB,YAAY;AAAA,MAC5B,UAAU,YAAY;AAAA,MACtB,iBAAiB,YAAY;AAAA,IAC/B,CAAC;AACD,SAAK,QAAQ;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,qBAAqB,WAAW;AAC9B,WAAO,OAAO,KAAK,iBAAiB,SAAS;AAC7C,SAAK,QAAQ;AAAA,EACf;AACF;AAOA,eAAe,UAAU;AAEzB,IAAO,oBAAQ;",
  "names": ["earcut", "equals", "intersects", "array", "buffer", "create", "create", "options", "buffer", "location", "Layer_default", "EventType_default", "Event_default", "id", "array", "color", "create", "Layer_default", "create", "equals", "geometry", "color", "equals", "geometry", "executorGroups", "extent", "VectorTile_default", "kCSSColorTable", "clamp_css_byte", "i", "Math", "round", "clamp_css_float", "f", "parse_css_int", "str", "length", "parseFloat", "parseInt", "parse_css_float", "css_hue_to_rgb", "m1", "m2", "h", "parseCSSColor", "css_str", "replace", "toLowerCase", "slice", "iv", "substr", "op", "indexOf", "ep", "fname", "params", "split", "alpha", "pop", "s", "l", "exports", "e", "Color", "constructor", "r", "g", "b", "a", "parse", "input", "undefined", "const", "rgba", "toString", "toArray", "toArray01", "toArray01PremultipliedAlpha", "black", "white", "transparent", "red", "blue", "convertLiteral", "value", "convertFunction", "parameters", "propertySpec", "let", "stops", "convertIdentityFunction", "zoomAndFeatureDependent", "featureDependent", "property", "zoomDependent", "map", "stop", "tokens", "convertTokenString", "convertZoomAndPropertyFunction", "convertZoomFunction", "convertPropertyFunction", "get", "default", "type", "Object", "keys", "values", "expression", "splice", "getInterpolateOperator", "colorSpace", "featureFunctionParameters", "featureFunctionStops", "zoomStops", "zoom", "push", "functionType", "getFunctionType", "z", "output", "appendStopPair", "fixupDegenerateStepCurve", "coalesce", "getFallback", "defaultValue", "base", "Error", "isStep", "curve", "interpolated", "result", "re", "pos", "match", "exec", "literal", "lastIndex", "ParsingError", "key", "message", "super", "Scope", "parent", "bindings", "name", "concat", "has", "NullType", "kind", "NumberType", "StringType", "BooleanType", "ColorType", "ObjectType", "ValueType", "ErrorType", "CollatorType", "FormattedType", "ResolvedImageType", "array", "itemType", "N", "valueMemberTypes", "checkSubtype", "expected", "t", "memberType", "isValidType", "provided", "allowedTypes", "some", "isValidNativeType", "Array", "isArray", "Collator", "caseSensitive", "diacriticSensitive", "locale", "sensitivity", "collator", "Intl", "usage", "compare", "lhs", "rhs", "resolvedLocale", "resolvedOptions", "FormattedSection", "text", "image", "scale", "fontStack", "textColor", "normalize", "Formatted", "sections", "fromString", "unformatted", "isEmpty", "section", "factory", "join", "serialize", "serialized", "options", "ResolvedImage", "available", "validateRGBA", "isValue", "mixed", "item", "typeOf", "String", "JSON", "stringify", "Literal", "args", "context", "error", "expectedType", "evaluate", "eachChild", "outputDefined", "RuntimeError", "toJSON", "types", "string", "number", "boolean", "object", "Assertion", "floor", "parsed", "ctx", "fn", "forEach", "every", "arg", "FormatExpression", "firstArg", "nextTokenMayBeObject", "font", "lastExpression", "content", "evaluateSection", "evaluatedContent", "ImageExpression", "evaluatedImageName", "availableImages", "Coercion", "Boolean", "c", "parseColor", "num", "Number", "isNaN", "valueToString", "child", "geometryTypes", "EvaluationContext", "globals", "feature", "featureState", "formattedSection", "_parseColorCache", "canonical", "featureTileCoord", "featureDistanceData", "id", "geometryType", "geometry", "canonicalID", "properties", "distanceFromCenter", "center", "x", "y", "dX", "dY", "bX", "bearing", "bY", "dist", "cached", "CompoundExpression", "_evaluate", "definition", "definitions", "availableOverloads", "overloads", "filter", "ref", "signature", "signatureContext", "ParsingContext", "registry", "path", "scope", "parsedArgs", "argParseFailed", "errors", "signatures", "stringifySignature", "actualTypes", "register", "CollatorExpression", "EXTENT", "updateBBox", "bbox", "coord", "min", "max", "mercatorXfromLng", "lng", "mercatorYfromLat", "lat", "PI", "log", "tan", "boxWithinBox", "bbox1", "bbox2", "getTileCoordinates", "p", "tilesAtZoom", "pow", "onBoundary", "p1", "p2", "x1", "y1", "x2", "y2", "rayIntersect", "pointWithinPolygon", "point", "rings", "inside", "len", "ring", "j", "len2", "pointWithinPolygons", "polygons", "perp", "v1", "v2", "twoSided", "q1", "q2", "x3", "y3", "det1", "det2", "lineIntersectLine", "d", "vectorP", "vectorQ", "lineIntersectPolygon", "polygon", "lineStringWithinPolygon", "line", "lineStringWithinPolygons", "getTilePolygon", "coordinates", "getTilePolygons", "updatePoint", "polyBBox", "worldSize", "halfWorldSize", "shift", "resetBBox", "Infinity", "getTilePoints", "pointBBox", "shifts", "tilePoints", "points", "getTileLines", "lineBBox", "tileLines", "tileLine", "pointsWithinPolygons", "polygonGeometry", "tilePolygon", "tilePolygons", "linesWithinPolygons", "Within", "geojson", "geometries", "features", "isFeatureConstant", "test", "isStateConstant", "isGlobalPropertyConstant", "Var", "boundExpression", "part", "expr", "index", "_parse", "annotate", "typeAnnotation", "Expr", "actual", "isConstant", "ec", "k", "isTypeAnnotation", "childrenConstant", "findStopLessThanOrEqualTo", "lowerIndex", "upperIndex", "currentIndex", "currentValue", "nextValue", "Step", "labels", "outputs", "label", "outputType", "labelKey", "valueKey", "stopCount", "out", "module", "UnitBezier", "p1x", "p1y", "p2x", "p2y", "cx", "bx", "ax", "cy", "by", "ay", "prototype", "sampleCurveX", "sampleCurveY", "sampleCurveDerivativeX", "solveCurveX", "epsilon", "t0", "t1", "t2", "abs", "d2", "solve", "color", "from", "to", "Xn", "Yn", "Zn", "t3", "deg2rad", "rad2deg", "xyz2lab", "lab2xyz", "xyz2rgb", "rgb2xyz", "rgbToLab", "rgbColor", "labToRgb", "labColor", "interpolateLab", "interpolateNumber", "rgbToHcl", "atan2", "sqrt", "hclToRgb", "hclColor", "cos", "sin", "interpolateHue", "interpolateHcl", "lab", "forward", "reverse", "interpolate", "hcl", "Interpolate", "operator", "interpolation", "interpolationFactor", "lower", "upper", "exponentialInterpolation", "controlPoints", "ub", "rest", "outputLower", "outputUpper", "lowerValue", "upperValue", "difference", "progress", "Coalesce", "needsAnnotation", "argCount", "firstImage", "Let", "binding", "At", "In", "needle", "haystack", "IndexOf", "fromIndex", "Match", "inputType", "cases", "otherwise", "labelContext", "MAX_SAFE_INTEGER", "sortedLabels", "sort", "groupedByOutput", "outputLookup", "outputIndex", "coerceLabel", "this", "Case", "branches", "_", "Slice", "beginIndex", "endIndex", "isComparableType", "eq", "neq", "lt", "gt", "lteq", "gteq", "eqCollate", "neqCollate", "ltCollate", "gtCollate", "lteqCollate", "gteqCollate", "makeComparison", "compareBasic", "compareWithCollator", "isOrderComparison", "hasUntypedArgument", "Comparison", "rt", "Equals", "NotEquals", "LessThan", "GreaterThan", "LessThanOrEqual", "GreaterThanOrEqual", "NumberFormat", "currency", "unit", "minFractionDigits", "maxFractionDigits", "style", "minimumFractionDigits", "maximumFractionDigits", "format", "Length", "expressions", "obj", "v", "binarySearch", "m", "varargs", "typeToString", "pitch", "heatmapDensity", "lineProgress", "skyRadialProgress", "accumulated", "LN2", "E", "n", "LN10", "asin", "acos", "atan", "ceil", "isSupportedScript", "toUpperCase", "success", "supportsPropertyExpression", "spec", "supportsZoomExpression", "supportsInterpolation", "isFunction", "StyleExpression", "_warningHistory", "_evaluator", "_defaultValue", "getDefaultValue", "_enumValues", "evaluateWithoutErrorHandling", "val", "console", "warn", "isExpression", "createExpression", "parser", "getExpectedType", "ZoomConstantExpression", "_styleExpression", "isStateDependent", "ZoomDependentExpression", "interpolationType", "createPropertyExpression", "isZoomConstant", "zoomCurve", "findZoomCurve", "childResult", "enum", "formatted", "resolvedImage", "unbundle", "valueOf", "deepUnbundle", "unbundledValue", "isExpressionFilter", "createFilter", "layerType", "needGeometry", "needFeature", "convertFilter", "filterExp", "staticFilter", "extractStaticFilter", "filterSpec", "latest", "compiledStaticFilter", "filterFunc", "err", "globalProperties", "dynamicFilterFunc", "compiledDynamicFilter", "geometryNeeded", "dynamicFilter", "isDynamicFilter", "unionDynamicBranches", "collapseDynamicBooleanExpressions", "collapsed", "collapsedExpression", "subExpression", "isBranchingDynamically", "isRootExpressionDynamic", "dynamicConditionExpressions", "Set", "param", "converted", "convertComparisonOp", "convertNegation", "convertDisjunctionOp", "convertInOp", "convertHasOp", "filters", "deref", "layer", "refProperties", "derefLayers", "layers", "create", "fontWeights", "thin", "hairline", "light", "book", "regular", "normal", "plain", "roman", "standard", "medium", "bold", "heavy", "fat", "poster", "sp", "italicRE", "fontCache", "fonts", "size", "lineHeight", "cssData", "weight", "fontFamilies", "haveWeight", "haveStyle", "ii", "parts", "maybeWeight", "w", "previousPart", "startsWith", "fontFamily", "mapboxBaseUrl", "getMapboxPath", "url", "normalizeSpriteUrl", "token", "styleUrl", "mapboxPath", "decodeURI", "URL", "href", "sprite", "normalizeStyleUrl", "location", "normalizeSourceUrl", "tokenParam", "urlObject", "searchParams", "set", "sizeFactor", "window", "devicePixelRatio", "styleId", "functionCacheByStyleId", "filterCacheByStyleId", "getFunctionCache", "glStyle", "functionCache", "getFilterCache", "filterCache", "degrees", "defaultResolutions", "resolutions", "res", "createCanvas", "width", "height", "WorkerGlobalScope", "self", "OffscreenCanvas", "canvas", "document", "createElement", "getZoomForResolution", "resolution", "candidate", "zoomFactor", "pendingRequests", "fetchResource", "resourceType", "metadata", "request", "transformRequest", "Request", "headers", "pendingRequest", "fetch", "then", "response", "ok", "json", "Promise", "reject", "catch", "getGlStyle", "glStyleOrUrl", "trim", "resolve", "accessToken", "getTransformedTilesUrl", "tilesUrl", "transformedRequest", "tilejsonCache", "getTileJson", "glSource", "cacheKey", "promise", "tiles", "normalizedSourceUrl", "accessTokenParam", "assign", "expandUrl", "tileJson", "tileUrl", "drawIconHalo", "spriteImage", "spriteImageData", "haloWidth", "haloColor", "imageCanvas", "imgSize", "pixelRatio", "imageContext", "getContext", "drawImage", "imageData", "getImageData", "globalCompositeOperation", "fillStyle", "data", "jj", "arc", "fill", "hairSpacePool", "applyLetterSpacing", "letterSpacing", "textWithLetterSpacing", "lines", "joinSpaceString", "ll", "measureContext", "getMeasureContext", "measureText", "measureCache", "wrapText", "em", "hardLines", "wrappedText", "words", "oneEm", "maxWidth", "word", "testLine", "prevWidth", "nextWidth", "next", "lineWords", "lastWord", "fontFamilyRegEx", "stripQuotesRegEx", "loadedFontFamilies", "hasFontFamily", "family", "styleSheets", "styleSheet", "cssRules", "rules", "cssRule", "cssText", "processedFontFamilies", "getFonts", "fontsKey", "googleFontDescriptions", "cssFont", "mb2css", "registerFont", "googleFontDescription", "checkedFonts", "fontUrl", "querySelector", "markup", "rel", "head", "appendChild", "anchor", "expressionData", "rawExpression", "compiledExpression", "emptyObj", "zoomObj", "renderFeatureCoordinates", "renderFeature", "getValue", "layoutOrPaint", "layerId", "functions", "isExpr", "bind", "getIconDeclutterMode", "allowOverlap", "ignorePlacement", "evaluateFilter", "renderTransparentEnabled", "colorWithOpacity", "color", "opacity", "renderTransparentEnabled", "a", "undefined", "const", "Math", "round", "r", "g", "b", "templateRegEx", "fromTemplate", "text", "properties", "replace", "match", "slice", "let", "recordLayer", "stylefunction", "olLayer", "glStyle", "sourceOrLayers", "resolutions", "spriteData", "spriteImageUrl", "getFonts", "getImage", "defaultResolutions", "undefined", "JSON", "parse", "version", "Error", "let", "spriteImage", "spriteImageSize", "Image", "const", "img", "crossOrigin", "onload", "width", "height", "changed", "src", "WorkerGlobalScope", "self", "worker", "postMessage", "action", "addEventListener", "handler", "event", "data", "image", "allLayers", "derefLayers", "layers", "layersBySourceLayer", "mapboxLayers", "iconImageCache", "patternCache", "functionCache", "getFunctionCache", "filterCache", "getFilterCache", "mapboxSource", "i", "ii", "length", "layer", "layerId", "id", "source", "indexOf", "sourceLayer", "sources", "type", "push", "index", "textHalo", "Stroke", "textColor", "Fill", "styles", "styleFunction", "feature", "resolution", "properties", "getProperties", "zoom", "getZoomForResolution", "types", "getGeometry", "getType", "f", "featureState", "get", "getId", "stylesLength", "featureBelongsToLayer", "layerData", "layout", "emptyObj", "paint", "visibility", "minzoom", "maxzoom", "filter", "evaluateFilter", "color", "opacity", "fill", "stroke", "strokeColor", "style", "getValue", "fillIcon", "icon", "fromTemplate", "toString", "getFill", "getStroke", "getText", "Style", "setZIndex", "icon_cache_key", "pattern", "spriteImageData", "canvas", "createCanvas", "ctx", "getContext", "globalAlpha", "drawImage", "x", "y", "createPattern", "setColor", "colorWithOpacity", "setWidth", "setLineCap", "setLineJoin", "setMiterLimit", "setLineDash", "map", "hasImage", "text", "placementAngle", "iconImg", "skipLabel", "iconImage", "styleGeom", "imageElement", "iconRotationAlignment", "geom", "getFlatMidpoint", "getFlatMidpoints", "extent", "getExtent", "size", "Math", "sqrt", "max", "pow", "midpoint", "renderFeature", "renderFeatureCoordinates", "NaN", "RenderFeature", "placement", "stride", "getStride", "coordinates", "getFlatCoordinates", "x1", "y1", "x2", "y2", "minX", "min", "minY", "maxX", "maxY", "atan2", "iconSize", "iconColor", "a", "haloColor", "haloWidth", "iconCacheKey", "declutterMode", "getIconDeclutterMode", "displacement", "r", "g", "b", "iconOptions", "rotateWithView", "imgSize", "Icon", "offset", "drawIconHalo", "scale", "pixelRatio", "setGeometry", "setRotation", "deg2rad", "setOpacity", "setAnchor", "anchor", "setImage", "setText", "circleRadius", "circleStrokeColor", "circleColor", "circleStrokeWidth", "cache_key", "Circle", "radius", "label", "font", "textLineHeight", "textSize", "letterSpacing", "maxTextWidth", "round", "fontArray", "mb2css", "includes", "textField", "sections", "reduce", "acc", "chunk", "fonts", "fontStack", "split", "chunkFont", "applyLetterSpacing", "wrapText", "trim", "Text", "padding", "textTransform", "Array", "isArray", "t", "toUpperCase", "toLowerCase", "wrappedLabel", "setFont", "textAnchor", "setPlacement", "setRepeat", "symbolSpacing", "setOverflow", "textHaloWidth", "textOffset", "textTranslate", "vOffset", "hOffset", "textAlign", "setTextAlign", "textRotationAlignment", "setRotateWithView", "setMaxAngle", "textBaseline", "setTextBaseline", "textJustify", "setJustify", "setOffsetX", "setOffsetY", "setFill", "halfTextSize", "setStroke", "textPadding", "getPadding", "recordLayer", "set", "setStyle", "getTileResolutions", "projection", "tileSize", "getExtent", "createXYZ", "extent", "maxZoom", "getResolutions", "defaultResolutions", "completeOptions", "styleUrl", "options", "accessToken", "Object", "assign", "const", "searchParams", "URL", "forEach", "value", "key", "accessTokenParam", "applyStyle", "layer", "glStyle", "sourceOrLayersOrOptions", "optionsOrPath", "resolutions", "undefined", "let", "sourceId", "sourceOrLayers", "updateSource", "Array", "isArray", "source", "layers", "trim", "startsWith", "location", "href", "normalizeStyleUrl", "Promise", "resolve", "reject", "getGlStyle", "then", "version", "Error", "VectorLayer", "VectorTileLayer", "type", "keys", "sources", "find", "id", "assignSource", "setupVectorSource", "targetSource", "getSource", "setSource", "setTileUrlFunction", "getTileUrlFunction", "format_", "getAttributions", "setAttributions", "getTileLoadFunction", "defaultLoadFunction", "setTileLoadFunction", "equivalent", "getProjection", "tileGrid", "getTileGrid", "isFinite", "getMaxResolution", "getMinZoom", "setMaxResolution", "getResolution", "glSource", "get", "setupGeoJSONSource", "getFormat", "url_", "getUrl", "spriteScale", "spriteData", "spriteImageUrl", "style", "onChange", "sprite", "units", "getUnits", "map", "resolution", "METERS_PER_UNIT", "applyStyleFunction", "getFonts", "getImage", "getStyle", "catch", "setStyle", "normalizeSpriteUrl", "window", "devicePixelRatio", "sizeFactor", "spriteUrl", "origin", "pathname", "search", "fetchResource", "error", "spritesJson", "transformRequest", "transformed", "Request", "encodeURI", "url", "err", "message", "emptyObj", "setFirstBackground", "mapOrLayer", "some", "Layer", "setBackground", "getBackgroundColor", "Map", "LayerGroup", "getLayers", "push", "setupBackgroundLayer", "applyBackground", "extentFromTileJSON", "tileJSON", "projection", "const", "bounds", "ll", "fromLonLat", "tr", "getProjection", "getExtent", "sourceOptionsFromTileJSON", "glSource", "options", "tileJSONSource", "TileJSON", "tileSize", "tileJSONDoc", "getTileJSON", "tileGrid", "getTileGrid", "extent", "projectionExtent", "minZoom", "minzoom", "maxZoom", "maxzoom", "sourceOptions", "attributions", "getAttributions", "TileGrid", "origin", "getTopLeft", "getOrigin", "resolutions", "getTileResolutions", "slice", "getTileSize", "Array", "isArray", "tiles", "urls", "url", "getBackgroundColor", "glLayer", "resolution", "functionCache", "background", "id", "type", "layout", "paint", "zoom", "getZoomForResolution", "defaultResolutions", "let", "bg", "opacity", "undefined", "getValue", "emptyObj", "visibility", "_colorWithOpacity", "setupBackgroundLayer", "div", "document", "createElement", "className", "style", "position", "width", "height", "Layer", "source", "Source", "render", "frameState", "color", "viewState", "backgroundColor", "setupVectorSource", "styleUrl", "Promise", "resolve", "reject", "getTileJson", "then", "format", "MVT", "VectorTileSource", "catch", "getBboxTemplate", "projection", "const", "projCode", "getCode", "toLowerCase", "replace", "const", "geoJsonFormat", "GeoJSON", "setupGeoJSONSource", "glSource", "styleUrl", "options", "data", "sourceOptions", "let", "geoJsonUrl", "normalizeSourceUrl", "accessToken", "accessTokenParam", "location", "href", "transformRequest", "transformed", "Request", "decodeURI", "url", "test", "extentUrl", "extent", "resolution", "projection", "bboxTemplate", "getBboxTemplate", "replace", "join", "getCode", "source", "VectorSource", "attributions", "attribution", "format", "strategy", "bboxStrategy", "set", "features", "readFeatures", "featureProjection", "getUserProjection", "Object", "assign", "error", "VectorTile_default", "source", "interpolate", "offset", "buffer", "Layer_default", "create", "DataTile_default", "tileTextures", "frameState", "TileLayer_default", "array", "color", "types", "color", "color", "TileLayer_default"]
}
